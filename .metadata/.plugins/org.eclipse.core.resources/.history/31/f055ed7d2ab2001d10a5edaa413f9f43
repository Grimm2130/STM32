/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

// RCC AHB1 clock enable
#define RCC_AHB1_CLK_EN (*(uint32_t*) 0x40023810)

/** ADDRESS OFFSETS **/
#define MODE_OFFSET 0x00													// mode address offset
#define PULL_UP_DOWN_OFFSET 0x0C											// pull up/down offset
#define INPUT_DATA_OFFSET 0x10												// input data offset
#define OUTPUT_DATA_OFFSET 0x14												// output data offset

/*** INPUTS ***/
// GPI0A addresses
#define GPIO_A_BASE_ADDR 0x40020000											// Base Address
// Register access
#define GPIO_A_MODE_ADDR (*(uint32_t*) (GPIO_A_BASE_ADDR + MODE_OFFSET))		// Mode register
#define GPIO_A_PULL_UP_DOWN (*(uint32_t*) (GPIO_A_BASE_ADDR + PULL_UP_DOWN_OFFSET))				// Pull up/down register
#define GPIO_A_INPUT_DATA_REG (*(uint32_t*) (GPIO_A_BASE_ADDR + INPUT_DATA_OFFSET))
/*** OUTPUTS ***/

// GPIOB addresses
#define GPIO_D_BASE_ADDR 0x40020C00
// register access
#define GPIO_D_MODE_ADDR (*(uint32_t*) (GPIO_D_BASE_ADDR + MODE_OFFSET))		// Mode register
#define GPIO_D_OUTPUT_DATA_REG (*(uint32_t*) (GPIO_D_BASE_ADDR + OUTPUT_DATA_OFFSET))


/**
 * Description:
 *
 * 	A key press should trigger a print statement of the key that was pressed
 * 	- As input ports, we'll be using PORTA [0:3]
 * 	- As output ports, we'll be using PORTB ([0:3],[12;15]) => ( keypad, LEDs)
 *
 */

void setupPins(){
	// enable the clock for gpios A and D
	RCC_AHB1_CLK_EN |= 0x9;

	// Set up port A as an input register
	// set mode
}


int main(void)
{


	for(;;);
}
