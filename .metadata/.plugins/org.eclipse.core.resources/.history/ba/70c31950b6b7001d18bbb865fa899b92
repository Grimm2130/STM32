/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

// Interrupt configuration addresses
#define NVIC_ISER0 (*(uint32_t volatile*) 0xE000E100)		// Set-enable
#define NVIC_ICER0 (*(uint32_t volatile*) 0XE000E180)		// Clear-enable
#define NVIC_ISPR0 (*(uint32_t volatile*) 0XE000E200)		// Set pending
#define NVIC_ICPR0 (*(uint32_t volatile*) 0XE000E280)		// Clear pending
// Priority
#define NVIC_ICPR0 (*(uint32_t volatile*) 0XE000E280)


// Global interrupt positions
#define TIM2_INT_POS 28
#define I2C_1_INT_POS 31

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

//

int main(void)
{


    /* Loop forever */
	for(;;);
}
