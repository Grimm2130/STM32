/*
 * stm32f4xx_gpio_drivers.c
 *
 *  Created on: Mar 13, 2023
 *      Author: chimaochiagha
 */


#include "stm32f4xx_gpio_driver.h"


/**
 *	fn			: 	GPIO handler function
 *
 *	des 		: 	This is used to instnatiate a gpio pin to a spcified output mode
 *
 *	@param(1)	:	Pointer to struct of a GPIO address handler
 *	@param(2)	:	uint8_t representation of state (find under "MODES" in Header file's macros section)
 *
 *	note		: 	None
 *
 *	ret			: 	None
 */
void GPIOx_handler_init(gpio_hndlr_t* pGpio, uint8_t pinNum, uint8_t state){
	// Set Mode of pin
	switch(state){
		case INPUT:
			pGpio->MODE_R &= ~(~state << (2*pinNum));
			break;
		case OUTPUT:
			pGpio->MODE_R |= (state << (2*pinNum));
			break;
		case ALT:
			pGpio->MODE_R |= (state << (2*pinNum));
			break;
		case ANLG:
			// #TODO
			break;
		default:
			break;
	}
}

/**
 *	fn			:		Enables the GPIO on the AHB1 bus
 *
 *	des 		:		Loops Checks for the address of the GPIO's Address offset on the memory map
 *						and enables the equivalent bit offset on the RCC_abh1_en register
 *
 *	@param(1)	:
 *	@param(2)	:
 *
 *	note		:
 *
 *	ret			:
 */
void GPIOx_clk_en(gpio_hndlr_t* pGpio){
	// define an instance of the RCC handler
	rcc_hndlr_t* pRcc_handler = (rcc_hndlr_t*) RCC_BASE_ADDR;

	// Loop through the gpio addresses
	uint32_t offset = 0;
	for(uint32_t i = GPIO_A_BASE_ADDR; i <= GPIO_K_BASE_ADDR; i+= GPIOx_ADDR_OFF){
		// Check if at GPIO address
		if(i == (uint32_t) pGpio){
			break;
		}
		offset++;
	}
	// enable the GPIO at that offset
	pRcc_handler->RCC_AHB1_ENR |= (EN << offset);
}


/**
 *	fn			:
 *
 *	des 		:
 *
 *	@param(1)	:
 *	@param(2)	:
 *
 *	note		:
 *
 *	ret			:
 */
uint8_t Gpiox_read(gpio_hndlr_t* pGpio, uint8_t pinNum){

	return 0;
}


/**
 *	fn			:
 *
 *	des 		:
 *
 *	@param(1)	:
 *	@param(2)	:
 *
 *	note		:
 *
 *	ret			:
 */
void Gpiox_write(gpio_hndlr_t* pGpio, uint8_t pinNum, uint8_t state){

}


/**
 *	fn			:
 *
 *	des 		:
 *
 *	@param(1)	:
 *	@param(2)	:
 *
 *	note		:
 *
 *	ret			:
 */
void Gpiox_alt_en(gpio_hndlr_t* pGpio, uint8_t pinNum, uint8_t alt_fn){

}


/**
 *	fn			:
 *
 *	des 		:
 *
 *	@param(1)	:
 *	@param(2)	:
 *
 *	note		:
 *
 *	ret			:
 */
void Gpiox_attach_int(gpio_hndlr_t* pGpio, uint8_t pinNum, uint8_t irq_num){

}



