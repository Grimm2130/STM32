/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>


__attribute__((naked)) void trigger_SVC(uint32_t svc_code, uint32_t op1 = 1, uint32_t op2 = 2){
//	,
	asm volatile("MOV R1, #2");
	asm volatile("MOV R2, #2");
	asm volatile("SVC  %0" : : "r"(num));
}


int main(void)
{
    /* Loop forever */
	for(;;);
}


__attribute__((naked)) void SVC_Handler(void){
	// read in and store the address of the stack pointer
	asm volatile("MRS R0, MSP");
	// Get the value of the first operand
	asm volatile("")
	//
	// read in the value of the SVC's code number
	asm volatile("")

	asm volatile("B ");					// #{TODO: Add function header to branch to}
}

void svc_handler_c(uint32_t* sp_base_addr){
	// store the 2nd and 3rd operands of the base address
}
