/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	asm volatile("SVC 5");
    /* Loop forever */
	for(;;);
}

__attribute__((naked)) void SVC_Handler(){
	// Load the PC address into a register and pass to the next function for operation
	asm volatile("MRS R0, MSP");
	asm volatile("B svc_handler_2");
}

void svc_handler_2(uint32_t* stack_base_addr){
	uint32_t* pc_addr = (uint32_t*) stack_base_addr[6];
	pc_addr -= 2;
	uint8_t svc_num = *pc_addr;
	printf("SVC number: %d\n", svc_num);

	// Increment the SVC number by 4
	svc_num += 4;

	// return to thread mode
//	asm volatile("B %0" : : "r"());
}
