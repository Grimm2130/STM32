/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>


/**
 * Define the address to the Register enabling
 */
// NVIC IRQ peripheral enabling
#define NVIC_ISER1 (*(uint32_t volatile*) 0xE000E104)		// Set-enable registers for IRQs 32 - 63
#define NVIC_ICER1 (*(uint32_t volatile*) 0XE000E184)		// Clear-enable registers
#define NVIC_ISPR1 (*(uint32_t volatile*) 0XE000E204)		// Set-Pending registers
#define NVIC_ICPR1 (*(uint32_t volatile*) 0XE000E284)		// Clear pending registers

// Address for USART3 in vector table
#define USART_INT_VECT_ADDR (*(uint32_t volatile*) 0x000000DC)	// USART global interrupt


#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	// Manually pend the USART3 interrupt
	NVIC_ISPR1 |= 0x80;
	// Enable the USART3 IRQ number in the NVIC


    /* Loop forever */
	for(;;);
}
