
interrupt_priority.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000d74  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000008c  08000f1c  08000f1c  00010f1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000fa8  08000fa8  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000fa8  08000fa8  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000fa8  08000fa8  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000fa8  08000fa8  00010fa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000fac  08000fac  00010fac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000fb0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000996  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000304  00000000  00000000  00020a24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000138  00000000  00000000  00020d28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000100  00000000  00000000  00020e60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c0a  00000000  00000000  00020f60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001425  00000000  00000000  00023b6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009474  00000000  00000000  00024f8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e403  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000a8c  00000000  00000000  0002e454  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000064 	.word	0x20000064
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000f04 	.word	0x08000f04

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000068 	.word	0x20000068
 80001e4:	08000f04 	.word	0x08000f04

080001e8 <interrupt_setup>:
// Global interrupt positions
#define TIM2_INT_POS 28
#define I2C_1_INT_POS 31


void interrupt_setup(){
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0
	// Set-pending
	NVIC_ISPR0 |= (1 << (TIM2_INT_POS % 32));				// TIM2 interrupt set as pending
 80001ec:	4b0a      	ldr	r3, [pc, #40]	; (8000218 <interrupt_setup+0x30>)
 80001ee:	681b      	ldr	r3, [r3, #0]
 80001f0:	4a09      	ldr	r2, [pc, #36]	; (8000218 <interrupt_setup+0x30>)
 80001f2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80001f6:	6013      	str	r3, [r2, #0]
	NVIC_ISPR0 |= (1 << (I2C_1_INT_POS % 32));				// 1C2_1 interrupt set as pending
 80001f8:	4b07      	ldr	r3, [pc, #28]	; (8000218 <interrupt_setup+0x30>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	4a06      	ldr	r2, [pc, #24]	; (8000218 <interrupt_setup+0x30>)
 80001fe:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000202:	6013      	str	r3, [r2, #0]
	// Set enable
	NVIC_ISER0 |= (1 << (TIM2_INT_POS % 32));				// TIM2 interrupt enable
 8000204:	4b05      	ldr	r3, [pc, #20]	; (800021c <interrupt_setup+0x34>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a04      	ldr	r2, [pc, #16]	; (800021c <interrupt_setup+0x34>)
 800020a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800020e:	6013      	str	r3, [r2, #0]
//	NVIC_ISER0 |= (1 << (I2C_1_INT_POS % 32));				// 1C2_1 interrupt enable

	// delay
//	for(uint16_t i = 0; i < 2400; i++);

}
 8000210:	bf00      	nop
 8000212:	46bd      	mov	sp, r7
 8000214:	bc80      	pop	{r7}
 8000216:	4770      	bx	lr
 8000218:	e000e200 	.word	0xe000e200
 800021c:	e000e100 	.word	0xe000e100

08000220 <trigger_priority_configured_interrupt>:


void trigger_priority_configured_interrupt(){
 8000220:	b580      	push	{r7, lr}
 8000222:	af00      	add	r7, sp, #0
	// Clear the priority field
	NVIC_IPR_28 &= ~(0xFF);
 8000224:	4b0a      	ldr	r3, [pc, #40]	; (8000250 <trigger_priority_configured_interrupt+0x30>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	4a09      	ldr	r2, [pc, #36]	; (8000250 <trigger_priority_configured_interrupt+0x30>)
 800022a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800022e:	6013      	str	r3, [r2, #0]
	// Set the priority of the TIM2
	NVIC_IPR_28 |= 0xA0;
 8000230:	4b07      	ldr	r3, [pc, #28]	; (8000250 <trigger_priority_configured_interrupt+0x30>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	4a06      	ldr	r2, [pc, #24]	; (8000250 <trigger_priority_configured_interrupt+0x30>)
 8000236:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 800023a:	6013      	str	r3, [r2, #0]
	// Set the priority of the IC2_1
	NVIC_IPR_28 |= 0x20000000;
 800023c:	4b04      	ldr	r3, [pc, #16]	; (8000250 <trigger_priority_configured_interrupt+0x30>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	4a03      	ldr	r2, [pc, #12]	; (8000250 <trigger_priority_configured_interrupt+0x30>)
 8000242:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000246:	6013      	str	r3, [r2, #0]

	// Trigger interrupt
	interrupt_setup();
 8000248:	f7ff ffce 	bl	80001e8 <interrupt_setup>
}
 800024c:	bf00      	nop
 800024e:	bd80      	pop	{r7, pc}
 8000250:	e000e41c 	.word	0xe000e41c

08000254 <main>:


int main(void)
{
 8000254:	b580      	push	{r7, lr}
 8000256:	af00      	add	r7, sp, #0
//	interrupt_setup();
//
//	printf("Setting priorities\n");

	trigger_priority_configured_interrupt();
 8000258:	f7ff ffe2 	bl	8000220 <trigger_priority_configured_interrupt>

	// Clear pending
	NVIC_ICPR0 |= (1 << (TIM2_INT_POS % 32));				// TIM2 interrupt enable
 800025c:	4b0c      	ldr	r3, [pc, #48]	; (8000290 <main+0x3c>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4a0b      	ldr	r2, [pc, #44]	; (8000290 <main+0x3c>)
 8000262:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000266:	6013      	str	r3, [r2, #0]
	NVIC_ICPR0 |= (1 << (I2C_1_INT_POS % 32));				// 1C2_1 interrupt enable
 8000268:	4b09      	ldr	r3, [pc, #36]	; (8000290 <main+0x3c>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a08      	ldr	r2, [pc, #32]	; (8000290 <main+0x3c>)
 800026e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000272:	6013      	str	r3, [r2, #0]
	// Disable interrupts
	NVIC_ICER0 |= (1 << (TIM2_INT_POS % 32));				// TIM2 interrupt enable
 8000274:	4b07      	ldr	r3, [pc, #28]	; (8000294 <main+0x40>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	4a06      	ldr	r2, [pc, #24]	; (8000294 <main+0x40>)
 800027a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800027e:	6013      	str	r3, [r2, #0]
	NVIC_ICER0 |= (1 << (I2C_1_INT_POS % 32));				// 1C2_1 interrupt enable
 8000280:	4b04      	ldr	r3, [pc, #16]	; (8000294 <main+0x40>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	4a03      	ldr	r2, [pc, #12]	; (8000294 <main+0x40>)
 8000286:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800028a:	6013      	str	r3, [r2, #0]

    /* Loop forever */
	for(;;);
 800028c:	e7fe      	b.n	800028c <main+0x38>
 800028e:	bf00      	nop
 8000290:	e000e280 	.word	0xe000e280
 8000294:	e000e180 	.word	0xe000e180

08000298 <TIM2_IRQHandler>:
}


// ISR's
void TIM2_IRQHandler(){
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
	NVIC_ISER0 |= (1 << (I2C_1_INT_POS % 32));
 800029c:	4b05      	ldr	r3, [pc, #20]	; (80002b4 <TIM2_IRQHandler+0x1c>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a04      	ldr	r2, [pc, #16]	; (80002b4 <TIM2_IRQHandler+0x1c>)
 80002a2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80002a6:	6013      	str	r3, [r2, #0]
	printf("In TIM2 interrupt\n");
 80002a8:	4803      	ldr	r0, [pc, #12]	; (80002b8 <TIM2_IRQHandler+0x20>)
 80002aa:	f000 f9a1 	bl	80005f0 <puts>
}
 80002ae:	bf00      	nop
 80002b0:	bd80      	pop	{r7, pc}
 80002b2:	bf00      	nop
 80002b4:	e000e100 	.word	0xe000e100
 80002b8:	08000f1c 	.word	0x08000f1c

080002bc <I2C1_EV_IRQHandler>:


void I2C1_EV_IRQHandler(){
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
	printf("In IC2_1 interrupt\n");
 80002c0:	4802      	ldr	r0, [pc, #8]	; (80002cc <I2C1_EV_IRQHandler+0x10>)
 80002c2:	f000 f995 	bl	80005f0 <puts>
}
 80002c6:	bf00      	nop
 80002c8:	bd80      	pop	{r7, pc}
 80002ca:	bf00      	nop
 80002cc:	08000f30 	.word	0x08000f30

080002d0 <ITM_SendChar>:

/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch){
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	4603      	mov	r3, r0
 80002d8:	71fb      	strb	r3, [r7, #7]
	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002da:	4b0e      	ldr	r3, [pc, #56]	; (8000314 <ITM_SendChar+0x44>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	4a0d      	ldr	r2, [pc, #52]	; (8000314 <ITM_SendChar+0x44>)
 80002e0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002e4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002e6:	4b0c      	ldr	r3, [pc, #48]	; (8000318 <ITM_SendChar+0x48>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	4a0b      	ldr	r2, [pc, #44]	; (8000318 <ITM_SendChar+0x48>)
 80002ec:	f043 0301 	orr.w	r3, r3, #1
 80002f0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002f2:	bf00      	nop
 80002f4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	f003 0301 	and.w	r3, r3, #1
 80002fe:	2b00      	cmp	r3, #0
 8000300:	d0f8      	beq.n	80002f4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000302:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000306:	79fb      	ldrb	r3, [r7, #7]
 8000308:	6013      	str	r3, [r2, #0]
}
 800030a:	bf00      	nop
 800030c:	370c      	adds	r7, #12
 800030e:	46bd      	mov	sp, r7
 8000310:	bc80      	pop	{r7}
 8000312:	4770      	bx	lr
 8000314:	e000edfc 	.word	0xe000edfc
 8000318:	e0000e00 	.word	0xe0000e00

0800031c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	b086      	sub	sp, #24
 8000320:	af00      	add	r7, sp, #0
 8000322:	60f8      	str	r0, [r7, #12]
 8000324:	60b9      	str	r1, [r7, #8]
 8000326:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000328:	2300      	movs	r3, #0
 800032a:	617b      	str	r3, [r7, #20]
 800032c:	e00a      	b.n	8000344 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800032e:	f3af 8000 	nop.w
 8000332:	4601      	mov	r1, r0
 8000334:	68bb      	ldr	r3, [r7, #8]
 8000336:	1c5a      	adds	r2, r3, #1
 8000338:	60ba      	str	r2, [r7, #8]
 800033a:	b2ca      	uxtb	r2, r1
 800033c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033e:	697b      	ldr	r3, [r7, #20]
 8000340:	3301      	adds	r3, #1
 8000342:	617b      	str	r3, [r7, #20]
 8000344:	697a      	ldr	r2, [r7, #20]
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	429a      	cmp	r2, r3
 800034a:	dbf0      	blt.n	800032e <_read+0x12>
  }

  return len;
 800034c:	687b      	ldr	r3, [r7, #4]
}
 800034e:	4618      	mov	r0, r3
 8000350:	3718      	adds	r7, #24
 8000352:	46bd      	mov	sp, r7
 8000354:	bd80      	pop	{r7, pc}

08000356 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000356:	b580      	push	{r7, lr}
 8000358:	b086      	sub	sp, #24
 800035a:	af00      	add	r7, sp, #0
 800035c:	60f8      	str	r0, [r7, #12]
 800035e:	60b9      	str	r1, [r7, #8]
 8000360:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000362:	2300      	movs	r3, #0
 8000364:	617b      	str	r3, [r7, #20]
 8000366:	e009      	b.n	800037c <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 8000368:	68bb      	ldr	r3, [r7, #8]
 800036a:	1c5a      	adds	r2, r3, #1
 800036c:	60ba      	str	r2, [r7, #8]
 800036e:	781b      	ldrb	r3, [r3, #0]
 8000370:	4618      	mov	r0, r3
 8000372:	f7ff ffad 	bl	80002d0 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000376:	697b      	ldr	r3, [r7, #20]
 8000378:	3301      	adds	r3, #1
 800037a:	617b      	str	r3, [r7, #20]
 800037c:	697a      	ldr	r2, [r7, #20]
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	429a      	cmp	r2, r3
 8000382:	dbf1      	blt.n	8000368 <_write+0x12>
  }
  return len;
 8000384:	687b      	ldr	r3, [r7, #4]
}
 8000386:	4618      	mov	r0, r3
 8000388:	3718      	adds	r7, #24
 800038a:	46bd      	mov	sp, r7
 800038c:	bd80      	pop	{r7, pc}

0800038e <_close>:

int _close(int file)
{
 800038e:	b480      	push	{r7}
 8000390:	b083      	sub	sp, #12
 8000392:	af00      	add	r7, sp, #0
 8000394:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000396:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800039a:	4618      	mov	r0, r3
 800039c:	370c      	adds	r7, #12
 800039e:	46bd      	mov	sp, r7
 80003a0:	bc80      	pop	{r7}
 80003a2:	4770      	bx	lr

080003a4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003a4:	b480      	push	{r7}
 80003a6:	b083      	sub	sp, #12
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]
 80003ac:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003ae:	683b      	ldr	r3, [r7, #0]
 80003b0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003b4:	605a      	str	r2, [r3, #4]
  return 0;
 80003b6:	2300      	movs	r3, #0
}
 80003b8:	4618      	mov	r0, r3
 80003ba:	370c      	adds	r7, #12
 80003bc:	46bd      	mov	sp, r7
 80003be:	bc80      	pop	{r7}
 80003c0:	4770      	bx	lr

080003c2 <_isatty>:

int _isatty(int file)
{
 80003c2:	b480      	push	{r7}
 80003c4:	b083      	sub	sp, #12
 80003c6:	af00      	add	r7, sp, #0
 80003c8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003ca:	2301      	movs	r3, #1
}
 80003cc:	4618      	mov	r0, r3
 80003ce:	370c      	adds	r7, #12
 80003d0:	46bd      	mov	sp, r7
 80003d2:	bc80      	pop	{r7}
 80003d4:	4770      	bx	lr

080003d6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003d6:	b480      	push	{r7}
 80003d8:	b085      	sub	sp, #20
 80003da:	af00      	add	r7, sp, #0
 80003dc:	60f8      	str	r0, [r7, #12]
 80003de:	60b9      	str	r1, [r7, #8]
 80003e0:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003e2:	2300      	movs	r3, #0
}
 80003e4:	4618      	mov	r0, r3
 80003e6:	3714      	adds	r7, #20
 80003e8:	46bd      	mov	sp, r7
 80003ea:	bc80      	pop	{r7}
 80003ec:	4770      	bx	lr
	...

080003f0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003f0:	b580      	push	{r7, lr}
 80003f2:	b086      	sub	sp, #24
 80003f4:	af00      	add	r7, sp, #0
 80003f6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003f8:	4a14      	ldr	r2, [pc, #80]	; (800044c <_sbrk+0x5c>)
 80003fa:	4b15      	ldr	r3, [pc, #84]	; (8000450 <_sbrk+0x60>)
 80003fc:	1ad3      	subs	r3, r2, r3
 80003fe:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000400:	697b      	ldr	r3, [r7, #20]
 8000402:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000404:	4b13      	ldr	r3, [pc, #76]	; (8000454 <_sbrk+0x64>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	2b00      	cmp	r3, #0
 800040a:	d102      	bne.n	8000412 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800040c:	4b11      	ldr	r3, [pc, #68]	; (8000454 <_sbrk+0x64>)
 800040e:	4a12      	ldr	r2, [pc, #72]	; (8000458 <_sbrk+0x68>)
 8000410:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000412:	4b10      	ldr	r3, [pc, #64]	; (8000454 <_sbrk+0x64>)
 8000414:	681a      	ldr	r2, [r3, #0]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4413      	add	r3, r2
 800041a:	693a      	ldr	r2, [r7, #16]
 800041c:	429a      	cmp	r2, r3
 800041e:	d207      	bcs.n	8000430 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000420:	f000 f846 	bl	80004b0 <__errno>
 8000424:	4603      	mov	r3, r0
 8000426:	220c      	movs	r2, #12
 8000428:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800042a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800042e:	e009      	b.n	8000444 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000430:	4b08      	ldr	r3, [pc, #32]	; (8000454 <_sbrk+0x64>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000436:	4b07      	ldr	r3, [pc, #28]	; (8000454 <_sbrk+0x64>)
 8000438:	681a      	ldr	r2, [r3, #0]
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4413      	add	r3, r2
 800043e:	4a05      	ldr	r2, [pc, #20]	; (8000454 <_sbrk+0x64>)
 8000440:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000442:	68fb      	ldr	r3, [r7, #12]
}
 8000444:	4618      	mov	r0, r3
 8000446:	3718      	adds	r7, #24
 8000448:	46bd      	mov	sp, r7
 800044a:	bd80      	pop	{r7, pc}
 800044c:	20020000 	.word	0x20020000
 8000450:	00000400 	.word	0x00000400
 8000454:	20000080 	.word	0x20000080
 8000458:	20000098 	.word	0x20000098

0800045c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800045c:	480d      	ldr	r0, [pc, #52]	; (8000494 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800045e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000460:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000464:	480c      	ldr	r0, [pc, #48]	; (8000498 <LoopForever+0x6>)
  ldr r1, =_edata
 8000466:	490d      	ldr	r1, [pc, #52]	; (800049c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000468:	4a0d      	ldr	r2, [pc, #52]	; (80004a0 <LoopForever+0xe>)
  movs r3, #0
 800046a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800046c:	e002      	b.n	8000474 <LoopCopyDataInit>

0800046e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800046e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000470:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000472:	3304      	adds	r3, #4

08000474 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000474:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000476:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000478:	d3f9      	bcc.n	800046e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800047a:	4a0a      	ldr	r2, [pc, #40]	; (80004a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800047c:	4c0a      	ldr	r4, [pc, #40]	; (80004a8 <LoopForever+0x16>)
  movs r3, #0
 800047e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000480:	e001      	b.n	8000486 <LoopFillZerobss>

08000482 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000482:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000484:	3204      	adds	r2, #4

08000486 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000486:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000488:	d3fb      	bcc.n	8000482 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800048a:	f000 f817 	bl	80004bc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800048e:	f7ff fee1 	bl	8000254 <main>

08000492 <LoopForever>:

LoopForever:
  b LoopForever
 8000492:	e7fe      	b.n	8000492 <LoopForever>
  ldr   r0, =_estack
 8000494:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000498:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800049c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004a0:	08000fb0 	.word	0x08000fb0
  ldr r2, =_sbss
 80004a4:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004a8:	20000094 	.word	0x20000094

080004ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004ac:	e7fe      	b.n	80004ac <ADC_IRQHandler>
	...

080004b0 <__errno>:
 80004b0:	4b01      	ldr	r3, [pc, #4]	; (80004b8 <__errno+0x8>)
 80004b2:	6818      	ldr	r0, [r3, #0]
 80004b4:	4770      	bx	lr
 80004b6:	bf00      	nop
 80004b8:	20000000 	.word	0x20000000

080004bc <__libc_init_array>:
 80004bc:	b570      	push	{r4, r5, r6, lr}
 80004be:	4d0d      	ldr	r5, [pc, #52]	; (80004f4 <__libc_init_array+0x38>)
 80004c0:	4c0d      	ldr	r4, [pc, #52]	; (80004f8 <__libc_init_array+0x3c>)
 80004c2:	1b64      	subs	r4, r4, r5
 80004c4:	10a4      	asrs	r4, r4, #2
 80004c6:	2600      	movs	r6, #0
 80004c8:	42a6      	cmp	r6, r4
 80004ca:	d109      	bne.n	80004e0 <__libc_init_array+0x24>
 80004cc:	4d0b      	ldr	r5, [pc, #44]	; (80004fc <__libc_init_array+0x40>)
 80004ce:	4c0c      	ldr	r4, [pc, #48]	; (8000500 <__libc_init_array+0x44>)
 80004d0:	f000 fd18 	bl	8000f04 <_init>
 80004d4:	1b64      	subs	r4, r4, r5
 80004d6:	10a4      	asrs	r4, r4, #2
 80004d8:	2600      	movs	r6, #0
 80004da:	42a6      	cmp	r6, r4
 80004dc:	d105      	bne.n	80004ea <__libc_init_array+0x2e>
 80004de:	bd70      	pop	{r4, r5, r6, pc}
 80004e0:	f855 3b04 	ldr.w	r3, [r5], #4
 80004e4:	4798      	blx	r3
 80004e6:	3601      	adds	r6, #1
 80004e8:	e7ee      	b.n	80004c8 <__libc_init_array+0xc>
 80004ea:	f855 3b04 	ldr.w	r3, [r5], #4
 80004ee:	4798      	blx	r3
 80004f0:	3601      	adds	r6, #1
 80004f2:	e7f2      	b.n	80004da <__libc_init_array+0x1e>
 80004f4:	08000fa8 	.word	0x08000fa8
 80004f8:	08000fa8 	.word	0x08000fa8
 80004fc:	08000fa8 	.word	0x08000fa8
 8000500:	08000fac 	.word	0x08000fac

08000504 <memset>:
 8000504:	4402      	add	r2, r0
 8000506:	4603      	mov	r3, r0
 8000508:	4293      	cmp	r3, r2
 800050a:	d100      	bne.n	800050e <memset+0xa>
 800050c:	4770      	bx	lr
 800050e:	f803 1b01 	strb.w	r1, [r3], #1
 8000512:	e7f9      	b.n	8000508 <memset+0x4>

08000514 <_puts_r>:
 8000514:	b570      	push	{r4, r5, r6, lr}
 8000516:	460e      	mov	r6, r1
 8000518:	4605      	mov	r5, r0
 800051a:	b118      	cbz	r0, 8000524 <_puts_r+0x10>
 800051c:	6983      	ldr	r3, [r0, #24]
 800051e:	b90b      	cbnz	r3, 8000524 <_puts_r+0x10>
 8000520:	f000 fa44 	bl	80009ac <__sinit>
 8000524:	69ab      	ldr	r3, [r5, #24]
 8000526:	68ac      	ldr	r4, [r5, #8]
 8000528:	b913      	cbnz	r3, 8000530 <_puts_r+0x1c>
 800052a:	4628      	mov	r0, r5
 800052c:	f000 fa3e 	bl	80009ac <__sinit>
 8000530:	4b2c      	ldr	r3, [pc, #176]	; (80005e4 <_puts_r+0xd0>)
 8000532:	429c      	cmp	r4, r3
 8000534:	d120      	bne.n	8000578 <_puts_r+0x64>
 8000536:	686c      	ldr	r4, [r5, #4]
 8000538:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800053a:	07db      	lsls	r3, r3, #31
 800053c:	d405      	bmi.n	800054a <_puts_r+0x36>
 800053e:	89a3      	ldrh	r3, [r4, #12]
 8000540:	0598      	lsls	r0, r3, #22
 8000542:	d402      	bmi.n	800054a <_puts_r+0x36>
 8000544:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000546:	f000 facf 	bl	8000ae8 <__retarget_lock_acquire_recursive>
 800054a:	89a3      	ldrh	r3, [r4, #12]
 800054c:	0719      	lsls	r1, r3, #28
 800054e:	d51d      	bpl.n	800058c <_puts_r+0x78>
 8000550:	6923      	ldr	r3, [r4, #16]
 8000552:	b1db      	cbz	r3, 800058c <_puts_r+0x78>
 8000554:	3e01      	subs	r6, #1
 8000556:	68a3      	ldr	r3, [r4, #8]
 8000558:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800055c:	3b01      	subs	r3, #1
 800055e:	60a3      	str	r3, [r4, #8]
 8000560:	bb39      	cbnz	r1, 80005b2 <_puts_r+0x9e>
 8000562:	2b00      	cmp	r3, #0
 8000564:	da38      	bge.n	80005d8 <_puts_r+0xc4>
 8000566:	4622      	mov	r2, r4
 8000568:	210a      	movs	r1, #10
 800056a:	4628      	mov	r0, r5
 800056c:	f000 f848 	bl	8000600 <__swbuf_r>
 8000570:	3001      	adds	r0, #1
 8000572:	d011      	beq.n	8000598 <_puts_r+0x84>
 8000574:	250a      	movs	r5, #10
 8000576:	e011      	b.n	800059c <_puts_r+0x88>
 8000578:	4b1b      	ldr	r3, [pc, #108]	; (80005e8 <_puts_r+0xd4>)
 800057a:	429c      	cmp	r4, r3
 800057c:	d101      	bne.n	8000582 <_puts_r+0x6e>
 800057e:	68ac      	ldr	r4, [r5, #8]
 8000580:	e7da      	b.n	8000538 <_puts_r+0x24>
 8000582:	4b1a      	ldr	r3, [pc, #104]	; (80005ec <_puts_r+0xd8>)
 8000584:	429c      	cmp	r4, r3
 8000586:	bf08      	it	eq
 8000588:	68ec      	ldreq	r4, [r5, #12]
 800058a:	e7d5      	b.n	8000538 <_puts_r+0x24>
 800058c:	4621      	mov	r1, r4
 800058e:	4628      	mov	r0, r5
 8000590:	f000 f888 	bl	80006a4 <__swsetup_r>
 8000594:	2800      	cmp	r0, #0
 8000596:	d0dd      	beq.n	8000554 <_puts_r+0x40>
 8000598:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 800059c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800059e:	07da      	lsls	r2, r3, #31
 80005a0:	d405      	bmi.n	80005ae <_puts_r+0x9a>
 80005a2:	89a3      	ldrh	r3, [r4, #12]
 80005a4:	059b      	lsls	r3, r3, #22
 80005a6:	d402      	bmi.n	80005ae <_puts_r+0x9a>
 80005a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80005aa:	f000 fa9e 	bl	8000aea <__retarget_lock_release_recursive>
 80005ae:	4628      	mov	r0, r5
 80005b0:	bd70      	pop	{r4, r5, r6, pc}
 80005b2:	2b00      	cmp	r3, #0
 80005b4:	da04      	bge.n	80005c0 <_puts_r+0xac>
 80005b6:	69a2      	ldr	r2, [r4, #24]
 80005b8:	429a      	cmp	r2, r3
 80005ba:	dc06      	bgt.n	80005ca <_puts_r+0xb6>
 80005bc:	290a      	cmp	r1, #10
 80005be:	d004      	beq.n	80005ca <_puts_r+0xb6>
 80005c0:	6823      	ldr	r3, [r4, #0]
 80005c2:	1c5a      	adds	r2, r3, #1
 80005c4:	6022      	str	r2, [r4, #0]
 80005c6:	7019      	strb	r1, [r3, #0]
 80005c8:	e7c5      	b.n	8000556 <_puts_r+0x42>
 80005ca:	4622      	mov	r2, r4
 80005cc:	4628      	mov	r0, r5
 80005ce:	f000 f817 	bl	8000600 <__swbuf_r>
 80005d2:	3001      	adds	r0, #1
 80005d4:	d1bf      	bne.n	8000556 <_puts_r+0x42>
 80005d6:	e7df      	b.n	8000598 <_puts_r+0x84>
 80005d8:	6823      	ldr	r3, [r4, #0]
 80005da:	250a      	movs	r5, #10
 80005dc:	1c5a      	adds	r2, r3, #1
 80005de:	6022      	str	r2, [r4, #0]
 80005e0:	701d      	strb	r5, [r3, #0]
 80005e2:	e7db      	b.n	800059c <_puts_r+0x88>
 80005e4:	08000f68 	.word	0x08000f68
 80005e8:	08000f88 	.word	0x08000f88
 80005ec:	08000f48 	.word	0x08000f48

080005f0 <puts>:
 80005f0:	4b02      	ldr	r3, [pc, #8]	; (80005fc <puts+0xc>)
 80005f2:	4601      	mov	r1, r0
 80005f4:	6818      	ldr	r0, [r3, #0]
 80005f6:	f7ff bf8d 	b.w	8000514 <_puts_r>
 80005fa:	bf00      	nop
 80005fc:	20000000 	.word	0x20000000

08000600 <__swbuf_r>:
 8000600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000602:	460e      	mov	r6, r1
 8000604:	4614      	mov	r4, r2
 8000606:	4605      	mov	r5, r0
 8000608:	b118      	cbz	r0, 8000612 <__swbuf_r+0x12>
 800060a:	6983      	ldr	r3, [r0, #24]
 800060c:	b90b      	cbnz	r3, 8000612 <__swbuf_r+0x12>
 800060e:	f000 f9cd 	bl	80009ac <__sinit>
 8000612:	4b21      	ldr	r3, [pc, #132]	; (8000698 <__swbuf_r+0x98>)
 8000614:	429c      	cmp	r4, r3
 8000616:	d12b      	bne.n	8000670 <__swbuf_r+0x70>
 8000618:	686c      	ldr	r4, [r5, #4]
 800061a:	69a3      	ldr	r3, [r4, #24]
 800061c:	60a3      	str	r3, [r4, #8]
 800061e:	89a3      	ldrh	r3, [r4, #12]
 8000620:	071a      	lsls	r2, r3, #28
 8000622:	d52f      	bpl.n	8000684 <__swbuf_r+0x84>
 8000624:	6923      	ldr	r3, [r4, #16]
 8000626:	b36b      	cbz	r3, 8000684 <__swbuf_r+0x84>
 8000628:	6923      	ldr	r3, [r4, #16]
 800062a:	6820      	ldr	r0, [r4, #0]
 800062c:	1ac0      	subs	r0, r0, r3
 800062e:	6963      	ldr	r3, [r4, #20]
 8000630:	b2f6      	uxtb	r6, r6
 8000632:	4283      	cmp	r3, r0
 8000634:	4637      	mov	r7, r6
 8000636:	dc04      	bgt.n	8000642 <__swbuf_r+0x42>
 8000638:	4621      	mov	r1, r4
 800063a:	4628      	mov	r0, r5
 800063c:	f000 f922 	bl	8000884 <_fflush_r>
 8000640:	bb30      	cbnz	r0, 8000690 <__swbuf_r+0x90>
 8000642:	68a3      	ldr	r3, [r4, #8]
 8000644:	3b01      	subs	r3, #1
 8000646:	60a3      	str	r3, [r4, #8]
 8000648:	6823      	ldr	r3, [r4, #0]
 800064a:	1c5a      	adds	r2, r3, #1
 800064c:	6022      	str	r2, [r4, #0]
 800064e:	701e      	strb	r6, [r3, #0]
 8000650:	6963      	ldr	r3, [r4, #20]
 8000652:	3001      	adds	r0, #1
 8000654:	4283      	cmp	r3, r0
 8000656:	d004      	beq.n	8000662 <__swbuf_r+0x62>
 8000658:	89a3      	ldrh	r3, [r4, #12]
 800065a:	07db      	lsls	r3, r3, #31
 800065c:	d506      	bpl.n	800066c <__swbuf_r+0x6c>
 800065e:	2e0a      	cmp	r6, #10
 8000660:	d104      	bne.n	800066c <__swbuf_r+0x6c>
 8000662:	4621      	mov	r1, r4
 8000664:	4628      	mov	r0, r5
 8000666:	f000 f90d 	bl	8000884 <_fflush_r>
 800066a:	b988      	cbnz	r0, 8000690 <__swbuf_r+0x90>
 800066c:	4638      	mov	r0, r7
 800066e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000670:	4b0a      	ldr	r3, [pc, #40]	; (800069c <__swbuf_r+0x9c>)
 8000672:	429c      	cmp	r4, r3
 8000674:	d101      	bne.n	800067a <__swbuf_r+0x7a>
 8000676:	68ac      	ldr	r4, [r5, #8]
 8000678:	e7cf      	b.n	800061a <__swbuf_r+0x1a>
 800067a:	4b09      	ldr	r3, [pc, #36]	; (80006a0 <__swbuf_r+0xa0>)
 800067c:	429c      	cmp	r4, r3
 800067e:	bf08      	it	eq
 8000680:	68ec      	ldreq	r4, [r5, #12]
 8000682:	e7ca      	b.n	800061a <__swbuf_r+0x1a>
 8000684:	4621      	mov	r1, r4
 8000686:	4628      	mov	r0, r5
 8000688:	f000 f80c 	bl	80006a4 <__swsetup_r>
 800068c:	2800      	cmp	r0, #0
 800068e:	d0cb      	beq.n	8000628 <__swbuf_r+0x28>
 8000690:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000694:	e7ea      	b.n	800066c <__swbuf_r+0x6c>
 8000696:	bf00      	nop
 8000698:	08000f68 	.word	0x08000f68
 800069c:	08000f88 	.word	0x08000f88
 80006a0:	08000f48 	.word	0x08000f48

080006a4 <__swsetup_r>:
 80006a4:	4b32      	ldr	r3, [pc, #200]	; (8000770 <__swsetup_r+0xcc>)
 80006a6:	b570      	push	{r4, r5, r6, lr}
 80006a8:	681d      	ldr	r5, [r3, #0]
 80006aa:	4606      	mov	r6, r0
 80006ac:	460c      	mov	r4, r1
 80006ae:	b125      	cbz	r5, 80006ba <__swsetup_r+0x16>
 80006b0:	69ab      	ldr	r3, [r5, #24]
 80006b2:	b913      	cbnz	r3, 80006ba <__swsetup_r+0x16>
 80006b4:	4628      	mov	r0, r5
 80006b6:	f000 f979 	bl	80009ac <__sinit>
 80006ba:	4b2e      	ldr	r3, [pc, #184]	; (8000774 <__swsetup_r+0xd0>)
 80006bc:	429c      	cmp	r4, r3
 80006be:	d10f      	bne.n	80006e0 <__swsetup_r+0x3c>
 80006c0:	686c      	ldr	r4, [r5, #4]
 80006c2:	89a3      	ldrh	r3, [r4, #12]
 80006c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006c8:	0719      	lsls	r1, r3, #28
 80006ca:	d42c      	bmi.n	8000726 <__swsetup_r+0x82>
 80006cc:	06dd      	lsls	r5, r3, #27
 80006ce:	d411      	bmi.n	80006f4 <__swsetup_r+0x50>
 80006d0:	2309      	movs	r3, #9
 80006d2:	6033      	str	r3, [r6, #0]
 80006d4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006d8:	81a3      	strh	r3, [r4, #12]
 80006da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80006de:	e03e      	b.n	800075e <__swsetup_r+0xba>
 80006e0:	4b25      	ldr	r3, [pc, #148]	; (8000778 <__swsetup_r+0xd4>)
 80006e2:	429c      	cmp	r4, r3
 80006e4:	d101      	bne.n	80006ea <__swsetup_r+0x46>
 80006e6:	68ac      	ldr	r4, [r5, #8]
 80006e8:	e7eb      	b.n	80006c2 <__swsetup_r+0x1e>
 80006ea:	4b24      	ldr	r3, [pc, #144]	; (800077c <__swsetup_r+0xd8>)
 80006ec:	429c      	cmp	r4, r3
 80006ee:	bf08      	it	eq
 80006f0:	68ec      	ldreq	r4, [r5, #12]
 80006f2:	e7e6      	b.n	80006c2 <__swsetup_r+0x1e>
 80006f4:	0758      	lsls	r0, r3, #29
 80006f6:	d512      	bpl.n	800071e <__swsetup_r+0x7a>
 80006f8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006fa:	b141      	cbz	r1, 800070e <__swsetup_r+0x6a>
 80006fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000700:	4299      	cmp	r1, r3
 8000702:	d002      	beq.n	800070a <__swsetup_r+0x66>
 8000704:	4630      	mov	r0, r6
 8000706:	f000 fa57 	bl	8000bb8 <_free_r>
 800070a:	2300      	movs	r3, #0
 800070c:	6363      	str	r3, [r4, #52]	; 0x34
 800070e:	89a3      	ldrh	r3, [r4, #12]
 8000710:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000714:	81a3      	strh	r3, [r4, #12]
 8000716:	2300      	movs	r3, #0
 8000718:	6063      	str	r3, [r4, #4]
 800071a:	6923      	ldr	r3, [r4, #16]
 800071c:	6023      	str	r3, [r4, #0]
 800071e:	89a3      	ldrh	r3, [r4, #12]
 8000720:	f043 0308 	orr.w	r3, r3, #8
 8000724:	81a3      	strh	r3, [r4, #12]
 8000726:	6923      	ldr	r3, [r4, #16]
 8000728:	b94b      	cbnz	r3, 800073e <__swsetup_r+0x9a>
 800072a:	89a3      	ldrh	r3, [r4, #12]
 800072c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000730:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000734:	d003      	beq.n	800073e <__swsetup_r+0x9a>
 8000736:	4621      	mov	r1, r4
 8000738:	4630      	mov	r0, r6
 800073a:	f000 f9fd 	bl	8000b38 <__smakebuf_r>
 800073e:	89a0      	ldrh	r0, [r4, #12]
 8000740:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000744:	f010 0301 	ands.w	r3, r0, #1
 8000748:	d00a      	beq.n	8000760 <__swsetup_r+0xbc>
 800074a:	2300      	movs	r3, #0
 800074c:	60a3      	str	r3, [r4, #8]
 800074e:	6963      	ldr	r3, [r4, #20]
 8000750:	425b      	negs	r3, r3
 8000752:	61a3      	str	r3, [r4, #24]
 8000754:	6923      	ldr	r3, [r4, #16]
 8000756:	b943      	cbnz	r3, 800076a <__swsetup_r+0xc6>
 8000758:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800075c:	d1ba      	bne.n	80006d4 <__swsetup_r+0x30>
 800075e:	bd70      	pop	{r4, r5, r6, pc}
 8000760:	0781      	lsls	r1, r0, #30
 8000762:	bf58      	it	pl
 8000764:	6963      	ldrpl	r3, [r4, #20]
 8000766:	60a3      	str	r3, [r4, #8]
 8000768:	e7f4      	b.n	8000754 <__swsetup_r+0xb0>
 800076a:	2000      	movs	r0, #0
 800076c:	e7f7      	b.n	800075e <__swsetup_r+0xba>
 800076e:	bf00      	nop
 8000770:	20000000 	.word	0x20000000
 8000774:	08000f68 	.word	0x08000f68
 8000778:	08000f88 	.word	0x08000f88
 800077c:	08000f48 	.word	0x08000f48

08000780 <__sflush_r>:
 8000780:	898a      	ldrh	r2, [r1, #12]
 8000782:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000784:	4605      	mov	r5, r0
 8000786:	0710      	lsls	r0, r2, #28
 8000788:	460c      	mov	r4, r1
 800078a:	d457      	bmi.n	800083c <__sflush_r+0xbc>
 800078c:	684b      	ldr	r3, [r1, #4]
 800078e:	2b00      	cmp	r3, #0
 8000790:	dc04      	bgt.n	800079c <__sflush_r+0x1c>
 8000792:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000794:	2b00      	cmp	r3, #0
 8000796:	dc01      	bgt.n	800079c <__sflush_r+0x1c>
 8000798:	2000      	movs	r0, #0
 800079a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800079c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800079e:	2e00      	cmp	r6, #0
 80007a0:	d0fa      	beq.n	8000798 <__sflush_r+0x18>
 80007a2:	2300      	movs	r3, #0
 80007a4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80007a8:	682f      	ldr	r7, [r5, #0]
 80007aa:	602b      	str	r3, [r5, #0]
 80007ac:	d032      	beq.n	8000814 <__sflush_r+0x94>
 80007ae:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007b0:	89a3      	ldrh	r3, [r4, #12]
 80007b2:	075a      	lsls	r2, r3, #29
 80007b4:	d505      	bpl.n	80007c2 <__sflush_r+0x42>
 80007b6:	6863      	ldr	r3, [r4, #4]
 80007b8:	1ac0      	subs	r0, r0, r3
 80007ba:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007bc:	b10b      	cbz	r3, 80007c2 <__sflush_r+0x42>
 80007be:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007c0:	1ac0      	subs	r0, r0, r3
 80007c2:	2300      	movs	r3, #0
 80007c4:	4602      	mov	r2, r0
 80007c6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007c8:	6a21      	ldr	r1, [r4, #32]
 80007ca:	4628      	mov	r0, r5
 80007cc:	47b0      	blx	r6
 80007ce:	1c43      	adds	r3, r0, #1
 80007d0:	89a3      	ldrh	r3, [r4, #12]
 80007d2:	d106      	bne.n	80007e2 <__sflush_r+0x62>
 80007d4:	6829      	ldr	r1, [r5, #0]
 80007d6:	291d      	cmp	r1, #29
 80007d8:	d82c      	bhi.n	8000834 <__sflush_r+0xb4>
 80007da:	4a29      	ldr	r2, [pc, #164]	; (8000880 <__sflush_r+0x100>)
 80007dc:	40ca      	lsrs	r2, r1
 80007de:	07d6      	lsls	r6, r2, #31
 80007e0:	d528      	bpl.n	8000834 <__sflush_r+0xb4>
 80007e2:	2200      	movs	r2, #0
 80007e4:	6062      	str	r2, [r4, #4]
 80007e6:	04d9      	lsls	r1, r3, #19
 80007e8:	6922      	ldr	r2, [r4, #16]
 80007ea:	6022      	str	r2, [r4, #0]
 80007ec:	d504      	bpl.n	80007f8 <__sflush_r+0x78>
 80007ee:	1c42      	adds	r2, r0, #1
 80007f0:	d101      	bne.n	80007f6 <__sflush_r+0x76>
 80007f2:	682b      	ldr	r3, [r5, #0]
 80007f4:	b903      	cbnz	r3, 80007f8 <__sflush_r+0x78>
 80007f6:	6560      	str	r0, [r4, #84]	; 0x54
 80007f8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007fa:	602f      	str	r7, [r5, #0]
 80007fc:	2900      	cmp	r1, #0
 80007fe:	d0cb      	beq.n	8000798 <__sflush_r+0x18>
 8000800:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000804:	4299      	cmp	r1, r3
 8000806:	d002      	beq.n	800080e <__sflush_r+0x8e>
 8000808:	4628      	mov	r0, r5
 800080a:	f000 f9d5 	bl	8000bb8 <_free_r>
 800080e:	2000      	movs	r0, #0
 8000810:	6360      	str	r0, [r4, #52]	; 0x34
 8000812:	e7c2      	b.n	800079a <__sflush_r+0x1a>
 8000814:	6a21      	ldr	r1, [r4, #32]
 8000816:	2301      	movs	r3, #1
 8000818:	4628      	mov	r0, r5
 800081a:	47b0      	blx	r6
 800081c:	1c41      	adds	r1, r0, #1
 800081e:	d1c7      	bne.n	80007b0 <__sflush_r+0x30>
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b00      	cmp	r3, #0
 8000824:	d0c4      	beq.n	80007b0 <__sflush_r+0x30>
 8000826:	2b1d      	cmp	r3, #29
 8000828:	d001      	beq.n	800082e <__sflush_r+0xae>
 800082a:	2b16      	cmp	r3, #22
 800082c:	d101      	bne.n	8000832 <__sflush_r+0xb2>
 800082e:	602f      	str	r7, [r5, #0]
 8000830:	e7b2      	b.n	8000798 <__sflush_r+0x18>
 8000832:	89a3      	ldrh	r3, [r4, #12]
 8000834:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000838:	81a3      	strh	r3, [r4, #12]
 800083a:	e7ae      	b.n	800079a <__sflush_r+0x1a>
 800083c:	690f      	ldr	r7, [r1, #16]
 800083e:	2f00      	cmp	r7, #0
 8000840:	d0aa      	beq.n	8000798 <__sflush_r+0x18>
 8000842:	0793      	lsls	r3, r2, #30
 8000844:	680e      	ldr	r6, [r1, #0]
 8000846:	bf08      	it	eq
 8000848:	694b      	ldreq	r3, [r1, #20]
 800084a:	600f      	str	r7, [r1, #0]
 800084c:	bf18      	it	ne
 800084e:	2300      	movne	r3, #0
 8000850:	1bf6      	subs	r6, r6, r7
 8000852:	608b      	str	r3, [r1, #8]
 8000854:	2e00      	cmp	r6, #0
 8000856:	dd9f      	ble.n	8000798 <__sflush_r+0x18>
 8000858:	6a21      	ldr	r1, [r4, #32]
 800085a:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800085e:	4633      	mov	r3, r6
 8000860:	463a      	mov	r2, r7
 8000862:	4628      	mov	r0, r5
 8000864:	47e0      	blx	ip
 8000866:	2800      	cmp	r0, #0
 8000868:	dc06      	bgt.n	8000878 <__sflush_r+0xf8>
 800086a:	89a3      	ldrh	r3, [r4, #12]
 800086c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000870:	81a3      	strh	r3, [r4, #12]
 8000872:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000876:	e790      	b.n	800079a <__sflush_r+0x1a>
 8000878:	4407      	add	r7, r0
 800087a:	1a36      	subs	r6, r6, r0
 800087c:	e7ea      	b.n	8000854 <__sflush_r+0xd4>
 800087e:	bf00      	nop
 8000880:	20400001 	.word	0x20400001

08000884 <_fflush_r>:
 8000884:	b538      	push	{r3, r4, r5, lr}
 8000886:	690b      	ldr	r3, [r1, #16]
 8000888:	4605      	mov	r5, r0
 800088a:	460c      	mov	r4, r1
 800088c:	b913      	cbnz	r3, 8000894 <_fflush_r+0x10>
 800088e:	2500      	movs	r5, #0
 8000890:	4628      	mov	r0, r5
 8000892:	bd38      	pop	{r3, r4, r5, pc}
 8000894:	b118      	cbz	r0, 800089e <_fflush_r+0x1a>
 8000896:	6983      	ldr	r3, [r0, #24]
 8000898:	b90b      	cbnz	r3, 800089e <_fflush_r+0x1a>
 800089a:	f000 f887 	bl	80009ac <__sinit>
 800089e:	4b14      	ldr	r3, [pc, #80]	; (80008f0 <_fflush_r+0x6c>)
 80008a0:	429c      	cmp	r4, r3
 80008a2:	d11b      	bne.n	80008dc <_fflush_r+0x58>
 80008a4:	686c      	ldr	r4, [r5, #4]
 80008a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008aa:	2b00      	cmp	r3, #0
 80008ac:	d0ef      	beq.n	800088e <_fflush_r+0xa>
 80008ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80008b0:	07d0      	lsls	r0, r2, #31
 80008b2:	d404      	bmi.n	80008be <_fflush_r+0x3a>
 80008b4:	0599      	lsls	r1, r3, #22
 80008b6:	d402      	bmi.n	80008be <_fflush_r+0x3a>
 80008b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008ba:	f000 f915 	bl	8000ae8 <__retarget_lock_acquire_recursive>
 80008be:	4628      	mov	r0, r5
 80008c0:	4621      	mov	r1, r4
 80008c2:	f7ff ff5d 	bl	8000780 <__sflush_r>
 80008c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008c8:	07da      	lsls	r2, r3, #31
 80008ca:	4605      	mov	r5, r0
 80008cc:	d4e0      	bmi.n	8000890 <_fflush_r+0xc>
 80008ce:	89a3      	ldrh	r3, [r4, #12]
 80008d0:	059b      	lsls	r3, r3, #22
 80008d2:	d4dd      	bmi.n	8000890 <_fflush_r+0xc>
 80008d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008d6:	f000 f908 	bl	8000aea <__retarget_lock_release_recursive>
 80008da:	e7d9      	b.n	8000890 <_fflush_r+0xc>
 80008dc:	4b05      	ldr	r3, [pc, #20]	; (80008f4 <_fflush_r+0x70>)
 80008de:	429c      	cmp	r4, r3
 80008e0:	d101      	bne.n	80008e6 <_fflush_r+0x62>
 80008e2:	68ac      	ldr	r4, [r5, #8]
 80008e4:	e7df      	b.n	80008a6 <_fflush_r+0x22>
 80008e6:	4b04      	ldr	r3, [pc, #16]	; (80008f8 <_fflush_r+0x74>)
 80008e8:	429c      	cmp	r4, r3
 80008ea:	bf08      	it	eq
 80008ec:	68ec      	ldreq	r4, [r5, #12]
 80008ee:	e7da      	b.n	80008a6 <_fflush_r+0x22>
 80008f0:	08000f68 	.word	0x08000f68
 80008f4:	08000f88 	.word	0x08000f88
 80008f8:	08000f48 	.word	0x08000f48

080008fc <std>:
 80008fc:	2300      	movs	r3, #0
 80008fe:	b510      	push	{r4, lr}
 8000900:	4604      	mov	r4, r0
 8000902:	e9c0 3300 	strd	r3, r3, [r0]
 8000906:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800090a:	6083      	str	r3, [r0, #8]
 800090c:	8181      	strh	r1, [r0, #12]
 800090e:	6643      	str	r3, [r0, #100]	; 0x64
 8000910:	81c2      	strh	r2, [r0, #14]
 8000912:	6183      	str	r3, [r0, #24]
 8000914:	4619      	mov	r1, r3
 8000916:	2208      	movs	r2, #8
 8000918:	305c      	adds	r0, #92	; 0x5c
 800091a:	f7ff fdf3 	bl	8000504 <memset>
 800091e:	4b05      	ldr	r3, [pc, #20]	; (8000934 <std+0x38>)
 8000920:	6263      	str	r3, [r4, #36]	; 0x24
 8000922:	4b05      	ldr	r3, [pc, #20]	; (8000938 <std+0x3c>)
 8000924:	62a3      	str	r3, [r4, #40]	; 0x28
 8000926:	4b05      	ldr	r3, [pc, #20]	; (800093c <std+0x40>)
 8000928:	62e3      	str	r3, [r4, #44]	; 0x2c
 800092a:	4b05      	ldr	r3, [pc, #20]	; (8000940 <std+0x44>)
 800092c:	6224      	str	r4, [r4, #32]
 800092e:	6323      	str	r3, [r4, #48]	; 0x30
 8000930:	bd10      	pop	{r4, pc}
 8000932:	bf00      	nop
 8000934:	08000d95 	.word	0x08000d95
 8000938:	08000db7 	.word	0x08000db7
 800093c:	08000def 	.word	0x08000def
 8000940:	08000e13 	.word	0x08000e13

08000944 <_cleanup_r>:
 8000944:	4901      	ldr	r1, [pc, #4]	; (800094c <_cleanup_r+0x8>)
 8000946:	f000 b8af 	b.w	8000aa8 <_fwalk_reent>
 800094a:	bf00      	nop
 800094c:	08000885 	.word	0x08000885

08000950 <__sfmoreglue>:
 8000950:	b570      	push	{r4, r5, r6, lr}
 8000952:	2268      	movs	r2, #104	; 0x68
 8000954:	1e4d      	subs	r5, r1, #1
 8000956:	4355      	muls	r5, r2
 8000958:	460e      	mov	r6, r1
 800095a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800095e:	f000 f995 	bl	8000c8c <_malloc_r>
 8000962:	4604      	mov	r4, r0
 8000964:	b140      	cbz	r0, 8000978 <__sfmoreglue+0x28>
 8000966:	2100      	movs	r1, #0
 8000968:	e9c0 1600 	strd	r1, r6, [r0]
 800096c:	300c      	adds	r0, #12
 800096e:	60a0      	str	r0, [r4, #8]
 8000970:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000974:	f7ff fdc6 	bl	8000504 <memset>
 8000978:	4620      	mov	r0, r4
 800097a:	bd70      	pop	{r4, r5, r6, pc}

0800097c <__sfp_lock_acquire>:
 800097c:	4801      	ldr	r0, [pc, #4]	; (8000984 <__sfp_lock_acquire+0x8>)
 800097e:	f000 b8b3 	b.w	8000ae8 <__retarget_lock_acquire_recursive>
 8000982:	bf00      	nop
 8000984:	20000085 	.word	0x20000085

08000988 <__sfp_lock_release>:
 8000988:	4801      	ldr	r0, [pc, #4]	; (8000990 <__sfp_lock_release+0x8>)
 800098a:	f000 b8ae 	b.w	8000aea <__retarget_lock_release_recursive>
 800098e:	bf00      	nop
 8000990:	20000085 	.word	0x20000085

08000994 <__sinit_lock_acquire>:
 8000994:	4801      	ldr	r0, [pc, #4]	; (800099c <__sinit_lock_acquire+0x8>)
 8000996:	f000 b8a7 	b.w	8000ae8 <__retarget_lock_acquire_recursive>
 800099a:	bf00      	nop
 800099c:	20000086 	.word	0x20000086

080009a0 <__sinit_lock_release>:
 80009a0:	4801      	ldr	r0, [pc, #4]	; (80009a8 <__sinit_lock_release+0x8>)
 80009a2:	f000 b8a2 	b.w	8000aea <__retarget_lock_release_recursive>
 80009a6:	bf00      	nop
 80009a8:	20000086 	.word	0x20000086

080009ac <__sinit>:
 80009ac:	b510      	push	{r4, lr}
 80009ae:	4604      	mov	r4, r0
 80009b0:	f7ff fff0 	bl	8000994 <__sinit_lock_acquire>
 80009b4:	69a3      	ldr	r3, [r4, #24]
 80009b6:	b11b      	cbz	r3, 80009c0 <__sinit+0x14>
 80009b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009bc:	f7ff bff0 	b.w	80009a0 <__sinit_lock_release>
 80009c0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009c4:	6523      	str	r3, [r4, #80]	; 0x50
 80009c6:	4b13      	ldr	r3, [pc, #76]	; (8000a14 <__sinit+0x68>)
 80009c8:	4a13      	ldr	r2, [pc, #76]	; (8000a18 <__sinit+0x6c>)
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	62a2      	str	r2, [r4, #40]	; 0x28
 80009ce:	42a3      	cmp	r3, r4
 80009d0:	bf04      	itt	eq
 80009d2:	2301      	moveq	r3, #1
 80009d4:	61a3      	streq	r3, [r4, #24]
 80009d6:	4620      	mov	r0, r4
 80009d8:	f000 f820 	bl	8000a1c <__sfp>
 80009dc:	6060      	str	r0, [r4, #4]
 80009de:	4620      	mov	r0, r4
 80009e0:	f000 f81c 	bl	8000a1c <__sfp>
 80009e4:	60a0      	str	r0, [r4, #8]
 80009e6:	4620      	mov	r0, r4
 80009e8:	f000 f818 	bl	8000a1c <__sfp>
 80009ec:	2200      	movs	r2, #0
 80009ee:	60e0      	str	r0, [r4, #12]
 80009f0:	2104      	movs	r1, #4
 80009f2:	6860      	ldr	r0, [r4, #4]
 80009f4:	f7ff ff82 	bl	80008fc <std>
 80009f8:	68a0      	ldr	r0, [r4, #8]
 80009fa:	2201      	movs	r2, #1
 80009fc:	2109      	movs	r1, #9
 80009fe:	f7ff ff7d 	bl	80008fc <std>
 8000a02:	68e0      	ldr	r0, [r4, #12]
 8000a04:	2202      	movs	r2, #2
 8000a06:	2112      	movs	r1, #18
 8000a08:	f7ff ff78 	bl	80008fc <std>
 8000a0c:	2301      	movs	r3, #1
 8000a0e:	61a3      	str	r3, [r4, #24]
 8000a10:	e7d2      	b.n	80009b8 <__sinit+0xc>
 8000a12:	bf00      	nop
 8000a14:	08000f44 	.word	0x08000f44
 8000a18:	08000945 	.word	0x08000945

08000a1c <__sfp>:
 8000a1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a1e:	4607      	mov	r7, r0
 8000a20:	f7ff ffac 	bl	800097c <__sfp_lock_acquire>
 8000a24:	4b1e      	ldr	r3, [pc, #120]	; (8000aa0 <__sfp+0x84>)
 8000a26:	681e      	ldr	r6, [r3, #0]
 8000a28:	69b3      	ldr	r3, [r6, #24]
 8000a2a:	b913      	cbnz	r3, 8000a32 <__sfp+0x16>
 8000a2c:	4630      	mov	r0, r6
 8000a2e:	f7ff ffbd 	bl	80009ac <__sinit>
 8000a32:	3648      	adds	r6, #72	; 0x48
 8000a34:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a38:	3b01      	subs	r3, #1
 8000a3a:	d503      	bpl.n	8000a44 <__sfp+0x28>
 8000a3c:	6833      	ldr	r3, [r6, #0]
 8000a3e:	b30b      	cbz	r3, 8000a84 <__sfp+0x68>
 8000a40:	6836      	ldr	r6, [r6, #0]
 8000a42:	e7f7      	b.n	8000a34 <__sfp+0x18>
 8000a44:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a48:	b9d5      	cbnz	r5, 8000a80 <__sfp+0x64>
 8000a4a:	4b16      	ldr	r3, [pc, #88]	; (8000aa4 <__sfp+0x88>)
 8000a4c:	60e3      	str	r3, [r4, #12]
 8000a4e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a52:	6665      	str	r5, [r4, #100]	; 0x64
 8000a54:	f000 f847 	bl	8000ae6 <__retarget_lock_init_recursive>
 8000a58:	f7ff ff96 	bl	8000988 <__sfp_lock_release>
 8000a5c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a60:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a64:	6025      	str	r5, [r4, #0]
 8000a66:	61a5      	str	r5, [r4, #24]
 8000a68:	2208      	movs	r2, #8
 8000a6a:	4629      	mov	r1, r5
 8000a6c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a70:	f7ff fd48 	bl	8000504 <memset>
 8000a74:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a78:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a7c:	4620      	mov	r0, r4
 8000a7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a80:	3468      	adds	r4, #104	; 0x68
 8000a82:	e7d9      	b.n	8000a38 <__sfp+0x1c>
 8000a84:	2104      	movs	r1, #4
 8000a86:	4638      	mov	r0, r7
 8000a88:	f7ff ff62 	bl	8000950 <__sfmoreglue>
 8000a8c:	4604      	mov	r4, r0
 8000a8e:	6030      	str	r0, [r6, #0]
 8000a90:	2800      	cmp	r0, #0
 8000a92:	d1d5      	bne.n	8000a40 <__sfp+0x24>
 8000a94:	f7ff ff78 	bl	8000988 <__sfp_lock_release>
 8000a98:	230c      	movs	r3, #12
 8000a9a:	603b      	str	r3, [r7, #0]
 8000a9c:	e7ee      	b.n	8000a7c <__sfp+0x60>
 8000a9e:	bf00      	nop
 8000aa0:	08000f44 	.word	0x08000f44
 8000aa4:	ffff0001 	.word	0xffff0001

08000aa8 <_fwalk_reent>:
 8000aa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000aac:	4606      	mov	r6, r0
 8000aae:	4688      	mov	r8, r1
 8000ab0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000ab4:	2700      	movs	r7, #0
 8000ab6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000aba:	f1b9 0901 	subs.w	r9, r9, #1
 8000abe:	d505      	bpl.n	8000acc <_fwalk_reent+0x24>
 8000ac0:	6824      	ldr	r4, [r4, #0]
 8000ac2:	2c00      	cmp	r4, #0
 8000ac4:	d1f7      	bne.n	8000ab6 <_fwalk_reent+0xe>
 8000ac6:	4638      	mov	r0, r7
 8000ac8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000acc:	89ab      	ldrh	r3, [r5, #12]
 8000ace:	2b01      	cmp	r3, #1
 8000ad0:	d907      	bls.n	8000ae2 <_fwalk_reent+0x3a>
 8000ad2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000ad6:	3301      	adds	r3, #1
 8000ad8:	d003      	beq.n	8000ae2 <_fwalk_reent+0x3a>
 8000ada:	4629      	mov	r1, r5
 8000adc:	4630      	mov	r0, r6
 8000ade:	47c0      	blx	r8
 8000ae0:	4307      	orrs	r7, r0
 8000ae2:	3568      	adds	r5, #104	; 0x68
 8000ae4:	e7e9      	b.n	8000aba <_fwalk_reent+0x12>

08000ae6 <__retarget_lock_init_recursive>:
 8000ae6:	4770      	bx	lr

08000ae8 <__retarget_lock_acquire_recursive>:
 8000ae8:	4770      	bx	lr

08000aea <__retarget_lock_release_recursive>:
 8000aea:	4770      	bx	lr

08000aec <__swhatbuf_r>:
 8000aec:	b570      	push	{r4, r5, r6, lr}
 8000aee:	460e      	mov	r6, r1
 8000af0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000af4:	2900      	cmp	r1, #0
 8000af6:	b096      	sub	sp, #88	; 0x58
 8000af8:	4614      	mov	r4, r2
 8000afa:	461d      	mov	r5, r3
 8000afc:	da08      	bge.n	8000b10 <__swhatbuf_r+0x24>
 8000afe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000b02:	2200      	movs	r2, #0
 8000b04:	602a      	str	r2, [r5, #0]
 8000b06:	061a      	lsls	r2, r3, #24
 8000b08:	d410      	bmi.n	8000b2c <__swhatbuf_r+0x40>
 8000b0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b0e:	e00e      	b.n	8000b2e <__swhatbuf_r+0x42>
 8000b10:	466a      	mov	r2, sp
 8000b12:	f000 f9a5 	bl	8000e60 <_fstat_r>
 8000b16:	2800      	cmp	r0, #0
 8000b18:	dbf1      	blt.n	8000afe <__swhatbuf_r+0x12>
 8000b1a:	9a01      	ldr	r2, [sp, #4]
 8000b1c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b20:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b24:	425a      	negs	r2, r3
 8000b26:	415a      	adcs	r2, r3
 8000b28:	602a      	str	r2, [r5, #0]
 8000b2a:	e7ee      	b.n	8000b0a <__swhatbuf_r+0x1e>
 8000b2c:	2340      	movs	r3, #64	; 0x40
 8000b2e:	2000      	movs	r0, #0
 8000b30:	6023      	str	r3, [r4, #0]
 8000b32:	b016      	add	sp, #88	; 0x58
 8000b34:	bd70      	pop	{r4, r5, r6, pc}
	...

08000b38 <__smakebuf_r>:
 8000b38:	898b      	ldrh	r3, [r1, #12]
 8000b3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b3c:	079d      	lsls	r5, r3, #30
 8000b3e:	4606      	mov	r6, r0
 8000b40:	460c      	mov	r4, r1
 8000b42:	d507      	bpl.n	8000b54 <__smakebuf_r+0x1c>
 8000b44:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b48:	6023      	str	r3, [r4, #0]
 8000b4a:	6123      	str	r3, [r4, #16]
 8000b4c:	2301      	movs	r3, #1
 8000b4e:	6163      	str	r3, [r4, #20]
 8000b50:	b002      	add	sp, #8
 8000b52:	bd70      	pop	{r4, r5, r6, pc}
 8000b54:	ab01      	add	r3, sp, #4
 8000b56:	466a      	mov	r2, sp
 8000b58:	f7ff ffc8 	bl	8000aec <__swhatbuf_r>
 8000b5c:	9900      	ldr	r1, [sp, #0]
 8000b5e:	4605      	mov	r5, r0
 8000b60:	4630      	mov	r0, r6
 8000b62:	f000 f893 	bl	8000c8c <_malloc_r>
 8000b66:	b948      	cbnz	r0, 8000b7c <__smakebuf_r+0x44>
 8000b68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b6c:	059a      	lsls	r2, r3, #22
 8000b6e:	d4ef      	bmi.n	8000b50 <__smakebuf_r+0x18>
 8000b70:	f023 0303 	bic.w	r3, r3, #3
 8000b74:	f043 0302 	orr.w	r3, r3, #2
 8000b78:	81a3      	strh	r3, [r4, #12]
 8000b7a:	e7e3      	b.n	8000b44 <__smakebuf_r+0xc>
 8000b7c:	4b0d      	ldr	r3, [pc, #52]	; (8000bb4 <__smakebuf_r+0x7c>)
 8000b7e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b80:	89a3      	ldrh	r3, [r4, #12]
 8000b82:	6020      	str	r0, [r4, #0]
 8000b84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b88:	81a3      	strh	r3, [r4, #12]
 8000b8a:	9b00      	ldr	r3, [sp, #0]
 8000b8c:	6163      	str	r3, [r4, #20]
 8000b8e:	9b01      	ldr	r3, [sp, #4]
 8000b90:	6120      	str	r0, [r4, #16]
 8000b92:	b15b      	cbz	r3, 8000bac <__smakebuf_r+0x74>
 8000b94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b98:	4630      	mov	r0, r6
 8000b9a:	f000 f973 	bl	8000e84 <_isatty_r>
 8000b9e:	b128      	cbz	r0, 8000bac <__smakebuf_r+0x74>
 8000ba0:	89a3      	ldrh	r3, [r4, #12]
 8000ba2:	f023 0303 	bic.w	r3, r3, #3
 8000ba6:	f043 0301 	orr.w	r3, r3, #1
 8000baa:	81a3      	strh	r3, [r4, #12]
 8000bac:	89a0      	ldrh	r0, [r4, #12]
 8000bae:	4305      	orrs	r5, r0
 8000bb0:	81a5      	strh	r5, [r4, #12]
 8000bb2:	e7cd      	b.n	8000b50 <__smakebuf_r+0x18>
 8000bb4:	08000945 	.word	0x08000945

08000bb8 <_free_r>:
 8000bb8:	b538      	push	{r3, r4, r5, lr}
 8000bba:	4605      	mov	r5, r0
 8000bbc:	2900      	cmp	r1, #0
 8000bbe:	d041      	beq.n	8000c44 <_free_r+0x8c>
 8000bc0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bc4:	1f0c      	subs	r4, r1, #4
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	bfb8      	it	lt
 8000bca:	18e4      	addlt	r4, r4, r3
 8000bcc:	f000 f97c 	bl	8000ec8 <__malloc_lock>
 8000bd0:	4a1d      	ldr	r2, [pc, #116]	; (8000c48 <_free_r+0x90>)
 8000bd2:	6813      	ldr	r3, [r2, #0]
 8000bd4:	b933      	cbnz	r3, 8000be4 <_free_r+0x2c>
 8000bd6:	6063      	str	r3, [r4, #4]
 8000bd8:	6014      	str	r4, [r2, #0]
 8000bda:	4628      	mov	r0, r5
 8000bdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000be0:	f000 b978 	b.w	8000ed4 <__malloc_unlock>
 8000be4:	42a3      	cmp	r3, r4
 8000be6:	d908      	bls.n	8000bfa <_free_r+0x42>
 8000be8:	6820      	ldr	r0, [r4, #0]
 8000bea:	1821      	adds	r1, r4, r0
 8000bec:	428b      	cmp	r3, r1
 8000bee:	bf01      	itttt	eq
 8000bf0:	6819      	ldreq	r1, [r3, #0]
 8000bf2:	685b      	ldreq	r3, [r3, #4]
 8000bf4:	1809      	addeq	r1, r1, r0
 8000bf6:	6021      	streq	r1, [r4, #0]
 8000bf8:	e7ed      	b.n	8000bd6 <_free_r+0x1e>
 8000bfa:	461a      	mov	r2, r3
 8000bfc:	685b      	ldr	r3, [r3, #4]
 8000bfe:	b10b      	cbz	r3, 8000c04 <_free_r+0x4c>
 8000c00:	42a3      	cmp	r3, r4
 8000c02:	d9fa      	bls.n	8000bfa <_free_r+0x42>
 8000c04:	6811      	ldr	r1, [r2, #0]
 8000c06:	1850      	adds	r0, r2, r1
 8000c08:	42a0      	cmp	r0, r4
 8000c0a:	d10b      	bne.n	8000c24 <_free_r+0x6c>
 8000c0c:	6820      	ldr	r0, [r4, #0]
 8000c0e:	4401      	add	r1, r0
 8000c10:	1850      	adds	r0, r2, r1
 8000c12:	4283      	cmp	r3, r0
 8000c14:	6011      	str	r1, [r2, #0]
 8000c16:	d1e0      	bne.n	8000bda <_free_r+0x22>
 8000c18:	6818      	ldr	r0, [r3, #0]
 8000c1a:	685b      	ldr	r3, [r3, #4]
 8000c1c:	6053      	str	r3, [r2, #4]
 8000c1e:	4401      	add	r1, r0
 8000c20:	6011      	str	r1, [r2, #0]
 8000c22:	e7da      	b.n	8000bda <_free_r+0x22>
 8000c24:	d902      	bls.n	8000c2c <_free_r+0x74>
 8000c26:	230c      	movs	r3, #12
 8000c28:	602b      	str	r3, [r5, #0]
 8000c2a:	e7d6      	b.n	8000bda <_free_r+0x22>
 8000c2c:	6820      	ldr	r0, [r4, #0]
 8000c2e:	1821      	adds	r1, r4, r0
 8000c30:	428b      	cmp	r3, r1
 8000c32:	bf04      	itt	eq
 8000c34:	6819      	ldreq	r1, [r3, #0]
 8000c36:	685b      	ldreq	r3, [r3, #4]
 8000c38:	6063      	str	r3, [r4, #4]
 8000c3a:	bf04      	itt	eq
 8000c3c:	1809      	addeq	r1, r1, r0
 8000c3e:	6021      	streq	r1, [r4, #0]
 8000c40:	6054      	str	r4, [r2, #4]
 8000c42:	e7ca      	b.n	8000bda <_free_r+0x22>
 8000c44:	bd38      	pop	{r3, r4, r5, pc}
 8000c46:	bf00      	nop
 8000c48:	20000088 	.word	0x20000088

08000c4c <sbrk_aligned>:
 8000c4c:	b570      	push	{r4, r5, r6, lr}
 8000c4e:	4e0e      	ldr	r6, [pc, #56]	; (8000c88 <sbrk_aligned+0x3c>)
 8000c50:	460c      	mov	r4, r1
 8000c52:	6831      	ldr	r1, [r6, #0]
 8000c54:	4605      	mov	r5, r0
 8000c56:	b911      	cbnz	r1, 8000c5e <sbrk_aligned+0x12>
 8000c58:	f000 f88c 	bl	8000d74 <_sbrk_r>
 8000c5c:	6030      	str	r0, [r6, #0]
 8000c5e:	4621      	mov	r1, r4
 8000c60:	4628      	mov	r0, r5
 8000c62:	f000 f887 	bl	8000d74 <_sbrk_r>
 8000c66:	1c43      	adds	r3, r0, #1
 8000c68:	d00a      	beq.n	8000c80 <sbrk_aligned+0x34>
 8000c6a:	1cc4      	adds	r4, r0, #3
 8000c6c:	f024 0403 	bic.w	r4, r4, #3
 8000c70:	42a0      	cmp	r0, r4
 8000c72:	d007      	beq.n	8000c84 <sbrk_aligned+0x38>
 8000c74:	1a21      	subs	r1, r4, r0
 8000c76:	4628      	mov	r0, r5
 8000c78:	f000 f87c 	bl	8000d74 <_sbrk_r>
 8000c7c:	3001      	adds	r0, #1
 8000c7e:	d101      	bne.n	8000c84 <sbrk_aligned+0x38>
 8000c80:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000c84:	4620      	mov	r0, r4
 8000c86:	bd70      	pop	{r4, r5, r6, pc}
 8000c88:	2000008c 	.word	0x2000008c

08000c8c <_malloc_r>:
 8000c8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c90:	1ccd      	adds	r5, r1, #3
 8000c92:	f025 0503 	bic.w	r5, r5, #3
 8000c96:	3508      	adds	r5, #8
 8000c98:	2d0c      	cmp	r5, #12
 8000c9a:	bf38      	it	cc
 8000c9c:	250c      	movcc	r5, #12
 8000c9e:	2d00      	cmp	r5, #0
 8000ca0:	4607      	mov	r7, r0
 8000ca2:	db01      	blt.n	8000ca8 <_malloc_r+0x1c>
 8000ca4:	42a9      	cmp	r1, r5
 8000ca6:	d905      	bls.n	8000cb4 <_malloc_r+0x28>
 8000ca8:	230c      	movs	r3, #12
 8000caa:	603b      	str	r3, [r7, #0]
 8000cac:	2600      	movs	r6, #0
 8000cae:	4630      	mov	r0, r6
 8000cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000cb4:	4e2e      	ldr	r6, [pc, #184]	; (8000d70 <_malloc_r+0xe4>)
 8000cb6:	f000 f907 	bl	8000ec8 <__malloc_lock>
 8000cba:	6833      	ldr	r3, [r6, #0]
 8000cbc:	461c      	mov	r4, r3
 8000cbe:	bb34      	cbnz	r4, 8000d0e <_malloc_r+0x82>
 8000cc0:	4629      	mov	r1, r5
 8000cc2:	4638      	mov	r0, r7
 8000cc4:	f7ff ffc2 	bl	8000c4c <sbrk_aligned>
 8000cc8:	1c43      	adds	r3, r0, #1
 8000cca:	4604      	mov	r4, r0
 8000ccc:	d14d      	bne.n	8000d6a <_malloc_r+0xde>
 8000cce:	6834      	ldr	r4, [r6, #0]
 8000cd0:	4626      	mov	r6, r4
 8000cd2:	2e00      	cmp	r6, #0
 8000cd4:	d140      	bne.n	8000d58 <_malloc_r+0xcc>
 8000cd6:	6823      	ldr	r3, [r4, #0]
 8000cd8:	4631      	mov	r1, r6
 8000cda:	4638      	mov	r0, r7
 8000cdc:	eb04 0803 	add.w	r8, r4, r3
 8000ce0:	f000 f848 	bl	8000d74 <_sbrk_r>
 8000ce4:	4580      	cmp	r8, r0
 8000ce6:	d13a      	bne.n	8000d5e <_malloc_r+0xd2>
 8000ce8:	6821      	ldr	r1, [r4, #0]
 8000cea:	3503      	adds	r5, #3
 8000cec:	1a6d      	subs	r5, r5, r1
 8000cee:	f025 0503 	bic.w	r5, r5, #3
 8000cf2:	3508      	adds	r5, #8
 8000cf4:	2d0c      	cmp	r5, #12
 8000cf6:	bf38      	it	cc
 8000cf8:	250c      	movcc	r5, #12
 8000cfa:	4629      	mov	r1, r5
 8000cfc:	4638      	mov	r0, r7
 8000cfe:	f7ff ffa5 	bl	8000c4c <sbrk_aligned>
 8000d02:	3001      	adds	r0, #1
 8000d04:	d02b      	beq.n	8000d5e <_malloc_r+0xd2>
 8000d06:	6823      	ldr	r3, [r4, #0]
 8000d08:	442b      	add	r3, r5
 8000d0a:	6023      	str	r3, [r4, #0]
 8000d0c:	e00e      	b.n	8000d2c <_malloc_r+0xa0>
 8000d0e:	6822      	ldr	r2, [r4, #0]
 8000d10:	1b52      	subs	r2, r2, r5
 8000d12:	d41e      	bmi.n	8000d52 <_malloc_r+0xc6>
 8000d14:	2a0b      	cmp	r2, #11
 8000d16:	d916      	bls.n	8000d46 <_malloc_r+0xba>
 8000d18:	1961      	adds	r1, r4, r5
 8000d1a:	42a3      	cmp	r3, r4
 8000d1c:	6025      	str	r5, [r4, #0]
 8000d1e:	bf18      	it	ne
 8000d20:	6059      	strne	r1, [r3, #4]
 8000d22:	6863      	ldr	r3, [r4, #4]
 8000d24:	bf08      	it	eq
 8000d26:	6031      	streq	r1, [r6, #0]
 8000d28:	5162      	str	r2, [r4, r5]
 8000d2a:	604b      	str	r3, [r1, #4]
 8000d2c:	4638      	mov	r0, r7
 8000d2e:	f104 060b 	add.w	r6, r4, #11
 8000d32:	f000 f8cf 	bl	8000ed4 <__malloc_unlock>
 8000d36:	f026 0607 	bic.w	r6, r6, #7
 8000d3a:	1d23      	adds	r3, r4, #4
 8000d3c:	1af2      	subs	r2, r6, r3
 8000d3e:	d0b6      	beq.n	8000cae <_malloc_r+0x22>
 8000d40:	1b9b      	subs	r3, r3, r6
 8000d42:	50a3      	str	r3, [r4, r2]
 8000d44:	e7b3      	b.n	8000cae <_malloc_r+0x22>
 8000d46:	6862      	ldr	r2, [r4, #4]
 8000d48:	42a3      	cmp	r3, r4
 8000d4a:	bf0c      	ite	eq
 8000d4c:	6032      	streq	r2, [r6, #0]
 8000d4e:	605a      	strne	r2, [r3, #4]
 8000d50:	e7ec      	b.n	8000d2c <_malloc_r+0xa0>
 8000d52:	4623      	mov	r3, r4
 8000d54:	6864      	ldr	r4, [r4, #4]
 8000d56:	e7b2      	b.n	8000cbe <_malloc_r+0x32>
 8000d58:	4634      	mov	r4, r6
 8000d5a:	6876      	ldr	r6, [r6, #4]
 8000d5c:	e7b9      	b.n	8000cd2 <_malloc_r+0x46>
 8000d5e:	230c      	movs	r3, #12
 8000d60:	603b      	str	r3, [r7, #0]
 8000d62:	4638      	mov	r0, r7
 8000d64:	f000 f8b6 	bl	8000ed4 <__malloc_unlock>
 8000d68:	e7a1      	b.n	8000cae <_malloc_r+0x22>
 8000d6a:	6025      	str	r5, [r4, #0]
 8000d6c:	e7de      	b.n	8000d2c <_malloc_r+0xa0>
 8000d6e:	bf00      	nop
 8000d70:	20000088 	.word	0x20000088

08000d74 <_sbrk_r>:
 8000d74:	b538      	push	{r3, r4, r5, lr}
 8000d76:	4d06      	ldr	r5, [pc, #24]	; (8000d90 <_sbrk_r+0x1c>)
 8000d78:	2300      	movs	r3, #0
 8000d7a:	4604      	mov	r4, r0
 8000d7c:	4608      	mov	r0, r1
 8000d7e:	602b      	str	r3, [r5, #0]
 8000d80:	f7ff fb36 	bl	80003f0 <_sbrk>
 8000d84:	1c43      	adds	r3, r0, #1
 8000d86:	d102      	bne.n	8000d8e <_sbrk_r+0x1a>
 8000d88:	682b      	ldr	r3, [r5, #0]
 8000d8a:	b103      	cbz	r3, 8000d8e <_sbrk_r+0x1a>
 8000d8c:	6023      	str	r3, [r4, #0]
 8000d8e:	bd38      	pop	{r3, r4, r5, pc}
 8000d90:	20000090 	.word	0x20000090

08000d94 <__sread>:
 8000d94:	b510      	push	{r4, lr}
 8000d96:	460c      	mov	r4, r1
 8000d98:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d9c:	f000 f8a0 	bl	8000ee0 <_read_r>
 8000da0:	2800      	cmp	r0, #0
 8000da2:	bfab      	itete	ge
 8000da4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000da6:	89a3      	ldrhlt	r3, [r4, #12]
 8000da8:	181b      	addge	r3, r3, r0
 8000daa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000dae:	bfac      	ite	ge
 8000db0:	6563      	strge	r3, [r4, #84]	; 0x54
 8000db2:	81a3      	strhlt	r3, [r4, #12]
 8000db4:	bd10      	pop	{r4, pc}

08000db6 <__swrite>:
 8000db6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000dba:	461f      	mov	r7, r3
 8000dbc:	898b      	ldrh	r3, [r1, #12]
 8000dbe:	05db      	lsls	r3, r3, #23
 8000dc0:	4605      	mov	r5, r0
 8000dc2:	460c      	mov	r4, r1
 8000dc4:	4616      	mov	r6, r2
 8000dc6:	d505      	bpl.n	8000dd4 <__swrite+0x1e>
 8000dc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dcc:	2302      	movs	r3, #2
 8000dce:	2200      	movs	r2, #0
 8000dd0:	f000 f868 	bl	8000ea4 <_lseek_r>
 8000dd4:	89a3      	ldrh	r3, [r4, #12]
 8000dd6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000dda:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000dde:	81a3      	strh	r3, [r4, #12]
 8000de0:	4632      	mov	r2, r6
 8000de2:	463b      	mov	r3, r7
 8000de4:	4628      	mov	r0, r5
 8000de6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000dea:	f000 b817 	b.w	8000e1c <_write_r>

08000dee <__sseek>:
 8000dee:	b510      	push	{r4, lr}
 8000df0:	460c      	mov	r4, r1
 8000df2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000df6:	f000 f855 	bl	8000ea4 <_lseek_r>
 8000dfa:	1c43      	adds	r3, r0, #1
 8000dfc:	89a3      	ldrh	r3, [r4, #12]
 8000dfe:	bf15      	itete	ne
 8000e00:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e02:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e06:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e0a:	81a3      	strheq	r3, [r4, #12]
 8000e0c:	bf18      	it	ne
 8000e0e:	81a3      	strhne	r3, [r4, #12]
 8000e10:	bd10      	pop	{r4, pc}

08000e12 <__sclose>:
 8000e12:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e16:	f000 b813 	b.w	8000e40 <_close_r>
	...

08000e1c <_write_r>:
 8000e1c:	b538      	push	{r3, r4, r5, lr}
 8000e1e:	4d07      	ldr	r5, [pc, #28]	; (8000e3c <_write_r+0x20>)
 8000e20:	4604      	mov	r4, r0
 8000e22:	4608      	mov	r0, r1
 8000e24:	4611      	mov	r1, r2
 8000e26:	2200      	movs	r2, #0
 8000e28:	602a      	str	r2, [r5, #0]
 8000e2a:	461a      	mov	r2, r3
 8000e2c:	f7ff fa93 	bl	8000356 <_write>
 8000e30:	1c43      	adds	r3, r0, #1
 8000e32:	d102      	bne.n	8000e3a <_write_r+0x1e>
 8000e34:	682b      	ldr	r3, [r5, #0]
 8000e36:	b103      	cbz	r3, 8000e3a <_write_r+0x1e>
 8000e38:	6023      	str	r3, [r4, #0]
 8000e3a:	bd38      	pop	{r3, r4, r5, pc}
 8000e3c:	20000090 	.word	0x20000090

08000e40 <_close_r>:
 8000e40:	b538      	push	{r3, r4, r5, lr}
 8000e42:	4d06      	ldr	r5, [pc, #24]	; (8000e5c <_close_r+0x1c>)
 8000e44:	2300      	movs	r3, #0
 8000e46:	4604      	mov	r4, r0
 8000e48:	4608      	mov	r0, r1
 8000e4a:	602b      	str	r3, [r5, #0]
 8000e4c:	f7ff fa9f 	bl	800038e <_close>
 8000e50:	1c43      	adds	r3, r0, #1
 8000e52:	d102      	bne.n	8000e5a <_close_r+0x1a>
 8000e54:	682b      	ldr	r3, [r5, #0]
 8000e56:	b103      	cbz	r3, 8000e5a <_close_r+0x1a>
 8000e58:	6023      	str	r3, [r4, #0]
 8000e5a:	bd38      	pop	{r3, r4, r5, pc}
 8000e5c:	20000090 	.word	0x20000090

08000e60 <_fstat_r>:
 8000e60:	b538      	push	{r3, r4, r5, lr}
 8000e62:	4d07      	ldr	r5, [pc, #28]	; (8000e80 <_fstat_r+0x20>)
 8000e64:	2300      	movs	r3, #0
 8000e66:	4604      	mov	r4, r0
 8000e68:	4608      	mov	r0, r1
 8000e6a:	4611      	mov	r1, r2
 8000e6c:	602b      	str	r3, [r5, #0]
 8000e6e:	f7ff fa99 	bl	80003a4 <_fstat>
 8000e72:	1c43      	adds	r3, r0, #1
 8000e74:	d102      	bne.n	8000e7c <_fstat_r+0x1c>
 8000e76:	682b      	ldr	r3, [r5, #0]
 8000e78:	b103      	cbz	r3, 8000e7c <_fstat_r+0x1c>
 8000e7a:	6023      	str	r3, [r4, #0]
 8000e7c:	bd38      	pop	{r3, r4, r5, pc}
 8000e7e:	bf00      	nop
 8000e80:	20000090 	.word	0x20000090

08000e84 <_isatty_r>:
 8000e84:	b538      	push	{r3, r4, r5, lr}
 8000e86:	4d06      	ldr	r5, [pc, #24]	; (8000ea0 <_isatty_r+0x1c>)
 8000e88:	2300      	movs	r3, #0
 8000e8a:	4604      	mov	r4, r0
 8000e8c:	4608      	mov	r0, r1
 8000e8e:	602b      	str	r3, [r5, #0]
 8000e90:	f7ff fa97 	bl	80003c2 <_isatty>
 8000e94:	1c43      	adds	r3, r0, #1
 8000e96:	d102      	bne.n	8000e9e <_isatty_r+0x1a>
 8000e98:	682b      	ldr	r3, [r5, #0]
 8000e9a:	b103      	cbz	r3, 8000e9e <_isatty_r+0x1a>
 8000e9c:	6023      	str	r3, [r4, #0]
 8000e9e:	bd38      	pop	{r3, r4, r5, pc}
 8000ea0:	20000090 	.word	0x20000090

08000ea4 <_lseek_r>:
 8000ea4:	b538      	push	{r3, r4, r5, lr}
 8000ea6:	4d07      	ldr	r5, [pc, #28]	; (8000ec4 <_lseek_r+0x20>)
 8000ea8:	4604      	mov	r4, r0
 8000eaa:	4608      	mov	r0, r1
 8000eac:	4611      	mov	r1, r2
 8000eae:	2200      	movs	r2, #0
 8000eb0:	602a      	str	r2, [r5, #0]
 8000eb2:	461a      	mov	r2, r3
 8000eb4:	f7ff fa8f 	bl	80003d6 <_lseek>
 8000eb8:	1c43      	adds	r3, r0, #1
 8000eba:	d102      	bne.n	8000ec2 <_lseek_r+0x1e>
 8000ebc:	682b      	ldr	r3, [r5, #0]
 8000ebe:	b103      	cbz	r3, 8000ec2 <_lseek_r+0x1e>
 8000ec0:	6023      	str	r3, [r4, #0]
 8000ec2:	bd38      	pop	{r3, r4, r5, pc}
 8000ec4:	20000090 	.word	0x20000090

08000ec8 <__malloc_lock>:
 8000ec8:	4801      	ldr	r0, [pc, #4]	; (8000ed0 <__malloc_lock+0x8>)
 8000eca:	f7ff be0d 	b.w	8000ae8 <__retarget_lock_acquire_recursive>
 8000ece:	bf00      	nop
 8000ed0:	20000084 	.word	0x20000084

08000ed4 <__malloc_unlock>:
 8000ed4:	4801      	ldr	r0, [pc, #4]	; (8000edc <__malloc_unlock+0x8>)
 8000ed6:	f7ff be08 	b.w	8000aea <__retarget_lock_release_recursive>
 8000eda:	bf00      	nop
 8000edc:	20000084 	.word	0x20000084

08000ee0 <_read_r>:
 8000ee0:	b538      	push	{r3, r4, r5, lr}
 8000ee2:	4d07      	ldr	r5, [pc, #28]	; (8000f00 <_read_r+0x20>)
 8000ee4:	4604      	mov	r4, r0
 8000ee6:	4608      	mov	r0, r1
 8000ee8:	4611      	mov	r1, r2
 8000eea:	2200      	movs	r2, #0
 8000eec:	602a      	str	r2, [r5, #0]
 8000eee:	461a      	mov	r2, r3
 8000ef0:	f7ff fa14 	bl	800031c <_read>
 8000ef4:	1c43      	adds	r3, r0, #1
 8000ef6:	d102      	bne.n	8000efe <_read_r+0x1e>
 8000ef8:	682b      	ldr	r3, [r5, #0]
 8000efa:	b103      	cbz	r3, 8000efe <_read_r+0x1e>
 8000efc:	6023      	str	r3, [r4, #0]
 8000efe:	bd38      	pop	{r3, r4, r5, pc}
 8000f00:	20000090 	.word	0x20000090

08000f04 <_init>:
 8000f04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f06:	bf00      	nop
 8000f08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f0a:	bc08      	pop	{r3}
 8000f0c:	469e      	mov	lr, r3
 8000f0e:	4770      	bx	lr

08000f10 <_fini>:
 8000f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f12:	bf00      	nop
 8000f14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f16:	bc08      	pop	{r3}
 8000f18:	469e      	mov	lr, r3
 8000f1a:	4770      	bx	lr
