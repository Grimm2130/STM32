
system_interrupt_3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000130c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  080014bc  080014bc  000114bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001568  08001568  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001568  08001568  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001568  08001568  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001568  08001568  00011568  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800156c  0800156c  0001156c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001570  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a24  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000388  00000000  00000000  00020ab2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000130  00000000  00000000  00020e40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000f8  00000000  00000000  00020f70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c14  00000000  00000000  00021068  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001465  00000000  00000000  00023c7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000935e  00000000  00000000  000250e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e43f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000ba8  00000000  00000000  0002e490  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080014a4 	.word	0x080014a4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	080014a4 	.word	0x080014a4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:

__attribute__((naked)) void trigger_SVC();


int main(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b082      	sub	sp, #8
 8000294:	af00      	add	r7, sp, #0
    /* Loop forever */
	asm volatile("MOV R1, #2");
 8000296:	f04f 0102 	mov.w	r1, #2
	asm volatile("MOV R2, #2");
 800029a:	f04f 0202 	mov.w	r2, #2
//	asm volatile("SVC %[code]" :: [code]"i"(svc_code));
	asm volatile("SVC #25");
 800029e:	df19      	svc	25
//	int resa = 0;
	uint32_t res = 0;
 80002a0:	2300      	movs	r3, #0
 80002a2:	607b      	str	r3, [r7, #4]
	asm volatile("MOV %0, r0" : "=r"(res));
 80002a4:	4603      	mov	r3, r0
 80002a6:	607b      	str	r3, [r7, #4]
	printf("The result is: %ld\n", res);
 80002a8:	6879      	ldr	r1, [r7, #4]
 80002aa:	4802      	ldr	r0, [pc, #8]	; (80002b4 <main+0x24>)
 80002ac:	f000 f974 	bl	8000598 <iprintf>

	for(;;);
 80002b0:	e7fe      	b.n	80002b0 <main+0x20>
 80002b2:	bf00      	nop
 80002b4:	080014bc 	.word	0x080014bc

080002b8 <SVC_Handler>:
	asm volatile("SVC #25");
}

__attribute__((naked)) void SVC_Handler(void){
	// read in and store the address of the stack pointer
	asm volatile("MRS R0, MSP");
 80002b8:	f3ef 8008 	mrs	r0, MSP

	// Store ret address for the
	asm volatile("MOV R3, R0");
 80002bc:	4603      	mov	r3, r0
	// Read in the value of the svc_op_code
	asm volatile("ADD R0, #24");		// Jump to pc location
 80002be:	f100 0018 	add.w	r0, r0, #24
	asm volatile("LDR R9, [R0]");		// store the pc address
 80002c2:	f8d0 9000 	ldr.w	r9, [r0]
	asm volatile("SUB R9, R9, #2");		//-2 for the SVC  instruction
 80002c6:	f1a9 0902 	sub.w	r9, r9, #2
	// Retrieve the value at the address
	asm volatile("LDR R10, [R9]");
 80002ca:	f8d9 a000 	ldr.w	sl, [r9]
	asm volatile("AND R10, R10, #0xFF");	// get the last 8 bits as the opcode
 80002ce:	f00a 0aff 	and.w	sl, sl, #255	; 0xff
	// restore the value to R0, but as a value
	asm volatile("MOV R0, R10");
 80002d2:	4650      	mov	r0, sl
	// Jup the handler location,
	asm volatile("B svc_handler_c");
 80002d4:	f000 b802 	b.w	80002dc <svc_handler_c>
}
 80002d8:	bf00      	nop
	...

080002dc <svc_handler_c>:

void svc_handler_c(uint32_t spcode, uint32_t op1, uint32_t op2, uint32_t* sp_base_addr){
 80002dc:	b480      	push	{r7}
 80002de:	b087      	sub	sp, #28
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	60f8      	str	r0, [r7, #12]
 80002e4:	60b9      	str	r1, [r7, #8]
 80002e6:	607a      	str	r2, [r7, #4]
 80002e8:	603b      	str	r3, [r7, #0]
	int32_t ret = 0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
	switch(spcode){
 80002ee:	68fb      	ldr	r3, [r7, #12]
 80002f0:	3b24      	subs	r3, #36	; 0x24
 80002f2:	2b03      	cmp	r3, #3
 80002f4:	d820      	bhi.n	8000338 <svc_handler_c+0x5c>
 80002f6:	a201      	add	r2, pc, #4	; (adr r2, 80002fc <svc_handler_c+0x20>)
 80002f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80002fc:	0800030d 	.word	0x0800030d
 8000300:	08000317 	.word	0x08000317
 8000304:	08000321 	.word	0x08000321
 8000308:	0800032d 	.word	0x0800032d
		case 36:
			ret = op1 + op2;
 800030c:	68ba      	ldr	r2, [r7, #8]
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4413      	add	r3, r2
 8000312:	617b      	str	r3, [r7, #20]
			break;
 8000314:	e015      	b.n	8000342 <svc_handler_c+0x66>
		case 37:
			ret = op1 - op2;
 8000316:	68ba      	ldr	r2, [r7, #8]
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	1ad3      	subs	r3, r2, r3
 800031c:	617b      	str	r3, [r7, #20]
			break;
 800031e:	e010      	b.n	8000342 <svc_handler_c+0x66>
		case 38:
			ret = op1 * op2;
 8000320:	68bb      	ldr	r3, [r7, #8]
 8000322:	687a      	ldr	r2, [r7, #4]
 8000324:	fb02 f303 	mul.w	r3, r2, r3
 8000328:	617b      	str	r3, [r7, #20]
			break;
 800032a:	e00a      	b.n	8000342 <svc_handler_c+0x66>
		case 39:
			ret = op1/op2;
 800032c:	68ba      	ldr	r2, [r7, #8]
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	fbb2 f3f3 	udiv	r3, r2, r3
 8000334:	617b      	str	r3, [r7, #20]
			break;
 8000336:	e004      	b.n	8000342 <svc_handler_c+0x66>
		default:
			ret = op1 + op2;
 8000338:	68ba      	ldr	r2, [r7, #8]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4413      	add	r3, r2
 800033e:	617b      	str	r3, [r7, #20]
			break;
 8000340:	bf00      	nop
	}

	// return to the thread via the stack
	sp_base_addr[0] = ret;
 8000342:	697a      	ldr	r2, [r7, #20]
 8000344:	683b      	ldr	r3, [r7, #0]
 8000346:	601a      	str	r2, [r3, #0]
}
 8000348:	bf00      	nop
 800034a:	371c      	adds	r7, #28
 800034c:	46bd      	mov	sp, r7
 800034e:	bc80      	pop	{r7}
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop

08000354 <ITM_SendChar>:

/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch){
 8000354:	b480      	push	{r7}
 8000356:	b083      	sub	sp, #12
 8000358:	af00      	add	r7, sp, #0
 800035a:	4603      	mov	r3, r0
 800035c:	71fb      	strb	r3, [r7, #7]
	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800035e:	4b0e      	ldr	r3, [pc, #56]	; (8000398 <ITM_SendChar+0x44>)
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	4a0d      	ldr	r2, [pc, #52]	; (8000398 <ITM_SendChar+0x44>)
 8000364:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000368:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800036a:	4b0c      	ldr	r3, [pc, #48]	; (800039c <ITM_SendChar+0x48>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	4a0b      	ldr	r2, [pc, #44]	; (800039c <ITM_SendChar+0x48>)
 8000370:	f043 0301 	orr.w	r3, r3, #1
 8000374:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000376:	bf00      	nop
 8000378:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	f003 0301 	and.w	r3, r3, #1
 8000382:	2b00      	cmp	r3, #0
 8000384:	d0f8      	beq.n	8000378 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000386:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800038a:	79fb      	ldrb	r3, [r7, #7]
 800038c:	6013      	str	r3, [r2, #0]
}
 800038e:	bf00      	nop
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	bc80      	pop	{r7}
 8000396:	4770      	bx	lr
 8000398:	e000edfc 	.word	0xe000edfc
 800039c:	e0000e00 	.word	0xe0000e00

080003a0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003a0:	b580      	push	{r7, lr}
 80003a2:	b086      	sub	sp, #24
 80003a4:	af00      	add	r7, sp, #0
 80003a6:	60f8      	str	r0, [r7, #12]
 80003a8:	60b9      	str	r1, [r7, #8]
 80003aa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ac:	2300      	movs	r3, #0
 80003ae:	617b      	str	r3, [r7, #20]
 80003b0:	e00a      	b.n	80003c8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003b2:	f3af 8000 	nop.w
 80003b6:	4601      	mov	r1, r0
 80003b8:	68bb      	ldr	r3, [r7, #8]
 80003ba:	1c5a      	adds	r2, r3, #1
 80003bc:	60ba      	str	r2, [r7, #8]
 80003be:	b2ca      	uxtb	r2, r1
 80003c0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003c2:	697b      	ldr	r3, [r7, #20]
 80003c4:	3301      	adds	r3, #1
 80003c6:	617b      	str	r3, [r7, #20]
 80003c8:	697a      	ldr	r2, [r7, #20]
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	429a      	cmp	r2, r3
 80003ce:	dbf0      	blt.n	80003b2 <_read+0x12>
  }

  return len;
 80003d0:	687b      	ldr	r3, [r7, #4]
}
 80003d2:	4618      	mov	r0, r3
 80003d4:	3718      	adds	r7, #24
 80003d6:	46bd      	mov	sp, r7
 80003d8:	bd80      	pop	{r7, pc}

080003da <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003da:	b580      	push	{r7, lr}
 80003dc:	b086      	sub	sp, #24
 80003de:	af00      	add	r7, sp, #0
 80003e0:	60f8      	str	r0, [r7, #12]
 80003e2:	60b9      	str	r1, [r7, #8]
 80003e4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e6:	2300      	movs	r3, #0
 80003e8:	617b      	str	r3, [r7, #20]
 80003ea:	e009      	b.n	8000400 <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 80003ec:	68bb      	ldr	r3, [r7, #8]
 80003ee:	1c5a      	adds	r2, r3, #1
 80003f0:	60ba      	str	r2, [r7, #8]
 80003f2:	781b      	ldrb	r3, [r3, #0]
 80003f4:	4618      	mov	r0, r3
 80003f6:	f7ff ffad 	bl	8000354 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fa:	697b      	ldr	r3, [r7, #20]
 80003fc:	3301      	adds	r3, #1
 80003fe:	617b      	str	r3, [r7, #20]
 8000400:	697a      	ldr	r2, [r7, #20]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	429a      	cmp	r2, r3
 8000406:	dbf1      	blt.n	80003ec <_write+0x12>
  }
  return len;
 8000408:	687b      	ldr	r3, [r7, #4]
}
 800040a:	4618      	mov	r0, r3
 800040c:	3718      	adds	r7, #24
 800040e:	46bd      	mov	sp, r7
 8000410:	bd80      	pop	{r7, pc}

08000412 <_close>:

int _close(int file)
{
 8000412:	b480      	push	{r7}
 8000414:	b083      	sub	sp, #12
 8000416:	af00      	add	r7, sp, #0
 8000418:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800041a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800041e:	4618      	mov	r0, r3
 8000420:	370c      	adds	r7, #12
 8000422:	46bd      	mov	sp, r7
 8000424:	bc80      	pop	{r7}
 8000426:	4770      	bx	lr

08000428 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000428:	b480      	push	{r7}
 800042a:	b083      	sub	sp, #12
 800042c:	af00      	add	r7, sp, #0
 800042e:	6078      	str	r0, [r7, #4]
 8000430:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000432:	683b      	ldr	r3, [r7, #0]
 8000434:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000438:	605a      	str	r2, [r3, #4]
  return 0;
 800043a:	2300      	movs	r3, #0
}
 800043c:	4618      	mov	r0, r3
 800043e:	370c      	adds	r7, #12
 8000440:	46bd      	mov	sp, r7
 8000442:	bc80      	pop	{r7}
 8000444:	4770      	bx	lr

08000446 <_isatty>:

int _isatty(int file)
{
 8000446:	b480      	push	{r7}
 8000448:	b083      	sub	sp, #12
 800044a:	af00      	add	r7, sp, #0
 800044c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800044e:	2301      	movs	r3, #1
}
 8000450:	4618      	mov	r0, r3
 8000452:	370c      	adds	r7, #12
 8000454:	46bd      	mov	sp, r7
 8000456:	bc80      	pop	{r7}
 8000458:	4770      	bx	lr

0800045a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800045a:	b480      	push	{r7}
 800045c:	b085      	sub	sp, #20
 800045e:	af00      	add	r7, sp, #0
 8000460:	60f8      	str	r0, [r7, #12]
 8000462:	60b9      	str	r1, [r7, #8]
 8000464:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000466:	2300      	movs	r3, #0
}
 8000468:	4618      	mov	r0, r3
 800046a:	3714      	adds	r7, #20
 800046c:	46bd      	mov	sp, r7
 800046e:	bc80      	pop	{r7}
 8000470:	4770      	bx	lr
	...

08000474 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000474:	b580      	push	{r7, lr}
 8000476:	b086      	sub	sp, #24
 8000478:	af00      	add	r7, sp, #0
 800047a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800047c:	4a14      	ldr	r2, [pc, #80]	; (80004d0 <_sbrk+0x5c>)
 800047e:	4b15      	ldr	r3, [pc, #84]	; (80004d4 <_sbrk+0x60>)
 8000480:	1ad3      	subs	r3, r2, r3
 8000482:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000484:	697b      	ldr	r3, [r7, #20]
 8000486:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000488:	4b13      	ldr	r3, [pc, #76]	; (80004d8 <_sbrk+0x64>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	2b00      	cmp	r3, #0
 800048e:	d102      	bne.n	8000496 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000490:	4b11      	ldr	r3, [pc, #68]	; (80004d8 <_sbrk+0x64>)
 8000492:	4a12      	ldr	r2, [pc, #72]	; (80004dc <_sbrk+0x68>)
 8000494:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000496:	4b10      	ldr	r3, [pc, #64]	; (80004d8 <_sbrk+0x64>)
 8000498:	681a      	ldr	r2, [r3, #0]
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	4413      	add	r3, r2
 800049e:	693a      	ldr	r2, [r7, #16]
 80004a0:	429a      	cmp	r2, r3
 80004a2:	d207      	bcs.n	80004b4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004a4:	f000 f846 	bl	8000534 <__errno>
 80004a8:	4603      	mov	r3, r0
 80004aa:	220c      	movs	r2, #12
 80004ac:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004ae:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80004b2:	e009      	b.n	80004c8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004b4:	4b08      	ldr	r3, [pc, #32]	; (80004d8 <_sbrk+0x64>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004ba:	4b07      	ldr	r3, [pc, #28]	; (80004d8 <_sbrk+0x64>)
 80004bc:	681a      	ldr	r2, [r3, #0]
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	4413      	add	r3, r2
 80004c2:	4a05      	ldr	r2, [pc, #20]	; (80004d8 <_sbrk+0x64>)
 80004c4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004c6:	68fb      	ldr	r3, [r7, #12]
}
 80004c8:	4618      	mov	r0, r3
 80004ca:	3718      	adds	r7, #24
 80004cc:	46bd      	mov	sp, r7
 80004ce:	bd80      	pop	{r7, pc}
 80004d0:	20020000 	.word	0x20020000
 80004d4:	00000400 	.word	0x00000400
 80004d8:	20000080 	.word	0x20000080
 80004dc:	20000098 	.word	0x20000098

080004e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004e0:	480d      	ldr	r0, [pc, #52]	; (8000518 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004e8:	480c      	ldr	r0, [pc, #48]	; (800051c <LoopForever+0x6>)
  ldr r1, =_edata
 80004ea:	490d      	ldr	r1, [pc, #52]	; (8000520 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004ec:	4a0d      	ldr	r2, [pc, #52]	; (8000524 <LoopForever+0xe>)
  movs r3, #0
 80004ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004f0:	e002      	b.n	80004f8 <LoopCopyDataInit>

080004f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004f6:	3304      	adds	r3, #4

080004f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004fc:	d3f9      	bcc.n	80004f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004fe:	4a0a      	ldr	r2, [pc, #40]	; (8000528 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000500:	4c0a      	ldr	r4, [pc, #40]	; (800052c <LoopForever+0x16>)
  movs r3, #0
 8000502:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000504:	e001      	b.n	800050a <LoopFillZerobss>

08000506 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000506:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000508:	3204      	adds	r2, #4

0800050a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800050a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800050c:	d3fb      	bcc.n	8000506 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800050e:	f000 f817 	bl	8000540 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000512:	f7ff febd 	bl	8000290 <main>

08000516 <LoopForever>:

LoopForever:
  b LoopForever
 8000516:	e7fe      	b.n	8000516 <LoopForever>
  ldr   r0, =_estack
 8000518:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800051c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000520:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000524:	08001570 	.word	0x08001570
  ldr r2, =_sbss
 8000528:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800052c:	20000094 	.word	0x20000094

08000530 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000530:	e7fe      	b.n	8000530 <ADC_IRQHandler>
	...

08000534 <__errno>:
 8000534:	4b01      	ldr	r3, [pc, #4]	; (800053c <__errno+0x8>)
 8000536:	6818      	ldr	r0, [r3, #0]
 8000538:	4770      	bx	lr
 800053a:	bf00      	nop
 800053c:	20000000 	.word	0x20000000

08000540 <__libc_init_array>:
 8000540:	b570      	push	{r4, r5, r6, lr}
 8000542:	4d0d      	ldr	r5, [pc, #52]	; (8000578 <__libc_init_array+0x38>)
 8000544:	4c0d      	ldr	r4, [pc, #52]	; (800057c <__libc_init_array+0x3c>)
 8000546:	1b64      	subs	r4, r4, r5
 8000548:	10a4      	asrs	r4, r4, #2
 800054a:	2600      	movs	r6, #0
 800054c:	42a6      	cmp	r6, r4
 800054e:	d109      	bne.n	8000564 <__libc_init_array+0x24>
 8000550:	4d0b      	ldr	r5, [pc, #44]	; (8000580 <__libc_init_array+0x40>)
 8000552:	4c0c      	ldr	r4, [pc, #48]	; (8000584 <__libc_init_array+0x44>)
 8000554:	f000 ffa6 	bl	80014a4 <_init>
 8000558:	1b64      	subs	r4, r4, r5
 800055a:	10a4      	asrs	r4, r4, #2
 800055c:	2600      	movs	r6, #0
 800055e:	42a6      	cmp	r6, r4
 8000560:	d105      	bne.n	800056e <__libc_init_array+0x2e>
 8000562:	bd70      	pop	{r4, r5, r6, pc}
 8000564:	f855 3b04 	ldr.w	r3, [r5], #4
 8000568:	4798      	blx	r3
 800056a:	3601      	adds	r6, #1
 800056c:	e7ee      	b.n	800054c <__libc_init_array+0xc>
 800056e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000572:	4798      	blx	r3
 8000574:	3601      	adds	r6, #1
 8000576:	e7f2      	b.n	800055e <__libc_init_array+0x1e>
 8000578:	08001568 	.word	0x08001568
 800057c:	08001568 	.word	0x08001568
 8000580:	08001568 	.word	0x08001568
 8000584:	0800156c 	.word	0x0800156c

08000588 <memset>:
 8000588:	4402      	add	r2, r0
 800058a:	4603      	mov	r3, r0
 800058c:	4293      	cmp	r3, r2
 800058e:	d100      	bne.n	8000592 <memset+0xa>
 8000590:	4770      	bx	lr
 8000592:	f803 1b01 	strb.w	r1, [r3], #1
 8000596:	e7f9      	b.n	800058c <memset+0x4>

08000598 <iprintf>:
 8000598:	b40f      	push	{r0, r1, r2, r3}
 800059a:	4b0a      	ldr	r3, [pc, #40]	; (80005c4 <iprintf+0x2c>)
 800059c:	b513      	push	{r0, r1, r4, lr}
 800059e:	681c      	ldr	r4, [r3, #0]
 80005a0:	b124      	cbz	r4, 80005ac <iprintf+0x14>
 80005a2:	69a3      	ldr	r3, [r4, #24]
 80005a4:	b913      	cbnz	r3, 80005ac <iprintf+0x14>
 80005a6:	4620      	mov	r0, r4
 80005a8:	f000 f866 	bl	8000678 <__sinit>
 80005ac:	ab05      	add	r3, sp, #20
 80005ae:	9a04      	ldr	r2, [sp, #16]
 80005b0:	68a1      	ldr	r1, [r4, #8]
 80005b2:	9301      	str	r3, [sp, #4]
 80005b4:	4620      	mov	r0, r4
 80005b6:	f000 f9bb 	bl	8000930 <_vfiprintf_r>
 80005ba:	b002      	add	sp, #8
 80005bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005c0:	b004      	add	sp, #16
 80005c2:	4770      	bx	lr
 80005c4:	20000000 	.word	0x20000000

080005c8 <std>:
 80005c8:	2300      	movs	r3, #0
 80005ca:	b510      	push	{r4, lr}
 80005cc:	4604      	mov	r4, r0
 80005ce:	e9c0 3300 	strd	r3, r3, [r0]
 80005d2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80005d6:	6083      	str	r3, [r0, #8]
 80005d8:	8181      	strh	r1, [r0, #12]
 80005da:	6643      	str	r3, [r0, #100]	; 0x64
 80005dc:	81c2      	strh	r2, [r0, #14]
 80005de:	6183      	str	r3, [r0, #24]
 80005e0:	4619      	mov	r1, r3
 80005e2:	2208      	movs	r2, #8
 80005e4:	305c      	adds	r0, #92	; 0x5c
 80005e6:	f7ff ffcf 	bl	8000588 <memset>
 80005ea:	4b05      	ldr	r3, [pc, #20]	; (8000600 <std+0x38>)
 80005ec:	6263      	str	r3, [r4, #36]	; 0x24
 80005ee:	4b05      	ldr	r3, [pc, #20]	; (8000604 <std+0x3c>)
 80005f0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005f2:	4b05      	ldr	r3, [pc, #20]	; (8000608 <std+0x40>)
 80005f4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005f6:	4b05      	ldr	r3, [pc, #20]	; (800060c <std+0x44>)
 80005f8:	6224      	str	r4, [r4, #32]
 80005fa:	6323      	str	r3, [r4, #48]	; 0x30
 80005fc:	bd10      	pop	{r4, pc}
 80005fe:	bf00      	nop
 8000600:	08000ed9 	.word	0x08000ed9
 8000604:	08000efb 	.word	0x08000efb
 8000608:	08000f33 	.word	0x08000f33
 800060c:	08000f57 	.word	0x08000f57

08000610 <_cleanup_r>:
 8000610:	4901      	ldr	r1, [pc, #4]	; (8000618 <_cleanup_r+0x8>)
 8000612:	f000 b8af 	b.w	8000774 <_fwalk_reent>
 8000616:	bf00      	nop
 8000618:	08001229 	.word	0x08001229

0800061c <__sfmoreglue>:
 800061c:	b570      	push	{r4, r5, r6, lr}
 800061e:	2268      	movs	r2, #104	; 0x68
 8000620:	1e4d      	subs	r5, r1, #1
 8000622:	4355      	muls	r5, r2
 8000624:	460e      	mov	r6, r1
 8000626:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800062a:	f000 f8e5 	bl	80007f8 <_malloc_r>
 800062e:	4604      	mov	r4, r0
 8000630:	b140      	cbz	r0, 8000644 <__sfmoreglue+0x28>
 8000632:	2100      	movs	r1, #0
 8000634:	e9c0 1600 	strd	r1, r6, [r0]
 8000638:	300c      	adds	r0, #12
 800063a:	60a0      	str	r0, [r4, #8]
 800063c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000640:	f7ff ffa2 	bl	8000588 <memset>
 8000644:	4620      	mov	r0, r4
 8000646:	bd70      	pop	{r4, r5, r6, pc}

08000648 <__sfp_lock_acquire>:
 8000648:	4801      	ldr	r0, [pc, #4]	; (8000650 <__sfp_lock_acquire+0x8>)
 800064a:	f000 b8b3 	b.w	80007b4 <__retarget_lock_acquire_recursive>
 800064e:	bf00      	nop
 8000650:	20000085 	.word	0x20000085

08000654 <__sfp_lock_release>:
 8000654:	4801      	ldr	r0, [pc, #4]	; (800065c <__sfp_lock_release+0x8>)
 8000656:	f000 b8ae 	b.w	80007b6 <__retarget_lock_release_recursive>
 800065a:	bf00      	nop
 800065c:	20000085 	.word	0x20000085

08000660 <__sinit_lock_acquire>:
 8000660:	4801      	ldr	r0, [pc, #4]	; (8000668 <__sinit_lock_acquire+0x8>)
 8000662:	f000 b8a7 	b.w	80007b4 <__retarget_lock_acquire_recursive>
 8000666:	bf00      	nop
 8000668:	20000086 	.word	0x20000086

0800066c <__sinit_lock_release>:
 800066c:	4801      	ldr	r0, [pc, #4]	; (8000674 <__sinit_lock_release+0x8>)
 800066e:	f000 b8a2 	b.w	80007b6 <__retarget_lock_release_recursive>
 8000672:	bf00      	nop
 8000674:	20000086 	.word	0x20000086

08000678 <__sinit>:
 8000678:	b510      	push	{r4, lr}
 800067a:	4604      	mov	r4, r0
 800067c:	f7ff fff0 	bl	8000660 <__sinit_lock_acquire>
 8000680:	69a3      	ldr	r3, [r4, #24]
 8000682:	b11b      	cbz	r3, 800068c <__sinit+0x14>
 8000684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000688:	f7ff bff0 	b.w	800066c <__sinit_lock_release>
 800068c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000690:	6523      	str	r3, [r4, #80]	; 0x50
 8000692:	4b13      	ldr	r3, [pc, #76]	; (80006e0 <__sinit+0x68>)
 8000694:	4a13      	ldr	r2, [pc, #76]	; (80006e4 <__sinit+0x6c>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	62a2      	str	r2, [r4, #40]	; 0x28
 800069a:	42a3      	cmp	r3, r4
 800069c:	bf04      	itt	eq
 800069e:	2301      	moveq	r3, #1
 80006a0:	61a3      	streq	r3, [r4, #24]
 80006a2:	4620      	mov	r0, r4
 80006a4:	f000 f820 	bl	80006e8 <__sfp>
 80006a8:	6060      	str	r0, [r4, #4]
 80006aa:	4620      	mov	r0, r4
 80006ac:	f000 f81c 	bl	80006e8 <__sfp>
 80006b0:	60a0      	str	r0, [r4, #8]
 80006b2:	4620      	mov	r0, r4
 80006b4:	f000 f818 	bl	80006e8 <__sfp>
 80006b8:	2200      	movs	r2, #0
 80006ba:	60e0      	str	r0, [r4, #12]
 80006bc:	2104      	movs	r1, #4
 80006be:	6860      	ldr	r0, [r4, #4]
 80006c0:	f7ff ff82 	bl	80005c8 <std>
 80006c4:	68a0      	ldr	r0, [r4, #8]
 80006c6:	2201      	movs	r2, #1
 80006c8:	2109      	movs	r1, #9
 80006ca:	f7ff ff7d 	bl	80005c8 <std>
 80006ce:	68e0      	ldr	r0, [r4, #12]
 80006d0:	2202      	movs	r2, #2
 80006d2:	2112      	movs	r1, #18
 80006d4:	f7ff ff78 	bl	80005c8 <std>
 80006d8:	2301      	movs	r3, #1
 80006da:	61a3      	str	r3, [r4, #24]
 80006dc:	e7d2      	b.n	8000684 <__sinit+0xc>
 80006de:	bf00      	nop
 80006e0:	080014d0 	.word	0x080014d0
 80006e4:	08000611 	.word	0x08000611

080006e8 <__sfp>:
 80006e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ea:	4607      	mov	r7, r0
 80006ec:	f7ff ffac 	bl	8000648 <__sfp_lock_acquire>
 80006f0:	4b1e      	ldr	r3, [pc, #120]	; (800076c <__sfp+0x84>)
 80006f2:	681e      	ldr	r6, [r3, #0]
 80006f4:	69b3      	ldr	r3, [r6, #24]
 80006f6:	b913      	cbnz	r3, 80006fe <__sfp+0x16>
 80006f8:	4630      	mov	r0, r6
 80006fa:	f7ff ffbd 	bl	8000678 <__sinit>
 80006fe:	3648      	adds	r6, #72	; 0x48
 8000700:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000704:	3b01      	subs	r3, #1
 8000706:	d503      	bpl.n	8000710 <__sfp+0x28>
 8000708:	6833      	ldr	r3, [r6, #0]
 800070a:	b30b      	cbz	r3, 8000750 <__sfp+0x68>
 800070c:	6836      	ldr	r6, [r6, #0]
 800070e:	e7f7      	b.n	8000700 <__sfp+0x18>
 8000710:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000714:	b9d5      	cbnz	r5, 800074c <__sfp+0x64>
 8000716:	4b16      	ldr	r3, [pc, #88]	; (8000770 <__sfp+0x88>)
 8000718:	60e3      	str	r3, [r4, #12]
 800071a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800071e:	6665      	str	r5, [r4, #100]	; 0x64
 8000720:	f000 f847 	bl	80007b2 <__retarget_lock_init_recursive>
 8000724:	f7ff ff96 	bl	8000654 <__sfp_lock_release>
 8000728:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800072c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000730:	6025      	str	r5, [r4, #0]
 8000732:	61a5      	str	r5, [r4, #24]
 8000734:	2208      	movs	r2, #8
 8000736:	4629      	mov	r1, r5
 8000738:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800073c:	f7ff ff24 	bl	8000588 <memset>
 8000740:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000744:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000748:	4620      	mov	r0, r4
 800074a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800074c:	3468      	adds	r4, #104	; 0x68
 800074e:	e7d9      	b.n	8000704 <__sfp+0x1c>
 8000750:	2104      	movs	r1, #4
 8000752:	4638      	mov	r0, r7
 8000754:	f7ff ff62 	bl	800061c <__sfmoreglue>
 8000758:	4604      	mov	r4, r0
 800075a:	6030      	str	r0, [r6, #0]
 800075c:	2800      	cmp	r0, #0
 800075e:	d1d5      	bne.n	800070c <__sfp+0x24>
 8000760:	f7ff ff78 	bl	8000654 <__sfp_lock_release>
 8000764:	230c      	movs	r3, #12
 8000766:	603b      	str	r3, [r7, #0]
 8000768:	e7ee      	b.n	8000748 <__sfp+0x60>
 800076a:	bf00      	nop
 800076c:	080014d0 	.word	0x080014d0
 8000770:	ffff0001 	.word	0xffff0001

08000774 <_fwalk_reent>:
 8000774:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000778:	4606      	mov	r6, r0
 800077a:	4688      	mov	r8, r1
 800077c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000780:	2700      	movs	r7, #0
 8000782:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000786:	f1b9 0901 	subs.w	r9, r9, #1
 800078a:	d505      	bpl.n	8000798 <_fwalk_reent+0x24>
 800078c:	6824      	ldr	r4, [r4, #0]
 800078e:	2c00      	cmp	r4, #0
 8000790:	d1f7      	bne.n	8000782 <_fwalk_reent+0xe>
 8000792:	4638      	mov	r0, r7
 8000794:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000798:	89ab      	ldrh	r3, [r5, #12]
 800079a:	2b01      	cmp	r3, #1
 800079c:	d907      	bls.n	80007ae <_fwalk_reent+0x3a>
 800079e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007a2:	3301      	adds	r3, #1
 80007a4:	d003      	beq.n	80007ae <_fwalk_reent+0x3a>
 80007a6:	4629      	mov	r1, r5
 80007a8:	4630      	mov	r0, r6
 80007aa:	47c0      	blx	r8
 80007ac:	4307      	orrs	r7, r0
 80007ae:	3568      	adds	r5, #104	; 0x68
 80007b0:	e7e9      	b.n	8000786 <_fwalk_reent+0x12>

080007b2 <__retarget_lock_init_recursive>:
 80007b2:	4770      	bx	lr

080007b4 <__retarget_lock_acquire_recursive>:
 80007b4:	4770      	bx	lr

080007b6 <__retarget_lock_release_recursive>:
 80007b6:	4770      	bx	lr

080007b8 <sbrk_aligned>:
 80007b8:	b570      	push	{r4, r5, r6, lr}
 80007ba:	4e0e      	ldr	r6, [pc, #56]	; (80007f4 <sbrk_aligned+0x3c>)
 80007bc:	460c      	mov	r4, r1
 80007be:	6831      	ldr	r1, [r6, #0]
 80007c0:	4605      	mov	r5, r0
 80007c2:	b911      	cbnz	r1, 80007ca <sbrk_aligned+0x12>
 80007c4:	f000 fb78 	bl	8000eb8 <_sbrk_r>
 80007c8:	6030      	str	r0, [r6, #0]
 80007ca:	4621      	mov	r1, r4
 80007cc:	4628      	mov	r0, r5
 80007ce:	f000 fb73 	bl	8000eb8 <_sbrk_r>
 80007d2:	1c43      	adds	r3, r0, #1
 80007d4:	d00a      	beq.n	80007ec <sbrk_aligned+0x34>
 80007d6:	1cc4      	adds	r4, r0, #3
 80007d8:	f024 0403 	bic.w	r4, r4, #3
 80007dc:	42a0      	cmp	r0, r4
 80007de:	d007      	beq.n	80007f0 <sbrk_aligned+0x38>
 80007e0:	1a21      	subs	r1, r4, r0
 80007e2:	4628      	mov	r0, r5
 80007e4:	f000 fb68 	bl	8000eb8 <_sbrk_r>
 80007e8:	3001      	adds	r0, #1
 80007ea:	d101      	bne.n	80007f0 <sbrk_aligned+0x38>
 80007ec:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80007f0:	4620      	mov	r0, r4
 80007f2:	bd70      	pop	{r4, r5, r6, pc}
 80007f4:	2000008c 	.word	0x2000008c

080007f8 <_malloc_r>:
 80007f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007fc:	1ccd      	adds	r5, r1, #3
 80007fe:	f025 0503 	bic.w	r5, r5, #3
 8000802:	3508      	adds	r5, #8
 8000804:	2d0c      	cmp	r5, #12
 8000806:	bf38      	it	cc
 8000808:	250c      	movcc	r5, #12
 800080a:	2d00      	cmp	r5, #0
 800080c:	4607      	mov	r7, r0
 800080e:	db01      	blt.n	8000814 <_malloc_r+0x1c>
 8000810:	42a9      	cmp	r1, r5
 8000812:	d905      	bls.n	8000820 <_malloc_r+0x28>
 8000814:	230c      	movs	r3, #12
 8000816:	603b      	str	r3, [r7, #0]
 8000818:	2600      	movs	r6, #0
 800081a:	4630      	mov	r0, r6
 800081c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000820:	4e2e      	ldr	r6, [pc, #184]	; (80008dc <_malloc_r+0xe4>)
 8000822:	f000 fdb5 	bl	8001390 <__malloc_lock>
 8000826:	6833      	ldr	r3, [r6, #0]
 8000828:	461c      	mov	r4, r3
 800082a:	bb34      	cbnz	r4, 800087a <_malloc_r+0x82>
 800082c:	4629      	mov	r1, r5
 800082e:	4638      	mov	r0, r7
 8000830:	f7ff ffc2 	bl	80007b8 <sbrk_aligned>
 8000834:	1c43      	adds	r3, r0, #1
 8000836:	4604      	mov	r4, r0
 8000838:	d14d      	bne.n	80008d6 <_malloc_r+0xde>
 800083a:	6834      	ldr	r4, [r6, #0]
 800083c:	4626      	mov	r6, r4
 800083e:	2e00      	cmp	r6, #0
 8000840:	d140      	bne.n	80008c4 <_malloc_r+0xcc>
 8000842:	6823      	ldr	r3, [r4, #0]
 8000844:	4631      	mov	r1, r6
 8000846:	4638      	mov	r0, r7
 8000848:	eb04 0803 	add.w	r8, r4, r3
 800084c:	f000 fb34 	bl	8000eb8 <_sbrk_r>
 8000850:	4580      	cmp	r8, r0
 8000852:	d13a      	bne.n	80008ca <_malloc_r+0xd2>
 8000854:	6821      	ldr	r1, [r4, #0]
 8000856:	3503      	adds	r5, #3
 8000858:	1a6d      	subs	r5, r5, r1
 800085a:	f025 0503 	bic.w	r5, r5, #3
 800085e:	3508      	adds	r5, #8
 8000860:	2d0c      	cmp	r5, #12
 8000862:	bf38      	it	cc
 8000864:	250c      	movcc	r5, #12
 8000866:	4629      	mov	r1, r5
 8000868:	4638      	mov	r0, r7
 800086a:	f7ff ffa5 	bl	80007b8 <sbrk_aligned>
 800086e:	3001      	adds	r0, #1
 8000870:	d02b      	beq.n	80008ca <_malloc_r+0xd2>
 8000872:	6823      	ldr	r3, [r4, #0]
 8000874:	442b      	add	r3, r5
 8000876:	6023      	str	r3, [r4, #0]
 8000878:	e00e      	b.n	8000898 <_malloc_r+0xa0>
 800087a:	6822      	ldr	r2, [r4, #0]
 800087c:	1b52      	subs	r2, r2, r5
 800087e:	d41e      	bmi.n	80008be <_malloc_r+0xc6>
 8000880:	2a0b      	cmp	r2, #11
 8000882:	d916      	bls.n	80008b2 <_malloc_r+0xba>
 8000884:	1961      	adds	r1, r4, r5
 8000886:	42a3      	cmp	r3, r4
 8000888:	6025      	str	r5, [r4, #0]
 800088a:	bf18      	it	ne
 800088c:	6059      	strne	r1, [r3, #4]
 800088e:	6863      	ldr	r3, [r4, #4]
 8000890:	bf08      	it	eq
 8000892:	6031      	streq	r1, [r6, #0]
 8000894:	5162      	str	r2, [r4, r5]
 8000896:	604b      	str	r3, [r1, #4]
 8000898:	4638      	mov	r0, r7
 800089a:	f104 060b 	add.w	r6, r4, #11
 800089e:	f000 fd7d 	bl	800139c <__malloc_unlock>
 80008a2:	f026 0607 	bic.w	r6, r6, #7
 80008a6:	1d23      	adds	r3, r4, #4
 80008a8:	1af2      	subs	r2, r6, r3
 80008aa:	d0b6      	beq.n	800081a <_malloc_r+0x22>
 80008ac:	1b9b      	subs	r3, r3, r6
 80008ae:	50a3      	str	r3, [r4, r2]
 80008b0:	e7b3      	b.n	800081a <_malloc_r+0x22>
 80008b2:	6862      	ldr	r2, [r4, #4]
 80008b4:	42a3      	cmp	r3, r4
 80008b6:	bf0c      	ite	eq
 80008b8:	6032      	streq	r2, [r6, #0]
 80008ba:	605a      	strne	r2, [r3, #4]
 80008bc:	e7ec      	b.n	8000898 <_malloc_r+0xa0>
 80008be:	4623      	mov	r3, r4
 80008c0:	6864      	ldr	r4, [r4, #4]
 80008c2:	e7b2      	b.n	800082a <_malloc_r+0x32>
 80008c4:	4634      	mov	r4, r6
 80008c6:	6876      	ldr	r6, [r6, #4]
 80008c8:	e7b9      	b.n	800083e <_malloc_r+0x46>
 80008ca:	230c      	movs	r3, #12
 80008cc:	603b      	str	r3, [r7, #0]
 80008ce:	4638      	mov	r0, r7
 80008d0:	f000 fd64 	bl	800139c <__malloc_unlock>
 80008d4:	e7a1      	b.n	800081a <_malloc_r+0x22>
 80008d6:	6025      	str	r5, [r4, #0]
 80008d8:	e7de      	b.n	8000898 <_malloc_r+0xa0>
 80008da:	bf00      	nop
 80008dc:	20000088 	.word	0x20000088

080008e0 <__sfputc_r>:
 80008e0:	6893      	ldr	r3, [r2, #8]
 80008e2:	3b01      	subs	r3, #1
 80008e4:	2b00      	cmp	r3, #0
 80008e6:	b410      	push	{r4}
 80008e8:	6093      	str	r3, [r2, #8]
 80008ea:	da07      	bge.n	80008fc <__sfputc_r+0x1c>
 80008ec:	6994      	ldr	r4, [r2, #24]
 80008ee:	42a3      	cmp	r3, r4
 80008f0:	db01      	blt.n	80008f6 <__sfputc_r+0x16>
 80008f2:	290a      	cmp	r1, #10
 80008f4:	d102      	bne.n	80008fc <__sfputc_r+0x1c>
 80008f6:	bc10      	pop	{r4}
 80008f8:	f000 bb32 	b.w	8000f60 <__swbuf_r>
 80008fc:	6813      	ldr	r3, [r2, #0]
 80008fe:	1c58      	adds	r0, r3, #1
 8000900:	6010      	str	r0, [r2, #0]
 8000902:	7019      	strb	r1, [r3, #0]
 8000904:	4608      	mov	r0, r1
 8000906:	bc10      	pop	{r4}
 8000908:	4770      	bx	lr

0800090a <__sfputs_r>:
 800090a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800090c:	4606      	mov	r6, r0
 800090e:	460f      	mov	r7, r1
 8000910:	4614      	mov	r4, r2
 8000912:	18d5      	adds	r5, r2, r3
 8000914:	42ac      	cmp	r4, r5
 8000916:	d101      	bne.n	800091c <__sfputs_r+0x12>
 8000918:	2000      	movs	r0, #0
 800091a:	e007      	b.n	800092c <__sfputs_r+0x22>
 800091c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000920:	463a      	mov	r2, r7
 8000922:	4630      	mov	r0, r6
 8000924:	f7ff ffdc 	bl	80008e0 <__sfputc_r>
 8000928:	1c43      	adds	r3, r0, #1
 800092a:	d1f3      	bne.n	8000914 <__sfputs_r+0xa>
 800092c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000930 <_vfiprintf_r>:
 8000930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000934:	460d      	mov	r5, r1
 8000936:	b09d      	sub	sp, #116	; 0x74
 8000938:	4614      	mov	r4, r2
 800093a:	4698      	mov	r8, r3
 800093c:	4606      	mov	r6, r0
 800093e:	b118      	cbz	r0, 8000948 <_vfiprintf_r+0x18>
 8000940:	6983      	ldr	r3, [r0, #24]
 8000942:	b90b      	cbnz	r3, 8000948 <_vfiprintf_r+0x18>
 8000944:	f7ff fe98 	bl	8000678 <__sinit>
 8000948:	4b89      	ldr	r3, [pc, #548]	; (8000b70 <_vfiprintf_r+0x240>)
 800094a:	429d      	cmp	r5, r3
 800094c:	d11b      	bne.n	8000986 <_vfiprintf_r+0x56>
 800094e:	6875      	ldr	r5, [r6, #4]
 8000950:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000952:	07d9      	lsls	r1, r3, #31
 8000954:	d405      	bmi.n	8000962 <_vfiprintf_r+0x32>
 8000956:	89ab      	ldrh	r3, [r5, #12]
 8000958:	059a      	lsls	r2, r3, #22
 800095a:	d402      	bmi.n	8000962 <_vfiprintf_r+0x32>
 800095c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800095e:	f7ff ff29 	bl	80007b4 <__retarget_lock_acquire_recursive>
 8000962:	89ab      	ldrh	r3, [r5, #12]
 8000964:	071b      	lsls	r3, r3, #28
 8000966:	d501      	bpl.n	800096c <_vfiprintf_r+0x3c>
 8000968:	692b      	ldr	r3, [r5, #16]
 800096a:	b9eb      	cbnz	r3, 80009a8 <_vfiprintf_r+0x78>
 800096c:	4629      	mov	r1, r5
 800096e:	4630      	mov	r0, r6
 8000970:	f000 fb5a 	bl	8001028 <__swsetup_r>
 8000974:	b1c0      	cbz	r0, 80009a8 <_vfiprintf_r+0x78>
 8000976:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000978:	07dc      	lsls	r4, r3, #31
 800097a:	d50e      	bpl.n	800099a <_vfiprintf_r+0x6a>
 800097c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000980:	b01d      	add	sp, #116	; 0x74
 8000982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000986:	4b7b      	ldr	r3, [pc, #492]	; (8000b74 <_vfiprintf_r+0x244>)
 8000988:	429d      	cmp	r5, r3
 800098a:	d101      	bne.n	8000990 <_vfiprintf_r+0x60>
 800098c:	68b5      	ldr	r5, [r6, #8]
 800098e:	e7df      	b.n	8000950 <_vfiprintf_r+0x20>
 8000990:	4b79      	ldr	r3, [pc, #484]	; (8000b78 <_vfiprintf_r+0x248>)
 8000992:	429d      	cmp	r5, r3
 8000994:	bf08      	it	eq
 8000996:	68f5      	ldreq	r5, [r6, #12]
 8000998:	e7da      	b.n	8000950 <_vfiprintf_r+0x20>
 800099a:	89ab      	ldrh	r3, [r5, #12]
 800099c:	0598      	lsls	r0, r3, #22
 800099e:	d4ed      	bmi.n	800097c <_vfiprintf_r+0x4c>
 80009a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009a2:	f7ff ff08 	bl	80007b6 <__retarget_lock_release_recursive>
 80009a6:	e7e9      	b.n	800097c <_vfiprintf_r+0x4c>
 80009a8:	2300      	movs	r3, #0
 80009aa:	9309      	str	r3, [sp, #36]	; 0x24
 80009ac:	2320      	movs	r3, #32
 80009ae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80009b2:	f8cd 800c 	str.w	r8, [sp, #12]
 80009b6:	2330      	movs	r3, #48	; 0x30
 80009b8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000b7c <_vfiprintf_r+0x24c>
 80009bc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80009c0:	f04f 0901 	mov.w	r9, #1
 80009c4:	4623      	mov	r3, r4
 80009c6:	469a      	mov	sl, r3
 80009c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80009cc:	b10a      	cbz	r2, 80009d2 <_vfiprintf_r+0xa2>
 80009ce:	2a25      	cmp	r2, #37	; 0x25
 80009d0:	d1f9      	bne.n	80009c6 <_vfiprintf_r+0x96>
 80009d2:	ebba 0b04 	subs.w	fp, sl, r4
 80009d6:	d00b      	beq.n	80009f0 <_vfiprintf_r+0xc0>
 80009d8:	465b      	mov	r3, fp
 80009da:	4622      	mov	r2, r4
 80009dc:	4629      	mov	r1, r5
 80009de:	4630      	mov	r0, r6
 80009e0:	f7ff ff93 	bl	800090a <__sfputs_r>
 80009e4:	3001      	adds	r0, #1
 80009e6:	f000 80aa 	beq.w	8000b3e <_vfiprintf_r+0x20e>
 80009ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80009ec:	445a      	add	r2, fp
 80009ee:	9209      	str	r2, [sp, #36]	; 0x24
 80009f0:	f89a 3000 	ldrb.w	r3, [sl]
 80009f4:	2b00      	cmp	r3, #0
 80009f6:	f000 80a2 	beq.w	8000b3e <_vfiprintf_r+0x20e>
 80009fa:	2300      	movs	r3, #0
 80009fc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000a00:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a04:	f10a 0a01 	add.w	sl, sl, #1
 8000a08:	9304      	str	r3, [sp, #16]
 8000a0a:	9307      	str	r3, [sp, #28]
 8000a0c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a10:	931a      	str	r3, [sp, #104]	; 0x68
 8000a12:	4654      	mov	r4, sl
 8000a14:	2205      	movs	r2, #5
 8000a16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a1a:	4858      	ldr	r0, [pc, #352]	; (8000b7c <_vfiprintf_r+0x24c>)
 8000a1c:	f7ff fbe8 	bl	80001f0 <memchr>
 8000a20:	9a04      	ldr	r2, [sp, #16]
 8000a22:	b9d8      	cbnz	r0, 8000a5c <_vfiprintf_r+0x12c>
 8000a24:	06d1      	lsls	r1, r2, #27
 8000a26:	bf44      	itt	mi
 8000a28:	2320      	movmi	r3, #32
 8000a2a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a2e:	0713      	lsls	r3, r2, #28
 8000a30:	bf44      	itt	mi
 8000a32:	232b      	movmi	r3, #43	; 0x2b
 8000a34:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a38:	f89a 3000 	ldrb.w	r3, [sl]
 8000a3c:	2b2a      	cmp	r3, #42	; 0x2a
 8000a3e:	d015      	beq.n	8000a6c <_vfiprintf_r+0x13c>
 8000a40:	9a07      	ldr	r2, [sp, #28]
 8000a42:	4654      	mov	r4, sl
 8000a44:	2000      	movs	r0, #0
 8000a46:	f04f 0c0a 	mov.w	ip, #10
 8000a4a:	4621      	mov	r1, r4
 8000a4c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a50:	3b30      	subs	r3, #48	; 0x30
 8000a52:	2b09      	cmp	r3, #9
 8000a54:	d94e      	bls.n	8000af4 <_vfiprintf_r+0x1c4>
 8000a56:	b1b0      	cbz	r0, 8000a86 <_vfiprintf_r+0x156>
 8000a58:	9207      	str	r2, [sp, #28]
 8000a5a:	e014      	b.n	8000a86 <_vfiprintf_r+0x156>
 8000a5c:	eba0 0308 	sub.w	r3, r0, r8
 8000a60:	fa09 f303 	lsl.w	r3, r9, r3
 8000a64:	4313      	orrs	r3, r2
 8000a66:	9304      	str	r3, [sp, #16]
 8000a68:	46a2      	mov	sl, r4
 8000a6a:	e7d2      	b.n	8000a12 <_vfiprintf_r+0xe2>
 8000a6c:	9b03      	ldr	r3, [sp, #12]
 8000a6e:	1d19      	adds	r1, r3, #4
 8000a70:	681b      	ldr	r3, [r3, #0]
 8000a72:	9103      	str	r1, [sp, #12]
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	bfbb      	ittet	lt
 8000a78:	425b      	neglt	r3, r3
 8000a7a:	f042 0202 	orrlt.w	r2, r2, #2
 8000a7e:	9307      	strge	r3, [sp, #28]
 8000a80:	9307      	strlt	r3, [sp, #28]
 8000a82:	bfb8      	it	lt
 8000a84:	9204      	strlt	r2, [sp, #16]
 8000a86:	7823      	ldrb	r3, [r4, #0]
 8000a88:	2b2e      	cmp	r3, #46	; 0x2e
 8000a8a:	d10c      	bne.n	8000aa6 <_vfiprintf_r+0x176>
 8000a8c:	7863      	ldrb	r3, [r4, #1]
 8000a8e:	2b2a      	cmp	r3, #42	; 0x2a
 8000a90:	d135      	bne.n	8000afe <_vfiprintf_r+0x1ce>
 8000a92:	9b03      	ldr	r3, [sp, #12]
 8000a94:	1d1a      	adds	r2, r3, #4
 8000a96:	681b      	ldr	r3, [r3, #0]
 8000a98:	9203      	str	r2, [sp, #12]
 8000a9a:	2b00      	cmp	r3, #0
 8000a9c:	bfb8      	it	lt
 8000a9e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000aa2:	3402      	adds	r4, #2
 8000aa4:	9305      	str	r3, [sp, #20]
 8000aa6:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000b80 <_vfiprintf_r+0x250>
 8000aaa:	7821      	ldrb	r1, [r4, #0]
 8000aac:	2203      	movs	r2, #3
 8000aae:	4650      	mov	r0, sl
 8000ab0:	f7ff fb9e 	bl	80001f0 <memchr>
 8000ab4:	b140      	cbz	r0, 8000ac8 <_vfiprintf_r+0x198>
 8000ab6:	2340      	movs	r3, #64	; 0x40
 8000ab8:	eba0 000a 	sub.w	r0, r0, sl
 8000abc:	fa03 f000 	lsl.w	r0, r3, r0
 8000ac0:	9b04      	ldr	r3, [sp, #16]
 8000ac2:	4303      	orrs	r3, r0
 8000ac4:	3401      	adds	r4, #1
 8000ac6:	9304      	str	r3, [sp, #16]
 8000ac8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000acc:	482d      	ldr	r0, [pc, #180]	; (8000b84 <_vfiprintf_r+0x254>)
 8000ace:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ad2:	2206      	movs	r2, #6
 8000ad4:	f7ff fb8c 	bl	80001f0 <memchr>
 8000ad8:	2800      	cmp	r0, #0
 8000ada:	d03f      	beq.n	8000b5c <_vfiprintf_r+0x22c>
 8000adc:	4b2a      	ldr	r3, [pc, #168]	; (8000b88 <_vfiprintf_r+0x258>)
 8000ade:	bb1b      	cbnz	r3, 8000b28 <_vfiprintf_r+0x1f8>
 8000ae0:	9b03      	ldr	r3, [sp, #12]
 8000ae2:	3307      	adds	r3, #7
 8000ae4:	f023 0307 	bic.w	r3, r3, #7
 8000ae8:	3308      	adds	r3, #8
 8000aea:	9303      	str	r3, [sp, #12]
 8000aec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000aee:	443b      	add	r3, r7
 8000af0:	9309      	str	r3, [sp, #36]	; 0x24
 8000af2:	e767      	b.n	80009c4 <_vfiprintf_r+0x94>
 8000af4:	fb0c 3202 	mla	r2, ip, r2, r3
 8000af8:	460c      	mov	r4, r1
 8000afa:	2001      	movs	r0, #1
 8000afc:	e7a5      	b.n	8000a4a <_vfiprintf_r+0x11a>
 8000afe:	2300      	movs	r3, #0
 8000b00:	3401      	adds	r4, #1
 8000b02:	9305      	str	r3, [sp, #20]
 8000b04:	4619      	mov	r1, r3
 8000b06:	f04f 0c0a 	mov.w	ip, #10
 8000b0a:	4620      	mov	r0, r4
 8000b0c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b10:	3a30      	subs	r2, #48	; 0x30
 8000b12:	2a09      	cmp	r2, #9
 8000b14:	d903      	bls.n	8000b1e <_vfiprintf_r+0x1ee>
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d0c5      	beq.n	8000aa6 <_vfiprintf_r+0x176>
 8000b1a:	9105      	str	r1, [sp, #20]
 8000b1c:	e7c3      	b.n	8000aa6 <_vfiprintf_r+0x176>
 8000b1e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b22:	4604      	mov	r4, r0
 8000b24:	2301      	movs	r3, #1
 8000b26:	e7f0      	b.n	8000b0a <_vfiprintf_r+0x1da>
 8000b28:	ab03      	add	r3, sp, #12
 8000b2a:	9300      	str	r3, [sp, #0]
 8000b2c:	462a      	mov	r2, r5
 8000b2e:	4b17      	ldr	r3, [pc, #92]	; (8000b8c <_vfiprintf_r+0x25c>)
 8000b30:	a904      	add	r1, sp, #16
 8000b32:	4630      	mov	r0, r6
 8000b34:	f3af 8000 	nop.w
 8000b38:	4607      	mov	r7, r0
 8000b3a:	1c78      	adds	r0, r7, #1
 8000b3c:	d1d6      	bne.n	8000aec <_vfiprintf_r+0x1bc>
 8000b3e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b40:	07d9      	lsls	r1, r3, #31
 8000b42:	d405      	bmi.n	8000b50 <_vfiprintf_r+0x220>
 8000b44:	89ab      	ldrh	r3, [r5, #12]
 8000b46:	059a      	lsls	r2, r3, #22
 8000b48:	d402      	bmi.n	8000b50 <_vfiprintf_r+0x220>
 8000b4a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b4c:	f7ff fe33 	bl	80007b6 <__retarget_lock_release_recursive>
 8000b50:	89ab      	ldrh	r3, [r5, #12]
 8000b52:	065b      	lsls	r3, r3, #25
 8000b54:	f53f af12 	bmi.w	800097c <_vfiprintf_r+0x4c>
 8000b58:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b5a:	e711      	b.n	8000980 <_vfiprintf_r+0x50>
 8000b5c:	ab03      	add	r3, sp, #12
 8000b5e:	9300      	str	r3, [sp, #0]
 8000b60:	462a      	mov	r2, r5
 8000b62:	4b0a      	ldr	r3, [pc, #40]	; (8000b8c <_vfiprintf_r+0x25c>)
 8000b64:	a904      	add	r1, sp, #16
 8000b66:	4630      	mov	r0, r6
 8000b68:	f000 f880 	bl	8000c6c <_printf_i>
 8000b6c:	e7e4      	b.n	8000b38 <_vfiprintf_r+0x208>
 8000b6e:	bf00      	nop
 8000b70:	080014f4 	.word	0x080014f4
 8000b74:	08001514 	.word	0x08001514
 8000b78:	080014d4 	.word	0x080014d4
 8000b7c:	08001534 	.word	0x08001534
 8000b80:	0800153a 	.word	0x0800153a
 8000b84:	0800153e 	.word	0x0800153e
 8000b88:	00000000 	.word	0x00000000
 8000b8c:	0800090b 	.word	0x0800090b

08000b90 <_printf_common>:
 8000b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b94:	4616      	mov	r6, r2
 8000b96:	4699      	mov	r9, r3
 8000b98:	688a      	ldr	r2, [r1, #8]
 8000b9a:	690b      	ldr	r3, [r1, #16]
 8000b9c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ba0:	4293      	cmp	r3, r2
 8000ba2:	bfb8      	it	lt
 8000ba4:	4613      	movlt	r3, r2
 8000ba6:	6033      	str	r3, [r6, #0]
 8000ba8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000bac:	4607      	mov	r7, r0
 8000bae:	460c      	mov	r4, r1
 8000bb0:	b10a      	cbz	r2, 8000bb6 <_printf_common+0x26>
 8000bb2:	3301      	adds	r3, #1
 8000bb4:	6033      	str	r3, [r6, #0]
 8000bb6:	6823      	ldr	r3, [r4, #0]
 8000bb8:	0699      	lsls	r1, r3, #26
 8000bba:	bf42      	ittt	mi
 8000bbc:	6833      	ldrmi	r3, [r6, #0]
 8000bbe:	3302      	addmi	r3, #2
 8000bc0:	6033      	strmi	r3, [r6, #0]
 8000bc2:	6825      	ldr	r5, [r4, #0]
 8000bc4:	f015 0506 	ands.w	r5, r5, #6
 8000bc8:	d106      	bne.n	8000bd8 <_printf_common+0x48>
 8000bca:	f104 0a19 	add.w	sl, r4, #25
 8000bce:	68e3      	ldr	r3, [r4, #12]
 8000bd0:	6832      	ldr	r2, [r6, #0]
 8000bd2:	1a9b      	subs	r3, r3, r2
 8000bd4:	42ab      	cmp	r3, r5
 8000bd6:	dc26      	bgt.n	8000c26 <_printf_common+0x96>
 8000bd8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000bdc:	1e13      	subs	r3, r2, #0
 8000bde:	6822      	ldr	r2, [r4, #0]
 8000be0:	bf18      	it	ne
 8000be2:	2301      	movne	r3, #1
 8000be4:	0692      	lsls	r2, r2, #26
 8000be6:	d42b      	bmi.n	8000c40 <_printf_common+0xb0>
 8000be8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bec:	4649      	mov	r1, r9
 8000bee:	4638      	mov	r0, r7
 8000bf0:	47c0      	blx	r8
 8000bf2:	3001      	adds	r0, #1
 8000bf4:	d01e      	beq.n	8000c34 <_printf_common+0xa4>
 8000bf6:	6823      	ldr	r3, [r4, #0]
 8000bf8:	68e5      	ldr	r5, [r4, #12]
 8000bfa:	6832      	ldr	r2, [r6, #0]
 8000bfc:	f003 0306 	and.w	r3, r3, #6
 8000c00:	2b04      	cmp	r3, #4
 8000c02:	bf08      	it	eq
 8000c04:	1aad      	subeq	r5, r5, r2
 8000c06:	68a3      	ldr	r3, [r4, #8]
 8000c08:	6922      	ldr	r2, [r4, #16]
 8000c0a:	bf0c      	ite	eq
 8000c0c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c10:	2500      	movne	r5, #0
 8000c12:	4293      	cmp	r3, r2
 8000c14:	bfc4      	itt	gt
 8000c16:	1a9b      	subgt	r3, r3, r2
 8000c18:	18ed      	addgt	r5, r5, r3
 8000c1a:	2600      	movs	r6, #0
 8000c1c:	341a      	adds	r4, #26
 8000c1e:	42b5      	cmp	r5, r6
 8000c20:	d11a      	bne.n	8000c58 <_printf_common+0xc8>
 8000c22:	2000      	movs	r0, #0
 8000c24:	e008      	b.n	8000c38 <_printf_common+0xa8>
 8000c26:	2301      	movs	r3, #1
 8000c28:	4652      	mov	r2, sl
 8000c2a:	4649      	mov	r1, r9
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	47c0      	blx	r8
 8000c30:	3001      	adds	r0, #1
 8000c32:	d103      	bne.n	8000c3c <_printf_common+0xac>
 8000c34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c3c:	3501      	adds	r5, #1
 8000c3e:	e7c6      	b.n	8000bce <_printf_common+0x3e>
 8000c40:	18e1      	adds	r1, r4, r3
 8000c42:	1c5a      	adds	r2, r3, #1
 8000c44:	2030      	movs	r0, #48	; 0x30
 8000c46:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c4a:	4422      	add	r2, r4
 8000c4c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c50:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c54:	3302      	adds	r3, #2
 8000c56:	e7c7      	b.n	8000be8 <_printf_common+0x58>
 8000c58:	2301      	movs	r3, #1
 8000c5a:	4622      	mov	r2, r4
 8000c5c:	4649      	mov	r1, r9
 8000c5e:	4638      	mov	r0, r7
 8000c60:	47c0      	blx	r8
 8000c62:	3001      	adds	r0, #1
 8000c64:	d0e6      	beq.n	8000c34 <_printf_common+0xa4>
 8000c66:	3601      	adds	r6, #1
 8000c68:	e7d9      	b.n	8000c1e <_printf_common+0x8e>
	...

08000c6c <_printf_i>:
 8000c6c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c70:	7e0f      	ldrb	r7, [r1, #24]
 8000c72:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000c74:	2f78      	cmp	r7, #120	; 0x78
 8000c76:	4691      	mov	r9, r2
 8000c78:	4680      	mov	r8, r0
 8000c7a:	460c      	mov	r4, r1
 8000c7c:	469a      	mov	sl, r3
 8000c7e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000c82:	d807      	bhi.n	8000c94 <_printf_i+0x28>
 8000c84:	2f62      	cmp	r7, #98	; 0x62
 8000c86:	d80a      	bhi.n	8000c9e <_printf_i+0x32>
 8000c88:	2f00      	cmp	r7, #0
 8000c8a:	f000 80d8 	beq.w	8000e3e <_printf_i+0x1d2>
 8000c8e:	2f58      	cmp	r7, #88	; 0x58
 8000c90:	f000 80a3 	beq.w	8000dda <_printf_i+0x16e>
 8000c94:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c98:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c9c:	e03a      	b.n	8000d14 <_printf_i+0xa8>
 8000c9e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000ca2:	2b15      	cmp	r3, #21
 8000ca4:	d8f6      	bhi.n	8000c94 <_printf_i+0x28>
 8000ca6:	a101      	add	r1, pc, #4	; (adr r1, 8000cac <_printf_i+0x40>)
 8000ca8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000cac:	08000d05 	.word	0x08000d05
 8000cb0:	08000d19 	.word	0x08000d19
 8000cb4:	08000c95 	.word	0x08000c95
 8000cb8:	08000c95 	.word	0x08000c95
 8000cbc:	08000c95 	.word	0x08000c95
 8000cc0:	08000c95 	.word	0x08000c95
 8000cc4:	08000d19 	.word	0x08000d19
 8000cc8:	08000c95 	.word	0x08000c95
 8000ccc:	08000c95 	.word	0x08000c95
 8000cd0:	08000c95 	.word	0x08000c95
 8000cd4:	08000c95 	.word	0x08000c95
 8000cd8:	08000e25 	.word	0x08000e25
 8000cdc:	08000d49 	.word	0x08000d49
 8000ce0:	08000e07 	.word	0x08000e07
 8000ce4:	08000c95 	.word	0x08000c95
 8000ce8:	08000c95 	.word	0x08000c95
 8000cec:	08000e47 	.word	0x08000e47
 8000cf0:	08000c95 	.word	0x08000c95
 8000cf4:	08000d49 	.word	0x08000d49
 8000cf8:	08000c95 	.word	0x08000c95
 8000cfc:	08000c95 	.word	0x08000c95
 8000d00:	08000e0f 	.word	0x08000e0f
 8000d04:	682b      	ldr	r3, [r5, #0]
 8000d06:	1d1a      	adds	r2, r3, #4
 8000d08:	681b      	ldr	r3, [r3, #0]
 8000d0a:	602a      	str	r2, [r5, #0]
 8000d0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d10:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d14:	2301      	movs	r3, #1
 8000d16:	e0a3      	b.n	8000e60 <_printf_i+0x1f4>
 8000d18:	6820      	ldr	r0, [r4, #0]
 8000d1a:	6829      	ldr	r1, [r5, #0]
 8000d1c:	0606      	lsls	r6, r0, #24
 8000d1e:	f101 0304 	add.w	r3, r1, #4
 8000d22:	d50a      	bpl.n	8000d3a <_printf_i+0xce>
 8000d24:	680e      	ldr	r6, [r1, #0]
 8000d26:	602b      	str	r3, [r5, #0]
 8000d28:	2e00      	cmp	r6, #0
 8000d2a:	da03      	bge.n	8000d34 <_printf_i+0xc8>
 8000d2c:	232d      	movs	r3, #45	; 0x2d
 8000d2e:	4276      	negs	r6, r6
 8000d30:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d34:	485e      	ldr	r0, [pc, #376]	; (8000eb0 <_printf_i+0x244>)
 8000d36:	230a      	movs	r3, #10
 8000d38:	e019      	b.n	8000d6e <_printf_i+0x102>
 8000d3a:	680e      	ldr	r6, [r1, #0]
 8000d3c:	602b      	str	r3, [r5, #0]
 8000d3e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000d42:	bf18      	it	ne
 8000d44:	b236      	sxthne	r6, r6
 8000d46:	e7ef      	b.n	8000d28 <_printf_i+0xbc>
 8000d48:	682b      	ldr	r3, [r5, #0]
 8000d4a:	6820      	ldr	r0, [r4, #0]
 8000d4c:	1d19      	adds	r1, r3, #4
 8000d4e:	6029      	str	r1, [r5, #0]
 8000d50:	0601      	lsls	r1, r0, #24
 8000d52:	d501      	bpl.n	8000d58 <_printf_i+0xec>
 8000d54:	681e      	ldr	r6, [r3, #0]
 8000d56:	e002      	b.n	8000d5e <_printf_i+0xf2>
 8000d58:	0646      	lsls	r6, r0, #25
 8000d5a:	d5fb      	bpl.n	8000d54 <_printf_i+0xe8>
 8000d5c:	881e      	ldrh	r6, [r3, #0]
 8000d5e:	4854      	ldr	r0, [pc, #336]	; (8000eb0 <_printf_i+0x244>)
 8000d60:	2f6f      	cmp	r7, #111	; 0x6f
 8000d62:	bf0c      	ite	eq
 8000d64:	2308      	moveq	r3, #8
 8000d66:	230a      	movne	r3, #10
 8000d68:	2100      	movs	r1, #0
 8000d6a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d6e:	6865      	ldr	r5, [r4, #4]
 8000d70:	60a5      	str	r5, [r4, #8]
 8000d72:	2d00      	cmp	r5, #0
 8000d74:	bfa2      	ittt	ge
 8000d76:	6821      	ldrge	r1, [r4, #0]
 8000d78:	f021 0104 	bicge.w	r1, r1, #4
 8000d7c:	6021      	strge	r1, [r4, #0]
 8000d7e:	b90e      	cbnz	r6, 8000d84 <_printf_i+0x118>
 8000d80:	2d00      	cmp	r5, #0
 8000d82:	d04d      	beq.n	8000e20 <_printf_i+0x1b4>
 8000d84:	4615      	mov	r5, r2
 8000d86:	fbb6 f1f3 	udiv	r1, r6, r3
 8000d8a:	fb03 6711 	mls	r7, r3, r1, r6
 8000d8e:	5dc7      	ldrb	r7, [r0, r7]
 8000d90:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d94:	4637      	mov	r7, r6
 8000d96:	42bb      	cmp	r3, r7
 8000d98:	460e      	mov	r6, r1
 8000d9a:	d9f4      	bls.n	8000d86 <_printf_i+0x11a>
 8000d9c:	2b08      	cmp	r3, #8
 8000d9e:	d10b      	bne.n	8000db8 <_printf_i+0x14c>
 8000da0:	6823      	ldr	r3, [r4, #0]
 8000da2:	07de      	lsls	r6, r3, #31
 8000da4:	d508      	bpl.n	8000db8 <_printf_i+0x14c>
 8000da6:	6923      	ldr	r3, [r4, #16]
 8000da8:	6861      	ldr	r1, [r4, #4]
 8000daa:	4299      	cmp	r1, r3
 8000dac:	bfde      	ittt	le
 8000dae:	2330      	movle	r3, #48	; 0x30
 8000db0:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000db4:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000db8:	1b52      	subs	r2, r2, r5
 8000dba:	6122      	str	r2, [r4, #16]
 8000dbc:	f8cd a000 	str.w	sl, [sp]
 8000dc0:	464b      	mov	r3, r9
 8000dc2:	aa03      	add	r2, sp, #12
 8000dc4:	4621      	mov	r1, r4
 8000dc6:	4640      	mov	r0, r8
 8000dc8:	f7ff fee2 	bl	8000b90 <_printf_common>
 8000dcc:	3001      	adds	r0, #1
 8000dce:	d14c      	bne.n	8000e6a <_printf_i+0x1fe>
 8000dd0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000dd4:	b004      	add	sp, #16
 8000dd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dda:	4835      	ldr	r0, [pc, #212]	; (8000eb0 <_printf_i+0x244>)
 8000ddc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000de0:	6829      	ldr	r1, [r5, #0]
 8000de2:	6823      	ldr	r3, [r4, #0]
 8000de4:	f851 6b04 	ldr.w	r6, [r1], #4
 8000de8:	6029      	str	r1, [r5, #0]
 8000dea:	061d      	lsls	r5, r3, #24
 8000dec:	d514      	bpl.n	8000e18 <_printf_i+0x1ac>
 8000dee:	07df      	lsls	r7, r3, #31
 8000df0:	bf44      	itt	mi
 8000df2:	f043 0320 	orrmi.w	r3, r3, #32
 8000df6:	6023      	strmi	r3, [r4, #0]
 8000df8:	b91e      	cbnz	r6, 8000e02 <_printf_i+0x196>
 8000dfa:	6823      	ldr	r3, [r4, #0]
 8000dfc:	f023 0320 	bic.w	r3, r3, #32
 8000e00:	6023      	str	r3, [r4, #0]
 8000e02:	2310      	movs	r3, #16
 8000e04:	e7b0      	b.n	8000d68 <_printf_i+0xfc>
 8000e06:	6823      	ldr	r3, [r4, #0]
 8000e08:	f043 0320 	orr.w	r3, r3, #32
 8000e0c:	6023      	str	r3, [r4, #0]
 8000e0e:	2378      	movs	r3, #120	; 0x78
 8000e10:	4828      	ldr	r0, [pc, #160]	; (8000eb4 <_printf_i+0x248>)
 8000e12:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e16:	e7e3      	b.n	8000de0 <_printf_i+0x174>
 8000e18:	0659      	lsls	r1, r3, #25
 8000e1a:	bf48      	it	mi
 8000e1c:	b2b6      	uxthmi	r6, r6
 8000e1e:	e7e6      	b.n	8000dee <_printf_i+0x182>
 8000e20:	4615      	mov	r5, r2
 8000e22:	e7bb      	b.n	8000d9c <_printf_i+0x130>
 8000e24:	682b      	ldr	r3, [r5, #0]
 8000e26:	6826      	ldr	r6, [r4, #0]
 8000e28:	6961      	ldr	r1, [r4, #20]
 8000e2a:	1d18      	adds	r0, r3, #4
 8000e2c:	6028      	str	r0, [r5, #0]
 8000e2e:	0635      	lsls	r5, r6, #24
 8000e30:	681b      	ldr	r3, [r3, #0]
 8000e32:	d501      	bpl.n	8000e38 <_printf_i+0x1cc>
 8000e34:	6019      	str	r1, [r3, #0]
 8000e36:	e002      	b.n	8000e3e <_printf_i+0x1d2>
 8000e38:	0670      	lsls	r0, r6, #25
 8000e3a:	d5fb      	bpl.n	8000e34 <_printf_i+0x1c8>
 8000e3c:	8019      	strh	r1, [r3, #0]
 8000e3e:	2300      	movs	r3, #0
 8000e40:	6123      	str	r3, [r4, #16]
 8000e42:	4615      	mov	r5, r2
 8000e44:	e7ba      	b.n	8000dbc <_printf_i+0x150>
 8000e46:	682b      	ldr	r3, [r5, #0]
 8000e48:	1d1a      	adds	r2, r3, #4
 8000e4a:	602a      	str	r2, [r5, #0]
 8000e4c:	681d      	ldr	r5, [r3, #0]
 8000e4e:	6862      	ldr	r2, [r4, #4]
 8000e50:	2100      	movs	r1, #0
 8000e52:	4628      	mov	r0, r5
 8000e54:	f7ff f9cc 	bl	80001f0 <memchr>
 8000e58:	b108      	cbz	r0, 8000e5e <_printf_i+0x1f2>
 8000e5a:	1b40      	subs	r0, r0, r5
 8000e5c:	6060      	str	r0, [r4, #4]
 8000e5e:	6863      	ldr	r3, [r4, #4]
 8000e60:	6123      	str	r3, [r4, #16]
 8000e62:	2300      	movs	r3, #0
 8000e64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e68:	e7a8      	b.n	8000dbc <_printf_i+0x150>
 8000e6a:	6923      	ldr	r3, [r4, #16]
 8000e6c:	462a      	mov	r2, r5
 8000e6e:	4649      	mov	r1, r9
 8000e70:	4640      	mov	r0, r8
 8000e72:	47d0      	blx	sl
 8000e74:	3001      	adds	r0, #1
 8000e76:	d0ab      	beq.n	8000dd0 <_printf_i+0x164>
 8000e78:	6823      	ldr	r3, [r4, #0]
 8000e7a:	079b      	lsls	r3, r3, #30
 8000e7c:	d413      	bmi.n	8000ea6 <_printf_i+0x23a>
 8000e7e:	68e0      	ldr	r0, [r4, #12]
 8000e80:	9b03      	ldr	r3, [sp, #12]
 8000e82:	4298      	cmp	r0, r3
 8000e84:	bfb8      	it	lt
 8000e86:	4618      	movlt	r0, r3
 8000e88:	e7a4      	b.n	8000dd4 <_printf_i+0x168>
 8000e8a:	2301      	movs	r3, #1
 8000e8c:	4632      	mov	r2, r6
 8000e8e:	4649      	mov	r1, r9
 8000e90:	4640      	mov	r0, r8
 8000e92:	47d0      	blx	sl
 8000e94:	3001      	adds	r0, #1
 8000e96:	d09b      	beq.n	8000dd0 <_printf_i+0x164>
 8000e98:	3501      	adds	r5, #1
 8000e9a:	68e3      	ldr	r3, [r4, #12]
 8000e9c:	9903      	ldr	r1, [sp, #12]
 8000e9e:	1a5b      	subs	r3, r3, r1
 8000ea0:	42ab      	cmp	r3, r5
 8000ea2:	dcf2      	bgt.n	8000e8a <_printf_i+0x21e>
 8000ea4:	e7eb      	b.n	8000e7e <_printf_i+0x212>
 8000ea6:	2500      	movs	r5, #0
 8000ea8:	f104 0619 	add.w	r6, r4, #25
 8000eac:	e7f5      	b.n	8000e9a <_printf_i+0x22e>
 8000eae:	bf00      	nop
 8000eb0:	08001545 	.word	0x08001545
 8000eb4:	08001556 	.word	0x08001556

08000eb8 <_sbrk_r>:
 8000eb8:	b538      	push	{r3, r4, r5, lr}
 8000eba:	4d06      	ldr	r5, [pc, #24]	; (8000ed4 <_sbrk_r+0x1c>)
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	4604      	mov	r4, r0
 8000ec0:	4608      	mov	r0, r1
 8000ec2:	602b      	str	r3, [r5, #0]
 8000ec4:	f7ff fad6 	bl	8000474 <_sbrk>
 8000ec8:	1c43      	adds	r3, r0, #1
 8000eca:	d102      	bne.n	8000ed2 <_sbrk_r+0x1a>
 8000ecc:	682b      	ldr	r3, [r5, #0]
 8000ece:	b103      	cbz	r3, 8000ed2 <_sbrk_r+0x1a>
 8000ed0:	6023      	str	r3, [r4, #0]
 8000ed2:	bd38      	pop	{r3, r4, r5, pc}
 8000ed4:	20000090 	.word	0x20000090

08000ed8 <__sread>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	460c      	mov	r4, r1
 8000edc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ee0:	f000 faac 	bl	800143c <_read_r>
 8000ee4:	2800      	cmp	r0, #0
 8000ee6:	bfab      	itete	ge
 8000ee8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000eea:	89a3      	ldrhlt	r3, [r4, #12]
 8000eec:	181b      	addge	r3, r3, r0
 8000eee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ef2:	bfac      	ite	ge
 8000ef4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ef6:	81a3      	strhlt	r3, [r4, #12]
 8000ef8:	bd10      	pop	{r4, pc}

08000efa <__swrite>:
 8000efa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000efe:	461f      	mov	r7, r3
 8000f00:	898b      	ldrh	r3, [r1, #12]
 8000f02:	05db      	lsls	r3, r3, #23
 8000f04:	4605      	mov	r5, r0
 8000f06:	460c      	mov	r4, r1
 8000f08:	4616      	mov	r6, r2
 8000f0a:	d505      	bpl.n	8000f18 <__swrite+0x1e>
 8000f0c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f10:	2302      	movs	r3, #2
 8000f12:	2200      	movs	r2, #0
 8000f14:	f000 f9c4 	bl	80012a0 <_lseek_r>
 8000f18:	89a3      	ldrh	r3, [r4, #12]
 8000f1a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f1e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f22:	81a3      	strh	r3, [r4, #12]
 8000f24:	4632      	mov	r2, r6
 8000f26:	463b      	mov	r3, r7
 8000f28:	4628      	mov	r0, r5
 8000f2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f2e:	f000 b869 	b.w	8001004 <_write_r>

08000f32 <__sseek>:
 8000f32:	b510      	push	{r4, lr}
 8000f34:	460c      	mov	r4, r1
 8000f36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f3a:	f000 f9b1 	bl	80012a0 <_lseek_r>
 8000f3e:	1c43      	adds	r3, r0, #1
 8000f40:	89a3      	ldrh	r3, [r4, #12]
 8000f42:	bf15      	itete	ne
 8000f44:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f46:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f4a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f4e:	81a3      	strheq	r3, [r4, #12]
 8000f50:	bf18      	it	ne
 8000f52:	81a3      	strhne	r3, [r4, #12]
 8000f54:	bd10      	pop	{r4, pc}

08000f56 <__sclose>:
 8000f56:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f5a:	f000 b8d3 	b.w	8001104 <_close_r>
	...

08000f60 <__swbuf_r>:
 8000f60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f62:	460e      	mov	r6, r1
 8000f64:	4614      	mov	r4, r2
 8000f66:	4605      	mov	r5, r0
 8000f68:	b118      	cbz	r0, 8000f72 <__swbuf_r+0x12>
 8000f6a:	6983      	ldr	r3, [r0, #24]
 8000f6c:	b90b      	cbnz	r3, 8000f72 <__swbuf_r+0x12>
 8000f6e:	f7ff fb83 	bl	8000678 <__sinit>
 8000f72:	4b21      	ldr	r3, [pc, #132]	; (8000ff8 <__swbuf_r+0x98>)
 8000f74:	429c      	cmp	r4, r3
 8000f76:	d12b      	bne.n	8000fd0 <__swbuf_r+0x70>
 8000f78:	686c      	ldr	r4, [r5, #4]
 8000f7a:	69a3      	ldr	r3, [r4, #24]
 8000f7c:	60a3      	str	r3, [r4, #8]
 8000f7e:	89a3      	ldrh	r3, [r4, #12]
 8000f80:	071a      	lsls	r2, r3, #28
 8000f82:	d52f      	bpl.n	8000fe4 <__swbuf_r+0x84>
 8000f84:	6923      	ldr	r3, [r4, #16]
 8000f86:	b36b      	cbz	r3, 8000fe4 <__swbuf_r+0x84>
 8000f88:	6923      	ldr	r3, [r4, #16]
 8000f8a:	6820      	ldr	r0, [r4, #0]
 8000f8c:	1ac0      	subs	r0, r0, r3
 8000f8e:	6963      	ldr	r3, [r4, #20]
 8000f90:	b2f6      	uxtb	r6, r6
 8000f92:	4283      	cmp	r3, r0
 8000f94:	4637      	mov	r7, r6
 8000f96:	dc04      	bgt.n	8000fa2 <__swbuf_r+0x42>
 8000f98:	4621      	mov	r1, r4
 8000f9a:	4628      	mov	r0, r5
 8000f9c:	f000 f944 	bl	8001228 <_fflush_r>
 8000fa0:	bb30      	cbnz	r0, 8000ff0 <__swbuf_r+0x90>
 8000fa2:	68a3      	ldr	r3, [r4, #8]
 8000fa4:	3b01      	subs	r3, #1
 8000fa6:	60a3      	str	r3, [r4, #8]
 8000fa8:	6823      	ldr	r3, [r4, #0]
 8000faa:	1c5a      	adds	r2, r3, #1
 8000fac:	6022      	str	r2, [r4, #0]
 8000fae:	701e      	strb	r6, [r3, #0]
 8000fb0:	6963      	ldr	r3, [r4, #20]
 8000fb2:	3001      	adds	r0, #1
 8000fb4:	4283      	cmp	r3, r0
 8000fb6:	d004      	beq.n	8000fc2 <__swbuf_r+0x62>
 8000fb8:	89a3      	ldrh	r3, [r4, #12]
 8000fba:	07db      	lsls	r3, r3, #31
 8000fbc:	d506      	bpl.n	8000fcc <__swbuf_r+0x6c>
 8000fbe:	2e0a      	cmp	r6, #10
 8000fc0:	d104      	bne.n	8000fcc <__swbuf_r+0x6c>
 8000fc2:	4621      	mov	r1, r4
 8000fc4:	4628      	mov	r0, r5
 8000fc6:	f000 f92f 	bl	8001228 <_fflush_r>
 8000fca:	b988      	cbnz	r0, 8000ff0 <__swbuf_r+0x90>
 8000fcc:	4638      	mov	r0, r7
 8000fce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fd0:	4b0a      	ldr	r3, [pc, #40]	; (8000ffc <__swbuf_r+0x9c>)
 8000fd2:	429c      	cmp	r4, r3
 8000fd4:	d101      	bne.n	8000fda <__swbuf_r+0x7a>
 8000fd6:	68ac      	ldr	r4, [r5, #8]
 8000fd8:	e7cf      	b.n	8000f7a <__swbuf_r+0x1a>
 8000fda:	4b09      	ldr	r3, [pc, #36]	; (8001000 <__swbuf_r+0xa0>)
 8000fdc:	429c      	cmp	r4, r3
 8000fde:	bf08      	it	eq
 8000fe0:	68ec      	ldreq	r4, [r5, #12]
 8000fe2:	e7ca      	b.n	8000f7a <__swbuf_r+0x1a>
 8000fe4:	4621      	mov	r1, r4
 8000fe6:	4628      	mov	r0, r5
 8000fe8:	f000 f81e 	bl	8001028 <__swsetup_r>
 8000fec:	2800      	cmp	r0, #0
 8000fee:	d0cb      	beq.n	8000f88 <__swbuf_r+0x28>
 8000ff0:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000ff4:	e7ea      	b.n	8000fcc <__swbuf_r+0x6c>
 8000ff6:	bf00      	nop
 8000ff8:	080014f4 	.word	0x080014f4
 8000ffc:	08001514 	.word	0x08001514
 8001000:	080014d4 	.word	0x080014d4

08001004 <_write_r>:
 8001004:	b538      	push	{r3, r4, r5, lr}
 8001006:	4d07      	ldr	r5, [pc, #28]	; (8001024 <_write_r+0x20>)
 8001008:	4604      	mov	r4, r0
 800100a:	4608      	mov	r0, r1
 800100c:	4611      	mov	r1, r2
 800100e:	2200      	movs	r2, #0
 8001010:	602a      	str	r2, [r5, #0]
 8001012:	461a      	mov	r2, r3
 8001014:	f7ff f9e1 	bl	80003da <_write>
 8001018:	1c43      	adds	r3, r0, #1
 800101a:	d102      	bne.n	8001022 <_write_r+0x1e>
 800101c:	682b      	ldr	r3, [r5, #0]
 800101e:	b103      	cbz	r3, 8001022 <_write_r+0x1e>
 8001020:	6023      	str	r3, [r4, #0]
 8001022:	bd38      	pop	{r3, r4, r5, pc}
 8001024:	20000090 	.word	0x20000090

08001028 <__swsetup_r>:
 8001028:	4b32      	ldr	r3, [pc, #200]	; (80010f4 <__swsetup_r+0xcc>)
 800102a:	b570      	push	{r4, r5, r6, lr}
 800102c:	681d      	ldr	r5, [r3, #0]
 800102e:	4606      	mov	r6, r0
 8001030:	460c      	mov	r4, r1
 8001032:	b125      	cbz	r5, 800103e <__swsetup_r+0x16>
 8001034:	69ab      	ldr	r3, [r5, #24]
 8001036:	b913      	cbnz	r3, 800103e <__swsetup_r+0x16>
 8001038:	4628      	mov	r0, r5
 800103a:	f7ff fb1d 	bl	8000678 <__sinit>
 800103e:	4b2e      	ldr	r3, [pc, #184]	; (80010f8 <__swsetup_r+0xd0>)
 8001040:	429c      	cmp	r4, r3
 8001042:	d10f      	bne.n	8001064 <__swsetup_r+0x3c>
 8001044:	686c      	ldr	r4, [r5, #4]
 8001046:	89a3      	ldrh	r3, [r4, #12]
 8001048:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800104c:	0719      	lsls	r1, r3, #28
 800104e:	d42c      	bmi.n	80010aa <__swsetup_r+0x82>
 8001050:	06dd      	lsls	r5, r3, #27
 8001052:	d411      	bmi.n	8001078 <__swsetup_r+0x50>
 8001054:	2309      	movs	r3, #9
 8001056:	6033      	str	r3, [r6, #0]
 8001058:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800105c:	81a3      	strh	r3, [r4, #12]
 800105e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001062:	e03e      	b.n	80010e2 <__swsetup_r+0xba>
 8001064:	4b25      	ldr	r3, [pc, #148]	; (80010fc <__swsetup_r+0xd4>)
 8001066:	429c      	cmp	r4, r3
 8001068:	d101      	bne.n	800106e <__swsetup_r+0x46>
 800106a:	68ac      	ldr	r4, [r5, #8]
 800106c:	e7eb      	b.n	8001046 <__swsetup_r+0x1e>
 800106e:	4b24      	ldr	r3, [pc, #144]	; (8001100 <__swsetup_r+0xd8>)
 8001070:	429c      	cmp	r4, r3
 8001072:	bf08      	it	eq
 8001074:	68ec      	ldreq	r4, [r5, #12]
 8001076:	e7e6      	b.n	8001046 <__swsetup_r+0x1e>
 8001078:	0758      	lsls	r0, r3, #29
 800107a:	d512      	bpl.n	80010a2 <__swsetup_r+0x7a>
 800107c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800107e:	b141      	cbz	r1, 8001092 <__swsetup_r+0x6a>
 8001080:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001084:	4299      	cmp	r1, r3
 8001086:	d002      	beq.n	800108e <__swsetup_r+0x66>
 8001088:	4630      	mov	r0, r6
 800108a:	f000 f98d 	bl	80013a8 <_free_r>
 800108e:	2300      	movs	r3, #0
 8001090:	6363      	str	r3, [r4, #52]	; 0x34
 8001092:	89a3      	ldrh	r3, [r4, #12]
 8001094:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001098:	81a3      	strh	r3, [r4, #12]
 800109a:	2300      	movs	r3, #0
 800109c:	6063      	str	r3, [r4, #4]
 800109e:	6923      	ldr	r3, [r4, #16]
 80010a0:	6023      	str	r3, [r4, #0]
 80010a2:	89a3      	ldrh	r3, [r4, #12]
 80010a4:	f043 0308 	orr.w	r3, r3, #8
 80010a8:	81a3      	strh	r3, [r4, #12]
 80010aa:	6923      	ldr	r3, [r4, #16]
 80010ac:	b94b      	cbnz	r3, 80010c2 <__swsetup_r+0x9a>
 80010ae:	89a3      	ldrh	r3, [r4, #12]
 80010b0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80010b4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80010b8:	d003      	beq.n	80010c2 <__swsetup_r+0x9a>
 80010ba:	4621      	mov	r1, r4
 80010bc:	4630      	mov	r0, r6
 80010be:	f000 f927 	bl	8001310 <__smakebuf_r>
 80010c2:	89a0      	ldrh	r0, [r4, #12]
 80010c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010c8:	f010 0301 	ands.w	r3, r0, #1
 80010cc:	d00a      	beq.n	80010e4 <__swsetup_r+0xbc>
 80010ce:	2300      	movs	r3, #0
 80010d0:	60a3      	str	r3, [r4, #8]
 80010d2:	6963      	ldr	r3, [r4, #20]
 80010d4:	425b      	negs	r3, r3
 80010d6:	61a3      	str	r3, [r4, #24]
 80010d8:	6923      	ldr	r3, [r4, #16]
 80010da:	b943      	cbnz	r3, 80010ee <__swsetup_r+0xc6>
 80010dc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80010e0:	d1ba      	bne.n	8001058 <__swsetup_r+0x30>
 80010e2:	bd70      	pop	{r4, r5, r6, pc}
 80010e4:	0781      	lsls	r1, r0, #30
 80010e6:	bf58      	it	pl
 80010e8:	6963      	ldrpl	r3, [r4, #20]
 80010ea:	60a3      	str	r3, [r4, #8]
 80010ec:	e7f4      	b.n	80010d8 <__swsetup_r+0xb0>
 80010ee:	2000      	movs	r0, #0
 80010f0:	e7f7      	b.n	80010e2 <__swsetup_r+0xba>
 80010f2:	bf00      	nop
 80010f4:	20000000 	.word	0x20000000
 80010f8:	080014f4 	.word	0x080014f4
 80010fc:	08001514 	.word	0x08001514
 8001100:	080014d4 	.word	0x080014d4

08001104 <_close_r>:
 8001104:	b538      	push	{r3, r4, r5, lr}
 8001106:	4d06      	ldr	r5, [pc, #24]	; (8001120 <_close_r+0x1c>)
 8001108:	2300      	movs	r3, #0
 800110a:	4604      	mov	r4, r0
 800110c:	4608      	mov	r0, r1
 800110e:	602b      	str	r3, [r5, #0]
 8001110:	f7ff f97f 	bl	8000412 <_close>
 8001114:	1c43      	adds	r3, r0, #1
 8001116:	d102      	bne.n	800111e <_close_r+0x1a>
 8001118:	682b      	ldr	r3, [r5, #0]
 800111a:	b103      	cbz	r3, 800111e <_close_r+0x1a>
 800111c:	6023      	str	r3, [r4, #0]
 800111e:	bd38      	pop	{r3, r4, r5, pc}
 8001120:	20000090 	.word	0x20000090

08001124 <__sflush_r>:
 8001124:	898a      	ldrh	r2, [r1, #12]
 8001126:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001128:	4605      	mov	r5, r0
 800112a:	0710      	lsls	r0, r2, #28
 800112c:	460c      	mov	r4, r1
 800112e:	d457      	bmi.n	80011e0 <__sflush_r+0xbc>
 8001130:	684b      	ldr	r3, [r1, #4]
 8001132:	2b00      	cmp	r3, #0
 8001134:	dc04      	bgt.n	8001140 <__sflush_r+0x1c>
 8001136:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001138:	2b00      	cmp	r3, #0
 800113a:	dc01      	bgt.n	8001140 <__sflush_r+0x1c>
 800113c:	2000      	movs	r0, #0
 800113e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001140:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001142:	2e00      	cmp	r6, #0
 8001144:	d0fa      	beq.n	800113c <__sflush_r+0x18>
 8001146:	2300      	movs	r3, #0
 8001148:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800114c:	682f      	ldr	r7, [r5, #0]
 800114e:	602b      	str	r3, [r5, #0]
 8001150:	d032      	beq.n	80011b8 <__sflush_r+0x94>
 8001152:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001154:	89a3      	ldrh	r3, [r4, #12]
 8001156:	075a      	lsls	r2, r3, #29
 8001158:	d505      	bpl.n	8001166 <__sflush_r+0x42>
 800115a:	6863      	ldr	r3, [r4, #4]
 800115c:	1ac0      	subs	r0, r0, r3
 800115e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001160:	b10b      	cbz	r3, 8001166 <__sflush_r+0x42>
 8001162:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001164:	1ac0      	subs	r0, r0, r3
 8001166:	2300      	movs	r3, #0
 8001168:	4602      	mov	r2, r0
 800116a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800116c:	6a21      	ldr	r1, [r4, #32]
 800116e:	4628      	mov	r0, r5
 8001170:	47b0      	blx	r6
 8001172:	1c43      	adds	r3, r0, #1
 8001174:	89a3      	ldrh	r3, [r4, #12]
 8001176:	d106      	bne.n	8001186 <__sflush_r+0x62>
 8001178:	6829      	ldr	r1, [r5, #0]
 800117a:	291d      	cmp	r1, #29
 800117c:	d82c      	bhi.n	80011d8 <__sflush_r+0xb4>
 800117e:	4a29      	ldr	r2, [pc, #164]	; (8001224 <__sflush_r+0x100>)
 8001180:	40ca      	lsrs	r2, r1
 8001182:	07d6      	lsls	r6, r2, #31
 8001184:	d528      	bpl.n	80011d8 <__sflush_r+0xb4>
 8001186:	2200      	movs	r2, #0
 8001188:	6062      	str	r2, [r4, #4]
 800118a:	04d9      	lsls	r1, r3, #19
 800118c:	6922      	ldr	r2, [r4, #16]
 800118e:	6022      	str	r2, [r4, #0]
 8001190:	d504      	bpl.n	800119c <__sflush_r+0x78>
 8001192:	1c42      	adds	r2, r0, #1
 8001194:	d101      	bne.n	800119a <__sflush_r+0x76>
 8001196:	682b      	ldr	r3, [r5, #0]
 8001198:	b903      	cbnz	r3, 800119c <__sflush_r+0x78>
 800119a:	6560      	str	r0, [r4, #84]	; 0x54
 800119c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800119e:	602f      	str	r7, [r5, #0]
 80011a0:	2900      	cmp	r1, #0
 80011a2:	d0cb      	beq.n	800113c <__sflush_r+0x18>
 80011a4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011a8:	4299      	cmp	r1, r3
 80011aa:	d002      	beq.n	80011b2 <__sflush_r+0x8e>
 80011ac:	4628      	mov	r0, r5
 80011ae:	f000 f8fb 	bl	80013a8 <_free_r>
 80011b2:	2000      	movs	r0, #0
 80011b4:	6360      	str	r0, [r4, #52]	; 0x34
 80011b6:	e7c2      	b.n	800113e <__sflush_r+0x1a>
 80011b8:	6a21      	ldr	r1, [r4, #32]
 80011ba:	2301      	movs	r3, #1
 80011bc:	4628      	mov	r0, r5
 80011be:	47b0      	blx	r6
 80011c0:	1c41      	adds	r1, r0, #1
 80011c2:	d1c7      	bne.n	8001154 <__sflush_r+0x30>
 80011c4:	682b      	ldr	r3, [r5, #0]
 80011c6:	2b00      	cmp	r3, #0
 80011c8:	d0c4      	beq.n	8001154 <__sflush_r+0x30>
 80011ca:	2b1d      	cmp	r3, #29
 80011cc:	d001      	beq.n	80011d2 <__sflush_r+0xae>
 80011ce:	2b16      	cmp	r3, #22
 80011d0:	d101      	bne.n	80011d6 <__sflush_r+0xb2>
 80011d2:	602f      	str	r7, [r5, #0]
 80011d4:	e7b2      	b.n	800113c <__sflush_r+0x18>
 80011d6:	89a3      	ldrh	r3, [r4, #12]
 80011d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011dc:	81a3      	strh	r3, [r4, #12]
 80011de:	e7ae      	b.n	800113e <__sflush_r+0x1a>
 80011e0:	690f      	ldr	r7, [r1, #16]
 80011e2:	2f00      	cmp	r7, #0
 80011e4:	d0aa      	beq.n	800113c <__sflush_r+0x18>
 80011e6:	0793      	lsls	r3, r2, #30
 80011e8:	680e      	ldr	r6, [r1, #0]
 80011ea:	bf08      	it	eq
 80011ec:	694b      	ldreq	r3, [r1, #20]
 80011ee:	600f      	str	r7, [r1, #0]
 80011f0:	bf18      	it	ne
 80011f2:	2300      	movne	r3, #0
 80011f4:	1bf6      	subs	r6, r6, r7
 80011f6:	608b      	str	r3, [r1, #8]
 80011f8:	2e00      	cmp	r6, #0
 80011fa:	dd9f      	ble.n	800113c <__sflush_r+0x18>
 80011fc:	6a21      	ldr	r1, [r4, #32]
 80011fe:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001202:	4633      	mov	r3, r6
 8001204:	463a      	mov	r2, r7
 8001206:	4628      	mov	r0, r5
 8001208:	47e0      	blx	ip
 800120a:	2800      	cmp	r0, #0
 800120c:	dc06      	bgt.n	800121c <__sflush_r+0xf8>
 800120e:	89a3      	ldrh	r3, [r4, #12]
 8001210:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001214:	81a3      	strh	r3, [r4, #12]
 8001216:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800121a:	e790      	b.n	800113e <__sflush_r+0x1a>
 800121c:	4407      	add	r7, r0
 800121e:	1a36      	subs	r6, r6, r0
 8001220:	e7ea      	b.n	80011f8 <__sflush_r+0xd4>
 8001222:	bf00      	nop
 8001224:	20400001 	.word	0x20400001

08001228 <_fflush_r>:
 8001228:	b538      	push	{r3, r4, r5, lr}
 800122a:	690b      	ldr	r3, [r1, #16]
 800122c:	4605      	mov	r5, r0
 800122e:	460c      	mov	r4, r1
 8001230:	b913      	cbnz	r3, 8001238 <_fflush_r+0x10>
 8001232:	2500      	movs	r5, #0
 8001234:	4628      	mov	r0, r5
 8001236:	bd38      	pop	{r3, r4, r5, pc}
 8001238:	b118      	cbz	r0, 8001242 <_fflush_r+0x1a>
 800123a:	6983      	ldr	r3, [r0, #24]
 800123c:	b90b      	cbnz	r3, 8001242 <_fflush_r+0x1a>
 800123e:	f7ff fa1b 	bl	8000678 <__sinit>
 8001242:	4b14      	ldr	r3, [pc, #80]	; (8001294 <_fflush_r+0x6c>)
 8001244:	429c      	cmp	r4, r3
 8001246:	d11b      	bne.n	8001280 <_fflush_r+0x58>
 8001248:	686c      	ldr	r4, [r5, #4]
 800124a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800124e:	2b00      	cmp	r3, #0
 8001250:	d0ef      	beq.n	8001232 <_fflush_r+0xa>
 8001252:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001254:	07d0      	lsls	r0, r2, #31
 8001256:	d404      	bmi.n	8001262 <_fflush_r+0x3a>
 8001258:	0599      	lsls	r1, r3, #22
 800125a:	d402      	bmi.n	8001262 <_fflush_r+0x3a>
 800125c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800125e:	f7ff faa9 	bl	80007b4 <__retarget_lock_acquire_recursive>
 8001262:	4628      	mov	r0, r5
 8001264:	4621      	mov	r1, r4
 8001266:	f7ff ff5d 	bl	8001124 <__sflush_r>
 800126a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800126c:	07da      	lsls	r2, r3, #31
 800126e:	4605      	mov	r5, r0
 8001270:	d4e0      	bmi.n	8001234 <_fflush_r+0xc>
 8001272:	89a3      	ldrh	r3, [r4, #12]
 8001274:	059b      	lsls	r3, r3, #22
 8001276:	d4dd      	bmi.n	8001234 <_fflush_r+0xc>
 8001278:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800127a:	f7ff fa9c 	bl	80007b6 <__retarget_lock_release_recursive>
 800127e:	e7d9      	b.n	8001234 <_fflush_r+0xc>
 8001280:	4b05      	ldr	r3, [pc, #20]	; (8001298 <_fflush_r+0x70>)
 8001282:	429c      	cmp	r4, r3
 8001284:	d101      	bne.n	800128a <_fflush_r+0x62>
 8001286:	68ac      	ldr	r4, [r5, #8]
 8001288:	e7df      	b.n	800124a <_fflush_r+0x22>
 800128a:	4b04      	ldr	r3, [pc, #16]	; (800129c <_fflush_r+0x74>)
 800128c:	429c      	cmp	r4, r3
 800128e:	bf08      	it	eq
 8001290:	68ec      	ldreq	r4, [r5, #12]
 8001292:	e7da      	b.n	800124a <_fflush_r+0x22>
 8001294:	080014f4 	.word	0x080014f4
 8001298:	08001514 	.word	0x08001514
 800129c:	080014d4 	.word	0x080014d4

080012a0 <_lseek_r>:
 80012a0:	b538      	push	{r3, r4, r5, lr}
 80012a2:	4d07      	ldr	r5, [pc, #28]	; (80012c0 <_lseek_r+0x20>)
 80012a4:	4604      	mov	r4, r0
 80012a6:	4608      	mov	r0, r1
 80012a8:	4611      	mov	r1, r2
 80012aa:	2200      	movs	r2, #0
 80012ac:	602a      	str	r2, [r5, #0]
 80012ae:	461a      	mov	r2, r3
 80012b0:	f7ff f8d3 	bl	800045a <_lseek>
 80012b4:	1c43      	adds	r3, r0, #1
 80012b6:	d102      	bne.n	80012be <_lseek_r+0x1e>
 80012b8:	682b      	ldr	r3, [r5, #0]
 80012ba:	b103      	cbz	r3, 80012be <_lseek_r+0x1e>
 80012bc:	6023      	str	r3, [r4, #0]
 80012be:	bd38      	pop	{r3, r4, r5, pc}
 80012c0:	20000090 	.word	0x20000090

080012c4 <__swhatbuf_r>:
 80012c4:	b570      	push	{r4, r5, r6, lr}
 80012c6:	460e      	mov	r6, r1
 80012c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012cc:	2900      	cmp	r1, #0
 80012ce:	b096      	sub	sp, #88	; 0x58
 80012d0:	4614      	mov	r4, r2
 80012d2:	461d      	mov	r5, r3
 80012d4:	da08      	bge.n	80012e8 <__swhatbuf_r+0x24>
 80012d6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80012da:	2200      	movs	r2, #0
 80012dc:	602a      	str	r2, [r5, #0]
 80012de:	061a      	lsls	r2, r3, #24
 80012e0:	d410      	bmi.n	8001304 <__swhatbuf_r+0x40>
 80012e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012e6:	e00e      	b.n	8001306 <__swhatbuf_r+0x42>
 80012e8:	466a      	mov	r2, sp
 80012ea:	f000 f8b9 	bl	8001460 <_fstat_r>
 80012ee:	2800      	cmp	r0, #0
 80012f0:	dbf1      	blt.n	80012d6 <__swhatbuf_r+0x12>
 80012f2:	9a01      	ldr	r2, [sp, #4]
 80012f4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80012f8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80012fc:	425a      	negs	r2, r3
 80012fe:	415a      	adcs	r2, r3
 8001300:	602a      	str	r2, [r5, #0]
 8001302:	e7ee      	b.n	80012e2 <__swhatbuf_r+0x1e>
 8001304:	2340      	movs	r3, #64	; 0x40
 8001306:	2000      	movs	r0, #0
 8001308:	6023      	str	r3, [r4, #0]
 800130a:	b016      	add	sp, #88	; 0x58
 800130c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001310 <__smakebuf_r>:
 8001310:	898b      	ldrh	r3, [r1, #12]
 8001312:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001314:	079d      	lsls	r5, r3, #30
 8001316:	4606      	mov	r6, r0
 8001318:	460c      	mov	r4, r1
 800131a:	d507      	bpl.n	800132c <__smakebuf_r+0x1c>
 800131c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001320:	6023      	str	r3, [r4, #0]
 8001322:	6123      	str	r3, [r4, #16]
 8001324:	2301      	movs	r3, #1
 8001326:	6163      	str	r3, [r4, #20]
 8001328:	b002      	add	sp, #8
 800132a:	bd70      	pop	{r4, r5, r6, pc}
 800132c:	ab01      	add	r3, sp, #4
 800132e:	466a      	mov	r2, sp
 8001330:	f7ff ffc8 	bl	80012c4 <__swhatbuf_r>
 8001334:	9900      	ldr	r1, [sp, #0]
 8001336:	4605      	mov	r5, r0
 8001338:	4630      	mov	r0, r6
 800133a:	f7ff fa5d 	bl	80007f8 <_malloc_r>
 800133e:	b948      	cbnz	r0, 8001354 <__smakebuf_r+0x44>
 8001340:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001344:	059a      	lsls	r2, r3, #22
 8001346:	d4ef      	bmi.n	8001328 <__smakebuf_r+0x18>
 8001348:	f023 0303 	bic.w	r3, r3, #3
 800134c:	f043 0302 	orr.w	r3, r3, #2
 8001350:	81a3      	strh	r3, [r4, #12]
 8001352:	e7e3      	b.n	800131c <__smakebuf_r+0xc>
 8001354:	4b0d      	ldr	r3, [pc, #52]	; (800138c <__smakebuf_r+0x7c>)
 8001356:	62b3      	str	r3, [r6, #40]	; 0x28
 8001358:	89a3      	ldrh	r3, [r4, #12]
 800135a:	6020      	str	r0, [r4, #0]
 800135c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001360:	81a3      	strh	r3, [r4, #12]
 8001362:	9b00      	ldr	r3, [sp, #0]
 8001364:	6163      	str	r3, [r4, #20]
 8001366:	9b01      	ldr	r3, [sp, #4]
 8001368:	6120      	str	r0, [r4, #16]
 800136a:	b15b      	cbz	r3, 8001384 <__smakebuf_r+0x74>
 800136c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001370:	4630      	mov	r0, r6
 8001372:	f000 f887 	bl	8001484 <_isatty_r>
 8001376:	b128      	cbz	r0, 8001384 <__smakebuf_r+0x74>
 8001378:	89a3      	ldrh	r3, [r4, #12]
 800137a:	f023 0303 	bic.w	r3, r3, #3
 800137e:	f043 0301 	orr.w	r3, r3, #1
 8001382:	81a3      	strh	r3, [r4, #12]
 8001384:	89a0      	ldrh	r0, [r4, #12]
 8001386:	4305      	orrs	r5, r0
 8001388:	81a5      	strh	r5, [r4, #12]
 800138a:	e7cd      	b.n	8001328 <__smakebuf_r+0x18>
 800138c:	08000611 	.word	0x08000611

08001390 <__malloc_lock>:
 8001390:	4801      	ldr	r0, [pc, #4]	; (8001398 <__malloc_lock+0x8>)
 8001392:	f7ff ba0f 	b.w	80007b4 <__retarget_lock_acquire_recursive>
 8001396:	bf00      	nop
 8001398:	20000084 	.word	0x20000084

0800139c <__malloc_unlock>:
 800139c:	4801      	ldr	r0, [pc, #4]	; (80013a4 <__malloc_unlock+0x8>)
 800139e:	f7ff ba0a 	b.w	80007b6 <__retarget_lock_release_recursive>
 80013a2:	bf00      	nop
 80013a4:	20000084 	.word	0x20000084

080013a8 <_free_r>:
 80013a8:	b538      	push	{r3, r4, r5, lr}
 80013aa:	4605      	mov	r5, r0
 80013ac:	2900      	cmp	r1, #0
 80013ae:	d041      	beq.n	8001434 <_free_r+0x8c>
 80013b0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80013b4:	1f0c      	subs	r4, r1, #4
 80013b6:	2b00      	cmp	r3, #0
 80013b8:	bfb8      	it	lt
 80013ba:	18e4      	addlt	r4, r4, r3
 80013bc:	f7ff ffe8 	bl	8001390 <__malloc_lock>
 80013c0:	4a1d      	ldr	r2, [pc, #116]	; (8001438 <_free_r+0x90>)
 80013c2:	6813      	ldr	r3, [r2, #0]
 80013c4:	b933      	cbnz	r3, 80013d4 <_free_r+0x2c>
 80013c6:	6063      	str	r3, [r4, #4]
 80013c8:	6014      	str	r4, [r2, #0]
 80013ca:	4628      	mov	r0, r5
 80013cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80013d0:	f7ff bfe4 	b.w	800139c <__malloc_unlock>
 80013d4:	42a3      	cmp	r3, r4
 80013d6:	d908      	bls.n	80013ea <_free_r+0x42>
 80013d8:	6820      	ldr	r0, [r4, #0]
 80013da:	1821      	adds	r1, r4, r0
 80013dc:	428b      	cmp	r3, r1
 80013de:	bf01      	itttt	eq
 80013e0:	6819      	ldreq	r1, [r3, #0]
 80013e2:	685b      	ldreq	r3, [r3, #4]
 80013e4:	1809      	addeq	r1, r1, r0
 80013e6:	6021      	streq	r1, [r4, #0]
 80013e8:	e7ed      	b.n	80013c6 <_free_r+0x1e>
 80013ea:	461a      	mov	r2, r3
 80013ec:	685b      	ldr	r3, [r3, #4]
 80013ee:	b10b      	cbz	r3, 80013f4 <_free_r+0x4c>
 80013f0:	42a3      	cmp	r3, r4
 80013f2:	d9fa      	bls.n	80013ea <_free_r+0x42>
 80013f4:	6811      	ldr	r1, [r2, #0]
 80013f6:	1850      	adds	r0, r2, r1
 80013f8:	42a0      	cmp	r0, r4
 80013fa:	d10b      	bne.n	8001414 <_free_r+0x6c>
 80013fc:	6820      	ldr	r0, [r4, #0]
 80013fe:	4401      	add	r1, r0
 8001400:	1850      	adds	r0, r2, r1
 8001402:	4283      	cmp	r3, r0
 8001404:	6011      	str	r1, [r2, #0]
 8001406:	d1e0      	bne.n	80013ca <_free_r+0x22>
 8001408:	6818      	ldr	r0, [r3, #0]
 800140a:	685b      	ldr	r3, [r3, #4]
 800140c:	6053      	str	r3, [r2, #4]
 800140e:	4401      	add	r1, r0
 8001410:	6011      	str	r1, [r2, #0]
 8001412:	e7da      	b.n	80013ca <_free_r+0x22>
 8001414:	d902      	bls.n	800141c <_free_r+0x74>
 8001416:	230c      	movs	r3, #12
 8001418:	602b      	str	r3, [r5, #0]
 800141a:	e7d6      	b.n	80013ca <_free_r+0x22>
 800141c:	6820      	ldr	r0, [r4, #0]
 800141e:	1821      	adds	r1, r4, r0
 8001420:	428b      	cmp	r3, r1
 8001422:	bf04      	itt	eq
 8001424:	6819      	ldreq	r1, [r3, #0]
 8001426:	685b      	ldreq	r3, [r3, #4]
 8001428:	6063      	str	r3, [r4, #4]
 800142a:	bf04      	itt	eq
 800142c:	1809      	addeq	r1, r1, r0
 800142e:	6021      	streq	r1, [r4, #0]
 8001430:	6054      	str	r4, [r2, #4]
 8001432:	e7ca      	b.n	80013ca <_free_r+0x22>
 8001434:	bd38      	pop	{r3, r4, r5, pc}
 8001436:	bf00      	nop
 8001438:	20000088 	.word	0x20000088

0800143c <_read_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d07      	ldr	r5, [pc, #28]	; (800145c <_read_r+0x20>)
 8001440:	4604      	mov	r4, r0
 8001442:	4608      	mov	r0, r1
 8001444:	4611      	mov	r1, r2
 8001446:	2200      	movs	r2, #0
 8001448:	602a      	str	r2, [r5, #0]
 800144a:	461a      	mov	r2, r3
 800144c:	f7fe ffa8 	bl	80003a0 <_read>
 8001450:	1c43      	adds	r3, r0, #1
 8001452:	d102      	bne.n	800145a <_read_r+0x1e>
 8001454:	682b      	ldr	r3, [r5, #0]
 8001456:	b103      	cbz	r3, 800145a <_read_r+0x1e>
 8001458:	6023      	str	r3, [r4, #0]
 800145a:	bd38      	pop	{r3, r4, r5, pc}
 800145c:	20000090 	.word	0x20000090

08001460 <_fstat_r>:
 8001460:	b538      	push	{r3, r4, r5, lr}
 8001462:	4d07      	ldr	r5, [pc, #28]	; (8001480 <_fstat_r+0x20>)
 8001464:	2300      	movs	r3, #0
 8001466:	4604      	mov	r4, r0
 8001468:	4608      	mov	r0, r1
 800146a:	4611      	mov	r1, r2
 800146c:	602b      	str	r3, [r5, #0]
 800146e:	f7fe ffdb 	bl	8000428 <_fstat>
 8001472:	1c43      	adds	r3, r0, #1
 8001474:	d102      	bne.n	800147c <_fstat_r+0x1c>
 8001476:	682b      	ldr	r3, [r5, #0]
 8001478:	b103      	cbz	r3, 800147c <_fstat_r+0x1c>
 800147a:	6023      	str	r3, [r4, #0]
 800147c:	bd38      	pop	{r3, r4, r5, pc}
 800147e:	bf00      	nop
 8001480:	20000090 	.word	0x20000090

08001484 <_isatty_r>:
 8001484:	b538      	push	{r3, r4, r5, lr}
 8001486:	4d06      	ldr	r5, [pc, #24]	; (80014a0 <_isatty_r+0x1c>)
 8001488:	2300      	movs	r3, #0
 800148a:	4604      	mov	r4, r0
 800148c:	4608      	mov	r0, r1
 800148e:	602b      	str	r3, [r5, #0]
 8001490:	f7fe ffd9 	bl	8000446 <_isatty>
 8001494:	1c43      	adds	r3, r0, #1
 8001496:	d102      	bne.n	800149e <_isatty_r+0x1a>
 8001498:	682b      	ldr	r3, [r5, #0]
 800149a:	b103      	cbz	r3, 800149e <_isatty_r+0x1a>
 800149c:	6023      	str	r3, [r4, #0]
 800149e:	bd38      	pop	{r3, r4, r5, pc}
 80014a0:	20000090 	.word	0x20000090

080014a4 <_init>:
 80014a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014a6:	bf00      	nop
 80014a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014aa:	bc08      	pop	{r3}
 80014ac:	469e      	mov	lr, r3
 80014ae:	4770      	bx	lr

080014b0 <_fini>:
 80014b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b2:	bf00      	nop
 80014b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014b6:	bc08      	pop	{r3}
 80014b8:	469e      	mov	lr, r3
 80014ba:	4770      	bx	lr
